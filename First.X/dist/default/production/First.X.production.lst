

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 17 03:13:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F877A Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010F                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269                           
   270                           	psect	idataBANK1
   271  1FA9                     __pidataBANK1:
   272                           
   273                           ;initializer for _temp_c
   274  1FA9  3400               	retlw	0
   275  1FAA  3400               	retlw	0
   276  1FAB  34C0               	retlw	192
   277  1FAC  3441               	retlw	65
   278                           
   279                           ;initializer for _clock_mode
   280  1FAD  3401               	retlw	1
   281                           
   282                           ;initializer for _PM
   283  1FAE  3401               	retlw	1
   284                           
   285                           ;initializer for _hour
   286  1FAF  340D               	retlw	13
   287  000E                     _TMR1L	set	14
   288  000F                     _TMR1H	set	15
   289  0010                     _T1CONbits	set	16
   290  000C                     _PIR1bits	set	12
   291  0010                     _T1CON	set	16
   292  000B                     _INTCON	set	11
   293  0008                     _PORTD	set	8
   294  001E                     _ADRESH	set	30
   295  001F                     _ADCON0bits	set	31
   296  001F                     _ADCON0	set	31
   297  0006                     _PORTB	set	6
   298  000B                     _INTCONbits	set	11
   299  005A                     _TMR0IF	set	90
   300  0042                     _RD2	set	66
   301  0041                     _RD1	set	65
   302  0040                     _RD0	set	64
   303  005D                     _T0IE	set	93
   304  005F                     _GIE	set	95
   305  0035                     _RB5	set	53
   306  0036                     _RB6	set	54
   307  0037                     _RB7	set	55
   308  0081                     _OPTION_REG	set	129
   309  0088                     _TRISD	set	136
   310  009E                     _ADRESL	set	158
   311  009F                     _ADCON1	set	159
   312  0085                     _TRISA	set	133
   313  0086                     _TRISB	set	134
   314                           
   315                           	psect	strings
   316  1000                     __pstrings:
   317  1000                     stringtab:
   318  1000                     __stringtab:
   319                           
   320                           ;	String table - string pointers are 1 byte each
   321  1000  1BFF               	btfsc	btemp+1,7
   322  1001  280A               	ljmp	stringcode
   323  1002  1383               	bcf	3,7
   324  1003  187F               	btfsc	btemp+1,0
   325  1004  1783               	bsf	3,7
   326  1005  0800               	movf	0,w
   327  1006  0A84               	incf	4,f
   328  1007  1903               	skipnz
   329  1008  0AFF               	incf	btemp+1,f
   330  1009  0008               	return
   331  100A                     stringcode:
   332  100A                     stringdir:
   333  100A  3010               	movlw	high stringdir
   334  100B  008A               	movwf	10
   335  100C  0804               	movf	4,w
   336  100D  0A84               	incf	4,f
   337  100E  0782               	addwf	2,f
   338  100F                     __stringbase:
   339  100F  3400               	retlw	0
   340  1010                     __end_of__stringtab:
   341  1010                     STR_8:
   342  1010  3454               	retlw	84	;'T'
   343  1011  3445               	retlw	69	;'E'
   344  1012  344D               	retlw	77	;'M'
   345  1013  3450               	retlw	80	;'P'
   346  1014  343A               	retlw	58	;':'
   347  1015  3420               	retlw	32	;' '
   348  1016  3420               	retlw	32	;' '
   349  1017  3400               	retlw	0
   350  1018                     STR_1:
   351  1018  3445               	retlw	69	;'E'
   352  1019  3452               	retlw	82	;'R'
   353  101A  3452               	retlw	82	;'R'
   354  101B  3400               	retlw	0
   355  101C                     STR_3:
   356  101C  3441               	retlw	65	;'A'
   357  101D  344D               	retlw	77	;'M'
   358  101E  3400               	retlw	0
   359  101F                     STR_2:
   360  101F  3450               	retlw	80	;'P'
   361  1020  344D               	retlw	77	;'M'
   362  1021  3400               	retlw	0
   363  1015                     
   364                           	psect	cinit
   365  0013                     start_initialization:	
   366                           ; #config settings
   367                           
   368  0013                     __initialization:
   369                           
   370                           ; Initialize objects allocated to BANK1
   371  0013  1383               	bcf	3,7	;select IRP bank0
   372  0014  30ED               	movlw	low (__pdataBANK1+7)
   373  0015  00FD               	movwf	btemp+-1
   374  0016  301F               	movlw	high __pidataBANK1
   375  0017  00FE               	movwf	btemp
   376  0018  30A9               	movlw	low __pidataBANK1
   377  0019  00FF               	movwf	btemp+1
   378  001A  30E6               	movlw	low __pdataBANK1
   379  001B  0084               	movwf	4
   380  001C  160A  158A  27C4  120A  118A  	fcall	init_ram0
   381                           
   382                           ; Clear objects allocated to BANK1
   383  0021  1683               	bsf	3,5	;RP0=1, select bank1
   384  0022  1303               	bcf	3,6	;RP1=0, select bank1
   385  0023  01ED               	clrf	__pbssBANK1& (0+127)
   386  0024  01EE               	clrf	(__pbssBANK1+1)& (0+127)
   387  0025                     end_of_initialization:	
   388                           ;End of C runtime variable initialization code
   389                           
   390  0025                     __end_of__initialization:
   391  0025  0183               	clrf	3
   392  0026  160A  118A  2892   	ljmp	_main	;jump to C main() function
   393                           
   394                           	psect	bssBANK1
   395  00ED                     __pbssBANK1:
   396  00ED                     _second:
   397  00ED                     	ds	1
   398  00EE                     _minute:
   399  00EE                     	ds	1
   400                           
   401                           	psect	dataBANK1
   402  00E6                     __pdataBANK1:
   403  00E6                     _temp_c:
   404  00E6                     	ds	4
   405  00EA                     _clock_mode:
   406  00EA                     	ds	1
   407  00EB                     _PM:
   408  00EB                     	ds	1
   409  00EC                     _hour:
   410  00EC                     	ds	1
   411                           
   412                           	psect	inittext
   413  1FC0                     init_fetch0:	
   414                           ;	Called with low address in FSR and high address in W
   415                           
   416  1FC0  087E               	movf	btemp,w
   417  1FC1  008A               	movwf	10
   418  1FC2  087F               	movf	btemp+1,w
   419  1FC3  0082               	movwf	2
   420  1FC4                     init_ram0:	
   421                           ;Called with:
   422                           ;	high address of idata address in btemp 
   423                           ;	low address of idata address in btemp+1 
   424                           ;	low address of data in FSR
   425                           ;	high address + 1 of data in btemp-1
   426                           
   427  1FC4  160A  158A  27C0  160A  158A  	fcall	init_fetch0
   428  1FC9  0080               	movwf	0
   429  1FCA  0A84               	incf	4,f
   430  1FCB  0804               	movf	4,w
   431  1FCC  067D               	xorwf	btemp+-1,w
   432  1FCD  1903               	btfsc	3,2
   433  1FCE  3400               	retlw	0
   434  1FCF  0AFF               	incf	btemp+1,f
   435  1FD0  1903               	btfsc	3,2
   436  1FD1  0AFE               	incf	btemp,f
   437  1FD2  2FC4               	goto	init_ram0
   438                           
   439                           	psect	cstackBANK1
   440  00A0                     __pcstackBANK1:
   441  00A0                     ?_LCD_write:
   442  00A0                     ??_ADC_initialise:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  00A0                     ??_ADC_channel_select:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  00A0                     ?_delay:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  00A0                     ??_tick_tock:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  00A0                     ?__Umul8_16:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  00A0                     ?_ADC_read:	
   458                           ; 2 bytes @ 0x0
   459                           
   460  00A0                     ?___awmod:	
   461                           ; 2 bytes @ 0x0
   462                           
   463  00A0                     ?___lldiv:	
   464                           ; 2 bytes @ 0x0
   465                           
   466  00A0                     ?___fltol:	
   467                           ; 4 bytes @ 0x0
   468                           
   469  00A0                     ?___llmod:	
   470                           ; 4 bytes @ 0x0
   471                           
   472  00A0                     LCD_write@rs:	
   473                           ; 4 bytes @ 0x0
   474                           
   475  00A0                     __Umul8_16@multiplicand:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  00A0                     delay@delay:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  00A0                     ___awmod@divisor:	
   482                           ; 2 bytes @ 0x0
   483                           
   484  00A0                     ___lldiv@divisor:	
   485                           ; 2 bytes @ 0x0
   486                           
   487  00A0                     ___fltol@f1:	
   488                           ; 4 bytes @ 0x0
   489                           
   490  00A0                     ___llmod@divisor:	
   491                           ; 4 bytes @ 0x0
   492                           
   493                           
   494                           ; 4 bytes @ 0x0
   495  00A0                     	ds	1
   496  00A1                     ??_LCD_write:
   497  00A1                     ADC_channel_select@channel:	
   498                           ; 1 bytes @ 0x1
   499                           
   500                           
   501                           ; 1 bytes @ 0x1
   502  00A1                     	ds	1
   503  00A2                     ??__Umul8_16:
   504  00A2                     ??_ADC_read:	
   505                           ; 1 bytes @ 0x2
   506                           
   507  00A2                     ??_delay:	
   508                           ; 1 bytes @ 0x2
   509                           
   510  00A2                     LCD_write@intsON:	
   511                           ; 1 bytes @ 0x2
   512                           
   513  00A2                     ___awmod@dividend:	
   514                           ; 1 bytes @ 0x2
   515                           
   516                           
   517                           ; 2 bytes @ 0x2
   518  00A2                     	ds	1
   519  00A3                     LCD_write@TRISB_BAK:
   520  00A3                     ADC_read@result:	
   521                           ; 1 bytes @ 0x3
   522                           
   523                           
   524                           ; 2 bytes @ 0x3
   525  00A3                     	ds	1
   526  00A4                     ??___awmod:
   527  00A4                     ??___fltol:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  00A4                     LCD_write@RB7_BAK:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  00A4                     delay@x:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  00A4                     __Umul8_16@product:	
   537                           ; 2 bytes @ 0x4
   538                           
   539  00A4                     ___lldiv@dividend:	
   540                           ; 2 bytes @ 0x4
   541                           
   542  00A4                     ___llmod@dividend:	
   543                           ; 4 bytes @ 0x4
   544                           
   545                           
   546                           ; 4 bytes @ 0x4
   547  00A4                     	ds	1
   548  00A5                     ?___xxtofl:
   549  00A5                     LCD_write@RB6_BAK:	
   550                           ; 4 bytes @ 0x5
   551                           
   552  00A5                     ___awmod@counter:	
   553                           ; 1 bytes @ 0x5
   554                           
   555  00A5                     ___xxtofl@val:	
   556                           ; 1 bytes @ 0x5
   557                           
   558                           
   559                           ; 4 bytes @ 0x5
   560  00A5                     	ds	1
   561  00A6                     LCD_write@temp:
   562  00A6                     ___awmod@sign:	
   563                           ; 1 bytes @ 0x6
   564                           
   565  00A6                     __Umul8_16@word_mpld:	
   566                           ; 1 bytes @ 0x6
   567                           
   568                           
   569                           ; 2 bytes @ 0x6
   570  00A6                     	ds	1
   571  00A7                     LCD_write@c:
   572                           
   573                           ; 1 bytes @ 0x7
   574  00A7                     	ds	1
   575  00A8                     ??___lldiv:
   576  00A8                     ??___llmod:	
   577                           ; 1 bytes @ 0x8
   578                           
   579  00A8                     LCD_write@RSmask:	
   580                           ; 1 bytes @ 0x8
   581                           
   582  00A8                     __Umul8_16@multiplier:	
   583                           ; 1 bytes @ 0x8
   584                           
   585                           
   586                           ; 1 bytes @ 0x8
   587  00A8                     	ds	1
   588  00A9                     ??___xxtofl:
   589  00A9                     ___fltol@sign1:	
   590                           ; 1 bytes @ 0x9
   591                           
   592  00A9                     ___llmod@counter:	
   593                           ; 1 bytes @ 0x9
   594                           
   595  00A9                     LCD_write@counter:	
   596                           ; 1 bytes @ 0x9
   597                           
   598  00A9                     ___lldiv@quotient:	
   599                           ; 2 bytes @ 0x9
   600                           
   601                           
   602                           ; 4 bytes @ 0x9
   603  00A9                     	ds	1
   604  00AA                     ___fltol@exp1:
   605                           
   606                           ; 1 bytes @ 0xA
   607  00AA                     	ds	1
   608  00AB                     ??_LCD_clear:
   609  00AB                     ??_LCD_putch:	
   610                           ; 1 bytes @ 0xB
   611                           
   612  00AB                     ?_LCD_cursor:	
   613                           ; 1 bytes @ 0xB
   614                           
   615  00AB                     LCD_putch@c:	
   616                           ; 1 bytes @ 0xB
   617                           
   618  00AB                     LCD_cursor@y:	
   619                           ; 1 bytes @ 0xB
   620                           
   621  00AB                     LCD_clear@counter:	
   622                           ; 1 bytes @ 0xB
   623                           
   624                           
   625                           ; 2 bytes @ 0xB
   626  00AB                     	ds	1
   627  00AC                     ??_LCD_cursor:
   628  00AC                     LCD_putch@counter:	
   629                           ; 1 bytes @ 0xC
   630                           
   631                           
   632                           ; 2 bytes @ 0xC
   633  00AC                     	ds	1
   634  00AD                     ??_LCD_initialise:
   635  00AD                     LCD_cursor@x:	
   636                           ; 1 bytes @ 0xD
   637                           
   638  00AD                     ___lldiv@counter:	
   639                           ; 1 bytes @ 0xD
   640                           
   641  00AD                     ___xxtofl@sign:	
   642                           ; 1 bytes @ 0xD
   643                           
   644  00AD                     LCD_initialise@counter:	
   645                           ; 1 bytes @ 0xD
   646                           
   647                           
   648                           ; 2 bytes @ 0xD
   649  00AD                     	ds	1
   650  00AE                     ?_ultoa:
   651  00AE                     ?_LCD_puts:	
   652                           ; 1 bytes @ 0xE
   653                           
   654  00AE                     ??_LCD_putsc:	
   655                           ; 1 bytes @ 0xE
   656                           
   657  00AE                     ___xxtofl@exp:	
   658                           ; 1 bytes @ 0xE
   659                           
   660  00AE                     LCD_puts@s:	
   661                           ; 1 bytes @ 0xE
   662                           
   663  00AE                     ultoa@val:	
   664                           ; 2 bytes @ 0xE
   665                           
   666                           
   667                           ; 4 bytes @ 0xE
   668  00AE                     	ds	1
   669  00AF                     LCD_putsc@s:
   670  00AF                     ___xxtofl@arg:	
   671                           ; 1 bytes @ 0xF
   672                           
   673                           
   674                           ; 4 bytes @ 0xF
   675  00AF                     	ds	1
   676  00B0                     ??_LCD_puts:
   677  00B0                     LCD_putsc@i:	
   678                           ; 1 bytes @ 0x10
   679                           
   680                           
   681                           ; 1 bytes @ 0x10
   682  00B0                     	ds	1
   683  00B1                     LCD_puts@i:
   684  00B1                     LCD_putsc@c:	
   685                           ; 1 bytes @ 0x11
   686                           
   687                           
   688                           ; 1 bytes @ 0x11
   689  00B1                     	ds	1
   690  00B2                     LCD_puts@c:
   691  00B2                     ultoa@base:	
   692                           ; 1 bytes @ 0x12
   693                           
   694                           
   695                           ; 2 bytes @ 0x12
   696  00B2                     	ds	1
   697  00B3                     ??_convert_time:
   698  00B3                     ?___flmul:	
   699                           ; 1 bytes @ 0x13
   700                           
   701  00B3                     ___flmul@b:	
   702                           ; 4 bytes @ 0x13
   703                           
   704                           
   705                           ; 4 bytes @ 0x13
   706  00B3                     	ds	1
   707  00B4                     ??_ultoa:
   708                           
   709                           ; 1 bytes @ 0x14
   710  00B4                     	ds	1
   711  00B5                     ultoa@v:
   712                           
   713                           ; 4 bytes @ 0x15
   714  00B5                     	ds	2
   715  00B7                     ___flmul@a:
   716                           
   717                           ; 4 bytes @ 0x17
   718  00B7                     	ds	2
   719  00B9                     ultoa@c:
   720                           
   721                           ; 1 bytes @ 0x19
   722  00B9                     	ds	1
   723  00BA                     ultoa@buf:
   724                           
   725                           ; 1 bytes @ 0x1A
   726  00BA                     	ds	1
   727  00BB                     ?_ltoa:
   728  00BB                     ??___flmul:	
   729                           ; 1 bytes @ 0x1B
   730                           
   731  00BB                     ltoa@val:	
   732                           ; 1 bytes @ 0x1B
   733                           
   734                           
   735                           ; 4 bytes @ 0x1B
   736  00BB                     	ds	4
   737  00BF                     ltoa@base:
   738                           
   739                           ; 2 bytes @ 0x1F
   740  00BF                     	ds	1
   741  00C0                     ___flmul@sign:
   742                           
   743                           ; 1 bytes @ 0x20
   744  00C0                     	ds	1
   745  00C1                     ??_ltoa:
   746  00C1                     ___flmul@grs:	
   747                           ; 1 bytes @ 0x21
   748                           
   749                           
   750                           ; 4 bytes @ 0x21
   751  00C1                     	ds	1
   752  00C2                     ltoa@buf:
   753                           
   754                           ; 1 bytes @ 0x22
   755  00C2                     	ds	1
   756  00C3                     ?_LCD_display_value:
   757  00C3                     LCD_display_value@value:	
   758                           ; 1 bytes @ 0x23
   759                           
   760                           
   761                           ; 4 bytes @ 0x23
   762  00C3                     	ds	2
   763  00C5                     ___flmul@aexp:
   764                           
   765                           ; 1 bytes @ 0x25
   766  00C5                     	ds	1
   767  00C6                     ___flmul@bexp:
   768                           
   769                           ; 1 bytes @ 0x26
   770  00C6                     	ds	1
   771  00C7                     ??_LCD_display_value:
   772  00C7                     ___flmul@prod:	
   773                           ; 1 bytes @ 0x27
   774                           
   775  00C7                     LCD_display_value@buffer:	
   776                           ; 4 bytes @ 0x27
   777                           
   778                           
   779                           ; 12 bytes @ 0x27
   780  00C7                     	ds	4
   781  00CB                     ___flmul@temp:
   782                           
   783                           ; 2 bytes @ 0x2B
   784  00CB                     	ds	2
   785  00CD                     ?___fladd:
   786  00CD                     ___fladd@b:	
   787                           ; 4 bytes @ 0x2D
   788                           
   789                           
   790                           ; 4 bytes @ 0x2D
   791  00CD                     	ds	4
   792  00D1                     ___fladd@a:
   793                           
   794                           ; 4 bytes @ 0x31
   795  00D1                     	ds	2
   796  00D3                     ?_updateClock:
   797  00D3                     updateClock@hours:	
   798                           ; 1 bytes @ 0x33
   799                           
   800                           
   801                           ; 2 bytes @ 0x33
   802  00D3                     	ds	2
   803  00D5                     ??___fladd:
   804  00D5                     updateClock@minutes:	
   805                           ; 1 bytes @ 0x35
   806                           
   807                           
   808                           ; 2 bytes @ 0x35
   809  00D5                     	ds	2
   810  00D7                     updateClock@seconds:
   811                           
   812                           ; 2 bytes @ 0x37
   813  00D7                     	ds	2
   814  00D9                     updateClock@clock_mode:
   815                           
   816                           ; 2 bytes @ 0x39
   817  00D9                     	ds	2
   818  00DB                     updateClock@evening:
   819                           
   820                           ; 1 bytes @ 0x3B
   821  00DB                     	ds	1
   822  00DC                     ??_updateClock:
   823                           
   824                           ; 1 bytes @ 0x3C
   825  00DC                     	ds	1
   826  00DD                     ??_setup:
   827  00DD                     ??_set_time:	
   828                           ; 1 bytes @ 0x3D
   829                           
   830  00DD                     ___fladd@signs:	
   831                           ; 1 bytes @ 0x3D
   832                           
   833                           
   834                           ; 1 bytes @ 0x3D
   835  00DD                     	ds	1
   836  00DE                     ___fladd@aexp:
   837                           
   838                           ; 1 bytes @ 0x3E
   839  00DE                     	ds	1
   840  00DF                     ___fladd@bexp:
   841                           
   842                           ; 1 bytes @ 0x3F
   843  00DF                     	ds	1
   844  00E0                     ___fladd@grs:
   845                           
   846                           ; 1 bytes @ 0x40
   847  00E0                     	ds	1
   848  00E1                     ??_set_temp:
   849  00E1                     set_temp@temp_f:	
   850                           ; 1 bytes @ 0x41
   851                           
   852                           
   853                           ; 4 bytes @ 0x41
   854  00E1                     	ds	5
   855  00E6                     ??_main:
   856                           
   857                           	psect	cstackCOMMON
   858  0070                     __pcstackCOMMON:	
   859                           ; 1 bytes @ 0x46
   860                           
   861  0070                     ?___flge:
   862  0070                     ?_LCD_clear:	
   863                           ; 1 bit 
   864                           
   865  0070                     ?_LCD_initialise:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_LCD_putch:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_LCD_putsc:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_ADC_initialise:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_ADC_channel_select:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_setup:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_convert_time:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_set_temp:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_set_time:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_tick_tock:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_main:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_alarmISR:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?i1_LCD_write:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?i1_LCD_clear:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?i1_ADC_read:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?i1__Umul8_16:	
   911                           ; 2 bytes @ 0x0
   912                           
   913  0070                     i1LCD_write@rs:	
   914                           ; 2 bytes @ 0x0
   915                           
   916  0070                     i1__Umul8_16@multiplicand:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ___flge@ff1:	
   920                           ; 1 bytes @ 0x0
   921                           
   922                           
   923                           ; 4 bytes @ 0x0
   924  0070                     	ds	1
   925  0071                     ??i1_LCD_write:
   926                           
   927                           ; 1 bytes @ 0x1
   928  0071                     	ds	1
   929  0072                     ??i1_ADC_read:
   930  0072                     ??i1__Umul8_16:	
   931                           ; 1 bytes @ 0x2
   932                           
   933  0072                     i1LCD_write@intsON:	
   934                           ; 1 bytes @ 0x2
   935                           
   936                           
   937                           ; 1 bytes @ 0x2
   938  0072                     	ds	1
   939  0073                     i1LCD_write@TRISB_BAK:
   940  0073                     i1ADC_read@result:	
   941                           ; 1 bytes @ 0x3
   942                           
   943                           
   944                           ; 2 bytes @ 0x3
   945  0073                     	ds	1
   946  0074                     i1LCD_write@RB7_BAK:
   947  0074                     i1__Umul8_16@product:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0074                     ___flge@ff2:	
   951                           ; 2 bytes @ 0x4
   952                           
   953                           
   954                           ; 4 bytes @ 0x4
   955  0074                     	ds	1
   956  0075                     ?i1___xxtofl:
   957  0075                     i1LCD_write@RB6_BAK:	
   958                           ; 4 bytes @ 0x5
   959                           
   960  0075                     i1___xxtofl@val:	
   961                           ; 1 bytes @ 0x5
   962                           
   963                           
   964                           ; 4 bytes @ 0x5
   965  0075                     	ds	1
   966  0076                     i1LCD_write@temp:
   967  0076                     i1__Umul8_16@word_mpld:	
   968                           ; 1 bytes @ 0x6
   969                           
   970                           
   971                           ; 2 bytes @ 0x6
   972  0076                     	ds	1
   973  0077                     i1LCD_write@c:
   974                           
   975                           ; 1 bytes @ 0x7
   976  0077                     	ds	1
   977  0078                     ??___flge:
   978  0078                     i1LCD_write@RSmask:	
   979                           ; 1 bytes @ 0x8
   980                           
   981  0078                     i1__Umul8_16@multiplier:	
   982                           ; 1 bytes @ 0x8
   983                           
   984                           
   985                           ; 1 bytes @ 0x8
   986  0078                     	ds	1
   987  0079                     ??i1___xxtofl:
   988  0079                     i1LCD_write@counter:	
   989                           ; 1 bytes @ 0x9
   990                           
   991                           
   992                           ; 2 bytes @ 0x9
   993  0079                     	ds	2
   994  007B                     ??i1_LCD_clear:
   995  007B                     i1LCD_clear@counter:	
   996                           ; 1 bytes @ 0xB
   997                           
   998                           
   999                           ; 2 bytes @ 0xB
  1000  007B                     	ds	2
  1001                           
  1002                           	psect	cstackBANK0
  1003  0020                     __pcstackBANK0:
  1004  0020                     i1___xxtofl@sign:
  1005                           
  1006                           ; 1 bytes @ 0x0
  1007  0020                     	ds	1
  1008  0021                     i1___xxtofl@exp:
  1009                           
  1010                           ; 1 bytes @ 0x1
  1011  0021                     	ds	1
  1012  0022                     i1___xxtofl@arg:
  1013                           
  1014                           ; 4 bytes @ 0x2
  1015  0022                     	ds	4
  1016  0026                     ?i1___flmul:
  1017  0026                     i1___flmul@b:	
  1018                           ; 4 bytes @ 0x6
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x6
  1022  0026                     	ds	4
  1023  002A                     i1___flmul@a:
  1024                           
  1025                           ; 4 bytes @ 0xA
  1026  002A                     	ds	4
  1027  002E                     ??i1___flmul:
  1028                           
  1029                           ; 1 bytes @ 0xE
  1030  002E                     	ds	5
  1031  0033                     i1___flmul@sign:
  1032                           
  1033                           ; 1 bytes @ 0x13
  1034  0033                     	ds	1
  1035  0034                     i1___flmul@grs:
  1036                           
  1037                           ; 4 bytes @ 0x14
  1038  0034                     	ds	4
  1039  0038                     i1___flmul@aexp:
  1040                           
  1041                           ; 1 bytes @ 0x18
  1042  0038                     	ds	1
  1043  0039                     i1___flmul@bexp:
  1044                           
  1045                           ; 1 bytes @ 0x19
  1046  0039                     	ds	1
  1047  003A                     i1___flmul@prod:
  1048                           
  1049                           ; 4 bytes @ 0x1A
  1050  003A                     	ds	4
  1051  003E                     i1___flmul@temp:
  1052                           
  1053                           ; 2 bytes @ 0x1E
  1054  003E                     	ds	2
  1055  0040                     ?i1___fladd:
  1056  0040                     i1___fladd@b:	
  1057                           ; 4 bytes @ 0x20
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x20
  1061  0040                     	ds	4
  1062  0044                     i1___fladd@a:
  1063                           
  1064                           ; 4 bytes @ 0x24
  1065  0044                     	ds	4
  1066  0048                     ??i1___fladd:
  1067                           
  1068                           ; 1 bytes @ 0x28
  1069  0048                     	ds	8
  1070  0050                     i1___fladd@signs:
  1071                           
  1072                           ; 1 bytes @ 0x30
  1073  0050                     	ds	1
  1074  0051                     i1___fladd@aexp:
  1075                           
  1076                           ; 1 bytes @ 0x31
  1077  0051                     	ds	1
  1078  0052                     i1___fladd@bexp:
  1079                           
  1080                           ; 1 bytes @ 0x32
  1081  0052                     	ds	1
  1082  0053                     i1___fladd@grs:
  1083                           
  1084                           ; 1 bytes @ 0x33
  1085  0053                     	ds	1
  1086  0054                     ??_alarmISR:
  1087                           
  1088                           ; 1 bytes @ 0x34
  1089  0054                     	ds	3
  1090  0057                     alarmISR@x:
  1091                           
  1092                           ; 2 bytes @ 0x37
  1093  0057                     	ds	2
  1094                           
  1095                           	psect	maintext
  1096  1092                     __pmaintext:	
  1097 ;;
  1098 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1099 ;;
  1100 ;; *************** function _main *****************
  1101 ;; Defined at:
  1102 ;;		line 260 in file "Clock_ws.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : B00/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels required when called: 9
  1122 ;; This function calls:
  1123 ;;		_delay
  1124 ;;		_set_temp
  1125 ;;		_set_time
  1126 ;;		_setup
  1127 ;;		_tick_tock
  1128 ;; This function is called by:
  1129 ;;		Startup code after reset
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _main
  1135  1092                     _main:
  1136  1092                     l4002:	
  1137                           ;incstack = 0
  1138 ;; hardware stack exceeded
  1139                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1140                           
  1141                           
  1142                           ;Clock_ws.c: 263:     setup();
  1143  1092  160A  118A  224C  160A  118A  	fcall	_setup
  1144  1097                     l4004:
  1145                           
  1146                           ;Clock_ws.c: 265:         delay(1);
  1147  1097  3001               	movlw	1
  1148  1098  1683               	bsf	3,5	;RP0=1, select bank1
  1149  1099  1303               	bcf	3,6	;RP1=0, select bank1
  1150  109A  00A0               	movwf	delay@delay^(0+128)
  1151  109B  3000               	movlw	0
  1152  109C  00A1               	movwf	(delay@delay^(0+128)+1)
  1153  109D  160A  118A  20DE  160A  118A  	fcall	_delay
  1154  10A2                     l4006:
  1155                           
  1156                           ;Clock_ws.c: 267:         tick_tock();
  1157  10A2  160A  118A  228F  160A  118A  	fcall	_tick_tock
  1158                           
  1159                           ;Clock_ws.c: 269:         set_temp();
  1160  10A7  120A  118A  26EB  160A  118A  	fcall	_set_temp
  1161                           
  1162                           ;Clock_ws.c: 271:         set_time();
  1163  10AC  160A  118A  220E  160A  118A  	fcall	_set_time
  1164  10B1  2897               	goto	l4004
  1165  10B2  120A  118A  2810   	ljmp	start
  1166  10B5                     __end_of_main:
  1167                           
  1168                           	psect	text1
  1169  128F                     __ptext1:	
  1170 ;; *************** function _tick_tock *****************
  1171 ;; Defined at:
  1172 ;;		line 228 in file "Clock_ws.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0
  1188 ;;      Temps:          0       0       1       0       0
  1189 ;;      Totals:         0       0       1       0       0
  1190 ;;Total ram usage:        1 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 3
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           
  1201                           ;psect for function _tick_tock
  1202  128F                     _tick_tock:
  1203  128F                     l3440:	
  1204                           ;incstack = 0
  1205                           ; Regs used in _tick_tock: [wreg+status,2+status,0]
  1206                           
  1207                           
  1208                           ;Clock_ws.c: 230:         second++;
  1209  128F  3001               	movlw	1
  1210  1290  1683               	bsf	3,5	;RP0=1, select bank1
  1211  1291  1303               	bcf	3,6	;RP1=0, select bank1
  1212  1292  00A0               	movwf	??_tick_tock^(0+128)
  1213  1293  0820               	movf	??_tick_tock^(0+128),w
  1214  1294  07ED               	addwf	_second^(0+128),f
  1215  1295                     l3442:
  1216                           
  1217                           ;Clock_ws.c: 231:         if(second > 59){
  1218  1295  303C               	movlw	60
  1219  1296  026D               	subwf	_second^(0+128),w
  1220  1297  1C03               	skipc
  1221  1298  2A9A               	goto	u5201
  1222  1299  2A9B               	goto	u5200
  1223  129A                     u5201:
  1224  129A  2AA0               	goto	l3448
  1225  129B                     u5200:
  1226  129B                     l3444:
  1227                           
  1228                           ;Clock_ws.c: 232:             second = 0;
  1229  129B  01ED               	clrf	_second^(0+128)
  1230  129C                     l3446:
  1231                           
  1232                           ;Clock_ws.c: 233:             minute++;}
  1233  129C  3001               	movlw	1
  1234  129D  00A0               	movwf	??_tick_tock^(0+128)
  1235  129E  0820               	movf	??_tick_tock^(0+128),w
  1236  129F  07EE               	addwf	_minute^(0+128),f
  1237  12A0                     l3448:
  1238                           
  1239                           ;Clock_ws.c: 234:         if(minute > 59){
  1240  12A0  303C               	movlw	60
  1241  12A1  026E               	subwf	_minute^(0+128),w
  1242  12A2  1C03               	skipc
  1243  12A3  2AA5               	goto	u5211
  1244  12A4  2AA6               	goto	u5210
  1245  12A5                     u5211:
  1246  12A5  2AAB               	goto	l3454
  1247  12A6                     u5210:
  1248  12A6                     l3450:
  1249                           
  1250                           ;Clock_ws.c: 235:             minute = 0;
  1251  12A6  01EE               	clrf	_minute^(0+128)
  1252  12A7                     l3452:
  1253                           
  1254                           ;Clock_ws.c: 236:             hour++;
  1255  12A7  3001               	movlw	1
  1256  12A8  00A0               	movwf	??_tick_tock^(0+128)
  1257  12A9  0820               	movf	??_tick_tock^(0+128),w
  1258  12AA  07EC               	addwf	_hour^(0+128),f
  1259  12AB                     l3454:
  1260                           
  1261                           ;Clock_ws.c: 239:         if(hour == 11 & minute == 59 & second == 59){
  1262  12AB  300B               	movlw	11
  1263  12AC  066C               	xorwf	_hour^(0+128),w
  1264  12AD  1D03               	btfss	3,2
  1265  12AE  2AB0               	goto	u5221
  1266  12AF  2AB1               	goto	u5220
  1267  12B0                     u5221:
  1268  12B0  2AC7               	goto	l3462
  1269  12B1                     u5220:
  1270  12B1                     l3456:
  1271  12B1  303B               	movlw	59
  1272  12B2  066E               	xorwf	_minute^(0+128),w
  1273  12B3  1D03               	btfss	3,2
  1274  12B4  2AB6               	goto	u5231
  1275  12B5  2AB7               	goto	u5230
  1276  12B6                     u5231:
  1277  12B6  2AC7               	goto	l3462
  1278  12B7                     u5230:
  1279  12B7                     l3458:
  1280  12B7  303B               	movlw	59
  1281  12B8  066D               	xorwf	_second^(0+128),w
  1282  12B9  1D03               	btfss	3,2
  1283  12BA  2ABC               	goto	u5241
  1284  12BB  2ABD               	goto	u5240
  1285  12BC                     u5241:
  1286  12BC  2AC7               	goto	l3462
  1287  12BD                     u5240:
  1288  12BD                     l3460:
  1289                           
  1290                           ;Clock_ws.c: 240:             PM=!PM;
  1291  12BD  086B               	movf	_PM^(0+128),w
  1292  12BE  1903               	btfsc	3,2
  1293  12BF  2AC1               	goto	u5251
  1294  12C0  2AC3               	goto	u5250
  1295  12C1                     u5251:
  1296  12C1  3001               	movlw	1
  1297  12C2  2AC4               	goto	u5260
  1298  12C3                     u5250:
  1299  12C3  3000               	movlw	0
  1300  12C4                     u5260:
  1301  12C4  00A0               	movwf	??_tick_tock^(0+128)
  1302  12C5  0820               	movf	??_tick_tock^(0+128),w
  1303  12C6  00EB               	movwf	_PM^(0+128)
  1304  12C7                     l3462:
  1305                           
  1306                           ;Clock_ws.c: 244:         if(hour > 12){
  1307  12C7  300D               	movlw	13
  1308  12C8  026C               	subwf	_hour^(0+128),w
  1309  12C9  1C03               	skipc
  1310  12CA  2ACC               	goto	u5271
  1311  12CB  2ACD               	goto	u5270
  1312  12CC                     u5271:
  1313  12CC  2AE2               	goto	l260
  1314  12CD                     u5270:
  1315  12CD                     l3464:
  1316                           
  1317                           ;Clock_ws.c: 245:             if(clock_mode ==1){
  1318  12CD  036A               	decf	_clock_mode^(0+128),w
  1319  12CE  1D03               	btfss	3,2
  1320  12CF  2AD1               	goto	u5281
  1321  12D0  2AD2               	goto	u5280
  1322  12D1                     u5281:
  1323  12D1  2ADA               	goto	l3470
  1324  12D2                     u5280:
  1325  12D2                     l3466:
  1326                           
  1327                           ;Clock_ws.c: 246:         if(hour > 23){
  1328  12D2  3018               	movlw	24
  1329  12D3  026C               	subwf	_hour^(0+128),w
  1330  12D4  1C03               	skipc
  1331  12D5  2AD7               	goto	u5291
  1332  12D6  2AD8               	goto	u5290
  1333  12D7                     u5291:
  1334  12D7  2AE2               	goto	l260
  1335  12D8                     u5290:
  1336  12D8                     l3468:
  1337                           
  1338                           ;Clock_ws.c: 247:             hour =0;
  1339  12D8  01EC               	clrf	_hour^(0+128)
  1340  12D9  2AE2               	goto	l260
  1341  12DA                     l3470:
  1342                           
  1343                           ;Clock_ws.c: 251:                 if(hour > 12){
  1344  12DA  300D               	movlw	13
  1345  12DB  026C               	subwf	_hour^(0+128),w
  1346  12DC  1C03               	skipc
  1347  12DD  2ADF               	goto	u5301
  1348  12DE  2AE0               	goto	u5300
  1349  12DF                     u5301:
  1350  12DF  2AE2               	goto	l260
  1351  12E0                     u5300:
  1352  12E0                     l3472:
  1353                           
  1354                           ;Clock_ws.c: 252:                     hour = 1;
  1355  12E0  01EC               	clrf	_hour^(0+128)
  1356  12E1  0AEC               	incf	_hour^(0+128),f
  1357  12E2                     l260:
  1358  12E2  0008               	return
  1359  12E3                     __end_of_tick_tock:
  1360                           
  1361                           	psect	text2
  1362  124C                     __ptext2:	
  1363 ;; *************** function _setup *****************
  1364 ;; Defined at:
  1365 ;;		line 123 in file "Clock_ws.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0
  1381 ;;      Temps:          0       0       9       0       0
  1382 ;;      Totals:         0       0       9       0       0
  1383 ;;Total ram usage:        9 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 8
  1386 ;; This function calls:
  1387 ;;		_ADC_initialise
  1388 ;;		_LCD_initialise
  1389 ;;		_updateClock
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _setup
  1397  124C                     _setup:
  1398  124C                     l3372:	
  1399                           ;incstack = 0
  1400 ;; hardware stack exceeded
  1401                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1402                           
  1403                           
  1404                           ;Clock_ws.c: 126:     TRISD=0x07;
  1405  124C  3007               	movlw	7
  1406  124D  1683               	bsf	3,5	;RP0=1, select bank1
  1407  124E  1303               	bcf	3,6	;RP1=0, select bank1
  1408  124F  0088               	movwf	8	;volatile
  1409  1250                     l3374:
  1410                           
  1411                           ;Clock_ws.c: 127:     TRISB=0x00;
  1412  1250  0186               	clrf	6	;volatile
  1413  1251                     l3376:
  1414                           
  1415                           ;Clock_ws.c: 128:     PORTB=0x00;
  1416  1251  1283               	bcf	3,5	;RP0=0, select bank0
  1417  1252  1303               	bcf	3,6	;RP1=0, select bank0
  1418  1253  0186               	clrf	6	;volatile
  1419  1254                     l3378:
  1420                           
  1421                           ;Clock_ws.c: 129:     PORTD=0x00;
  1422  1254  0188               	clrf	8	;volatile
  1423  1255                     l3380:
  1424                           
  1425                           ;Clock_ws.c: 131:     T0IE = 1;
  1426  1255  168B               	bsf	11,5	;volatile
  1427  1256                     l3382:
  1428                           
  1429                           ;Clock_ws.c: 132:     OPTION_REG = 0X07;
  1430  1256  3007               	movlw	7
  1431  1257  1683               	bsf	3,5	;RP0=1, select bank1
  1432  1258  1303               	bcf	3,6	;RP1=0, select bank1
  1433  1259  0081               	movwf	1	;volatile
  1434  125A                     l3384:
  1435                           
  1436                           ;Clock_ws.c: 133:     INTCON = 0XA0;
  1437  125A  30A0               	movlw	160
  1438  125B  008B               	movwf	11	;volatile
  1439  125C                     l3386:
  1440                           
  1441                           ;Clock_ws.c: 134:     INTCONbits.GIE =1;
  1442  125C  178B               	bsf	11,7	;volatile
  1443  125D                     l3388:
  1444                           
  1445                           ;Clock_ws.c: 136:     LCD_initialise();
  1446  125D  160A  118A  24DC  160A  118A  	fcall	_LCD_initialise
  1447  1262                     l3390:
  1448                           
  1449                           ;Clock_ws.c: 137:     ADC_initialise();
  1450  1262  160A  158A  27B0  160A  118A  	fcall	_ADC_initialise
  1451  1267                     l3392:
  1452                           
  1453                           ;Clock_ws.c: 140:     updateClock(hour,minute,second,clock_mode,PM);
  1454  1267  1683               	bsf	3,5	;RP0=1, select bank1
  1455  1268  1303               	bcf	3,6	;RP1=0, select bank1
  1456  1269  086C               	movf	_hour^(0+128),w
  1457  126A  00DD               	movwf	??_setup^(0+128)
  1458  126B  01DE               	clrf	(??_setup^(0+128)+1)
  1459  126C  085D               	movf	??_setup^(0+128),w
  1460  126D  00D3               	movwf	updateClock@hours^(0+128)
  1461  126E  085E               	movf	(??_setup+1)^(0+128),w
  1462  126F  00D4               	movwf	(updateClock@hours+1)^(0+128)
  1463  1270  086E               	movf	_minute^(0+128),w
  1464  1271  00DF               	movwf	(??_setup+2)^(0+128)
  1465  1272  01E0               	clrf	((??_setup+2)^(0+128)+1)
  1466  1273  085F               	movf	(??_setup+2)^(0+128),w
  1467  1274  00D5               	movwf	updateClock@minutes^(0+128)
  1468  1275  0860               	movf	(??_setup+3)^(0+128),w
  1469  1276  00D6               	movwf	(updateClock@minutes+1)^(0+128)
  1470  1277  086D               	movf	_second^(0+128),w
  1471  1278  00E1               	movwf	(??_setup+4)^(0+128)
  1472  1279  01E2               	clrf	((??_setup+4)^(0+128)+1)
  1473  127A  0861               	movf	(??_setup+4)^(0+128),w
  1474  127B  00D7               	movwf	updateClock@seconds^(0+128)
  1475  127C  0862               	movf	(??_setup+5)^(0+128),w
  1476  127D  00D8               	movwf	(updateClock@seconds+1)^(0+128)
  1477  127E  086A               	movf	_clock_mode^(0+128),w
  1478  127F  00E3               	movwf	(??_setup+6)^(0+128)
  1479  1280  01E4               	clrf	((??_setup+6)^(0+128)+1)
  1480  1281  0863               	movf	(??_setup+6)^(0+128),w
  1481  1282  00D9               	movwf	updateClock@clock_mode^(0+128)
  1482  1283  0864               	movf	(??_setup+7)^(0+128),w
  1483  1284  00DA               	movwf	(updateClock@clock_mode+1)^(0+128)
  1484  1285  086B               	movf	_PM^(0+128),w
  1485  1286  00E5               	movwf	(??_setup+8)^(0+128)
  1486  1287  0865               	movf	(??_setup+8)^(0+128),w
  1487  1288  00DB               	movwf	updateClock@evening^(0+128)
  1488  1289  120A  158A  2005  160A  118A  	fcall	_updateClock
  1489  128E                     l219:
  1490  128E  0008               	return
  1491  128F                     __end_of_setup:
  1492                           
  1493                           	psect	text3
  1494  14DC                     __ptext3:	
  1495 ;; *************** function _LCD_initialise *****************
  1496 ;; Defined at:
  1497 ;;		line 36 in file "LCDdrive.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  counter         2   13[BANK1 ] unsigned int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         0       0       0       0       0
  1512 ;;      Locals:         0       0       2       0       0
  1513 ;;      Temps:          0       0       0       0       0
  1514 ;;      Totals:         0       0       2       0       0
  1515 ;;Total ram usage:        2 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 5
  1518 ;; This function calls:
  1519 ;;		_LCD_clear
  1520 ;;		_LCD_write
  1521 ;; This function is called by:
  1522 ;;		_setup
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _LCD_initialise
  1528  14DC                     _LCD_initialise:
  1529  14DC                     l2732:	
  1530                           ;incstack = 0
  1531                           ; Regs used in _LCD_initialise: [wreg+status,2+status,0+pclath+cstack]
  1532                           
  1533                           
  1534                           ;LCDdrive.c: 38:     unsigned int counter;;LCDdrive.c: 40:         LCD_write(0x33, 0);
  1535  14DC  1683               	bsf	3,5	;RP0=1, select bank1
  1536  14DD  1303               	bcf	3,6	;RP1=0, select bank1
  1537  14DE  01A0               	clrf	LCD_write@rs^(0+128)
  1538  14DF  3033               	movlw	51
  1539  14E0  120A  158A  2230  160A  118A  	fcall	_LCD_write
  1540  14E5                     l2734:
  1541                           
  1542                           ;LCDdrive.c: 41:         for (counter = 0; counter < 1000; counter++);
  1543  14E5  1683               	bsf	3,5	;RP0=1, select bank1
  1544  14E6  1303               	bcf	3,6	;RP1=0, select bank1
  1545  14E7  01AD               	clrf	LCD_initialise@counter^(0+128)
  1546  14E8  01AE               	clrf	(LCD_initialise@counter+1)^(0+128)
  1547  14E9                     l2740:
  1548  14E9  3001               	movlw	1
  1549  14EA  07AD               	addwf	LCD_initialise@counter^(0+128),f
  1550  14EB  1803               	skipnc
  1551  14EC  0AAE               	incf	(LCD_initialise@counter+1)^(0+128),f
  1552  14ED  3000               	movlw	0
  1553  14EE  07AE               	addwf	(LCD_initialise@counter+1)^(0+128),f
  1554  14EF  3003               	movlw	3
  1555  14F0  022E               	subwf	(LCD_initialise@counter+1)^(0+128),w
  1556  14F1  30E8               	movlw	232
  1557  14F2  1903               	skipnz
  1558  14F3  022D               	subwf	LCD_initialise@counter^(0+128),w
  1559  14F4  1C03               	skipc
  1560  14F5  2CF7               	goto	u3751
  1561  14F6  2CF8               	goto	u3750
  1562  14F7                     u3751:
  1563  14F7  2CE9               	goto	l2740
  1564  14F8                     u3750:
  1565  14F8                     l2742:
  1566                           
  1567                           ;LCDdrive.c: 44:         LCD_write(0x32, 0);
  1568  14F8  01A0               	clrf	LCD_write@rs^(0+128)
  1569  14F9  3032               	movlw	50
  1570  14FA  120A  158A  2230  160A  118A  	fcall	_LCD_write
  1571  14FF                     l2744:
  1572                           
  1573                           ;LCDdrive.c: 45:         for (counter = 0; counter < 1000; counter++);
  1574  14FF  1683               	bsf	3,5	;RP0=1, select bank1
  1575  1500  1303               	bcf	3,6	;RP1=0, select bank1
  1576  1501  01AD               	clrf	LCD_initialise@counter^(0+128)
  1577  1502  01AE               	clrf	(LCD_initialise@counter+1)^(0+128)
  1578  1503                     l2750:
  1579  1503  3001               	movlw	1
  1580  1504  07AD               	addwf	LCD_initialise@counter^(0+128),f
  1581  1505  1803               	skipnc
  1582  1506  0AAE               	incf	(LCD_initialise@counter+1)^(0+128),f
  1583  1507  3000               	movlw	0
  1584  1508  07AE               	addwf	(LCD_initialise@counter+1)^(0+128),f
  1585  1509  3003               	movlw	3
  1586  150A  022E               	subwf	(LCD_initialise@counter+1)^(0+128),w
  1587  150B  30E8               	movlw	232
  1588  150C  1903               	skipnz
  1589  150D  022D               	subwf	LCD_initialise@counter^(0+128),w
  1590  150E  1C03               	skipc
  1591  150F  2D11               	goto	u3761
  1592  1510  2D12               	goto	u3760
  1593  1511                     u3761:
  1594  1511  2D03               	goto	l2750
  1595  1512                     u3760:
  1596  1512                     l2752:
  1597                           
  1598                           ;LCDdrive.c: 48:         LCD_write(0x2c, 0);
  1599  1512  01A0               	clrf	LCD_write@rs^(0+128)
  1600  1513  302C               	movlw	44
  1601  1514  120A  158A  2230  160A  118A  	fcall	_LCD_write
  1602  1519                     l2754:
  1603                           
  1604                           ;LCDdrive.c: 49:         for (counter = 0; counter < 1000; counter++);
  1605  1519  1683               	bsf	3,5	;RP0=1, select bank1
  1606  151A  1303               	bcf	3,6	;RP1=0, select bank1
  1607  151B  01AD               	clrf	LCD_initialise@counter^(0+128)
  1608  151C  01AE               	clrf	(LCD_initialise@counter+1)^(0+128)
  1609  151D                     l2760:
  1610  151D  3001               	movlw	1
  1611  151E  07AD               	addwf	LCD_initialise@counter^(0+128),f
  1612  151F  1803               	skipnc
  1613  1520  0AAE               	incf	(LCD_initialise@counter+1)^(0+128),f
  1614  1521  3000               	movlw	0
  1615  1522  07AE               	addwf	(LCD_initialise@counter+1)^(0+128),f
  1616  1523  3003               	movlw	3
  1617  1524  022E               	subwf	(LCD_initialise@counter+1)^(0+128),w
  1618  1525  30E8               	movlw	232
  1619  1526  1903               	skipnz
  1620  1527  022D               	subwf	LCD_initialise@counter^(0+128),w
  1621  1528  1C03               	skipc
  1622  1529  2D2B               	goto	u3771
  1623  152A  2D2C               	goto	u3770
  1624  152B                     u3771:
  1625  152B  2D1D               	goto	l2760
  1626  152C                     u3770:
  1627  152C                     l2762:
  1628                           
  1629                           ;LCDdrive.c: 52:         LCD_write(0x06, 0);
  1630  152C  01A0               	clrf	LCD_write@rs^(0+128)
  1631  152D  3006               	movlw	6
  1632  152E  120A  158A  2230  160A  118A  	fcall	_LCD_write
  1633  1533                     l2764:
  1634                           
  1635                           ;LCDdrive.c: 53:         for (counter = 0; counter < 1000; counter++);
  1636  1533  1683               	bsf	3,5	;RP0=1, select bank1
  1637  1534  1303               	bcf	3,6	;RP1=0, select bank1
  1638  1535  01AD               	clrf	LCD_initialise@counter^(0+128)
  1639  1536  01AE               	clrf	(LCD_initialise@counter+1)^(0+128)
  1640  1537                     l2770:
  1641  1537  3001               	movlw	1
  1642  1538  07AD               	addwf	LCD_initialise@counter^(0+128),f
  1643  1539  1803               	skipnc
  1644  153A  0AAE               	incf	(LCD_initialise@counter+1)^(0+128),f
  1645  153B  3000               	movlw	0
  1646  153C  07AE               	addwf	(LCD_initialise@counter+1)^(0+128),f
  1647  153D  3003               	movlw	3
  1648  153E  022E               	subwf	(LCD_initialise@counter+1)^(0+128),w
  1649  153F  30E8               	movlw	232
  1650  1540  1903               	skipnz
  1651  1541  022D               	subwf	LCD_initialise@counter^(0+128),w
  1652  1542  1C03               	skipc
  1653  1543  2D45               	goto	u3781
  1654  1544  2D46               	goto	u3780
  1655  1545                     u3781:
  1656  1545  2D37               	goto	l2770
  1657  1546                     u3780:
  1658  1546                     l2772:
  1659                           
  1660                           ;LCDdrive.c: 56:         LCD_write(0x0c, 0);
  1661  1546  01A0               	clrf	LCD_write@rs^(0+128)
  1662  1547  300C               	movlw	12
  1663  1548  120A  158A  2230  160A  118A  	fcall	_LCD_write
  1664  154D                     l2774:
  1665                           
  1666                           ;LCDdrive.c: 57:         for (counter = 0; counter < 1000; counter++);
  1667  154D  1683               	bsf	3,5	;RP0=1, select bank1
  1668  154E  1303               	bcf	3,6	;RP1=0, select bank1
  1669  154F  01AD               	clrf	LCD_initialise@counter^(0+128)
  1670  1550  01AE               	clrf	(LCD_initialise@counter+1)^(0+128)
  1671  1551                     l2780:
  1672  1551  3001               	movlw	1
  1673  1552  07AD               	addwf	LCD_initialise@counter^(0+128),f
  1674  1553  1803               	skipnc
  1675  1554  0AAE               	incf	(LCD_initialise@counter+1)^(0+128),f
  1676  1555  3000               	movlw	0
  1677  1556  07AE               	addwf	(LCD_initialise@counter+1)^(0+128),f
  1678  1557  3003               	movlw	3
  1679  1558  022E               	subwf	(LCD_initialise@counter+1)^(0+128),w
  1680  1559  30E8               	movlw	232
  1681  155A  1903               	skipnz
  1682  155B  022D               	subwf	LCD_initialise@counter^(0+128),w
  1683  155C  1C03               	skipc
  1684  155D  2D5F               	goto	u3791
  1685  155E  2D60               	goto	u3790
  1686  155F                     u3791:
  1687  155F  2D51               	goto	l2780
  1688  1560                     u3790:
  1689  1560                     l2782:
  1690                           
  1691                           ;LCDdrive.c: 59:         LCD_clear();
  1692  1560  160A  118A  219F  160A  118A  	fcall	_LCD_clear
  1693  1565                     l33:
  1694  1565  0008               	return
  1695  1566                     __end_of_LCD_initialise:
  1696                           
  1697                           	psect	text4
  1698  1FB0                     __ptext4:	
  1699 ;; *************** function _ADC_initialise *****************
  1700 ;; Defined at:
  1701 ;;		line 58 in file "Clock_ws.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0
  1718 ;;      Totals:         0       0       0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 3
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_setup
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _ADC_initialise
  1731  1FB0                     _ADC_initialise:
  1732  1FB0                     l2800:	
  1733                           ;incstack = 0
  1734                           ; Regs used in _ADC_initialise: [wreg]
  1735                           
  1736                           
  1737                           ;Clock_ws.c: 59:  TRISA=0x02;
  1738  1FB0  3002               	movlw	2
  1739  1FB1  1683               	bsf	3,5	;RP0=1, select bank1
  1740  1FB2  1303               	bcf	3,6	;RP1=0, select bank1
  1741  1FB3  0085               	movwf	5	;volatile
  1742                           
  1743                           ;Clock_ws.c: 60:  ADCON0 = 0x48;
  1744  1FB4  3048               	movlw	72
  1745  1FB5  1283               	bcf	3,5	;RP0=0, select bank0
  1746  1FB6  1303               	bcf	3,6	;RP1=0, select bank0
  1747  1FB7  009F               	movwf	31	;volatile
  1748                           
  1749                           ;Clock_ws.c: 61:  ADCON1 = 0x80;
  1750  1FB8  3080               	movlw	128
  1751  1FB9  1683               	bsf	3,5	;RP0=1, select bank1
  1752  1FBA  1303               	bcf	3,6	;RP1=0, select bank1
  1753  1FBB  009F               	movwf	31	;volatile
  1754  1FBC                     l2802:
  1755                           
  1756                           ;Clock_ws.c: 62:  ADCON0bits.ADON =1;
  1757  1FBC  1283               	bcf	3,5	;RP0=0, select bank0
  1758  1FBD  1303               	bcf	3,6	;RP1=0, select bank0
  1759  1FBE  141F               	bsf	31,0	;volatile
  1760  1FBF                     l198:
  1761  1FBF  0008               	return
  1762  1FC0                     __end_of_ADC_initialise:
  1763                           
  1764                           	psect	text5
  1765  120E                     __ptext5:	
  1766 ;; *************** function _set_time *****************
  1767 ;; Defined at:
  1768 ;;		line 214 in file "Clock_ws.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1782 ;;      Params:         0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0
  1784 ;;      Temps:          0       0       9       0       0
  1785 ;;      Totals:         0       0       9       0       0
  1786 ;;Total ram usage:        9 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 8
  1789 ;; This function calls:
  1790 ;;		_LCD_clear
  1791 ;;		_convert_time
  1792 ;;		_updateClock
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _set_time
  1800  120E                     _set_time:
  1801  120E                     l3430:	
  1802                           ;incstack = 0
  1803 ;; hardware stack exceeded
  1804                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1805                           
  1806                           
  1807                           ;Clock_ws.c: 216:             if(RD2 ){
  1808  120E  1283               	bcf	3,5	;RP0=0, select bank0
  1809  120F  1303               	bcf	3,6	;RP1=0, select bank0
  1810  1210  1D08               	btfss	8,2	;volatile
  1811  1211  2A13               	goto	u5181
  1812  1212  2A14               	goto	u5180
  1813  1213                     u5181:
  1814  1213  2A19               	goto	l3434
  1815  1214                     u5180:
  1816  1214                     l3432:
  1817                           
  1818                           ;Clock_ws.c: 217:             convert_time();
  1819  1214  160A  118A  2394  160A  118A  	fcall	_convert_time
  1820  1219                     l3434:
  1821                           
  1822                           ;Clock_ws.c: 219:             if(!RD0){
  1823  1219  1283               	bcf	3,5	;RP0=0, select bank0
  1824  121A  1303               	bcf	3,6	;RP1=0, select bank0
  1825  121B  1808               	btfsc	8,0	;volatile
  1826  121C  2A1E               	goto	u5191
  1827  121D  2A1F               	goto	u5190
  1828  121E                     u5191:
  1829  121E  2A4B               	goto	l249
  1830  121F                     u5190:
  1831  121F                     l3436:
  1832                           
  1833                           ;Clock_ws.c: 220:             LCD_clear();
  1834  121F  160A  118A  219F  160A  118A  	fcall	_LCD_clear
  1835  1224                     l3438:
  1836                           
  1837                           ;Clock_ws.c: 221:             updateClock(hour, minute, second, clock_mode, PM);
  1838  1224  1683               	bsf	3,5	;RP0=1, select bank1
  1839  1225  1303               	bcf	3,6	;RP1=0, select bank1
  1840  1226  086C               	movf	_hour^(0+128),w
  1841  1227  00DD               	movwf	??_set_time^(0+128)
  1842  1228  01DE               	clrf	(??_set_time^(0+128)+1)
  1843  1229  085D               	movf	??_set_time^(0+128),w
  1844  122A  00D3               	movwf	updateClock@hours^(0+128)
  1845  122B  085E               	movf	(??_set_time+1)^(0+128),w
  1846  122C  00D4               	movwf	(updateClock@hours+1)^(0+128)
  1847  122D  086E               	movf	_minute^(0+128),w
  1848  122E  00DF               	movwf	(??_set_time+2)^(0+128)
  1849  122F  01E0               	clrf	((??_set_time+2)^(0+128)+1)
  1850  1230  085F               	movf	(??_set_time+2)^(0+128),w
  1851  1231  00D5               	movwf	updateClock@minutes^(0+128)
  1852  1232  0860               	movf	(??_set_time+3)^(0+128),w
  1853  1233  00D6               	movwf	(updateClock@minutes+1)^(0+128)
  1854  1234  086D               	movf	_second^(0+128),w
  1855  1235  00E1               	movwf	(??_set_time+4)^(0+128)
  1856  1236  01E2               	clrf	((??_set_time+4)^(0+128)+1)
  1857  1237  0861               	movf	(??_set_time+4)^(0+128),w
  1858  1238  00D7               	movwf	updateClock@seconds^(0+128)
  1859  1239  0862               	movf	(??_set_time+5)^(0+128),w
  1860  123A  00D8               	movwf	(updateClock@seconds+1)^(0+128)
  1861  123B  086A               	movf	_clock_mode^(0+128),w
  1862  123C  00E3               	movwf	(??_set_time+6)^(0+128)
  1863  123D  01E4               	clrf	((??_set_time+6)^(0+128)+1)
  1864  123E  0863               	movf	(??_set_time+6)^(0+128),w
  1865  123F  00D9               	movwf	updateClock@clock_mode^(0+128)
  1866  1240  0864               	movf	(??_set_time+7)^(0+128),w
  1867  1241  00DA               	movwf	(updateClock@clock_mode+1)^(0+128)
  1868  1242  086B               	movf	_PM^(0+128),w
  1869  1243  00E5               	movwf	(??_set_time+8)^(0+128)
  1870  1244  0865               	movf	(??_set_time+8)^(0+128),w
  1871  1245  00DB               	movwf	updateClock@evening^(0+128)
  1872  1246  120A  158A  2005  160A  118A  	fcall	_updateClock
  1873  124B                     l249:
  1874  124B  0008               	return
  1875  124C                     __end_of_set_time:
  1876                           
  1877                           	psect	text6
  1878  0805                     __ptext6:	
  1879 ;; *************** function _updateClock *****************
  1880 ;; Defined at:
  1881 ;;		line 92 in file "Clock_ws.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  hours           2   51[BANK1 ] int 
  1884 ;;  minutes         2   53[BANK1 ] int 
  1885 ;;  seconds         2   55[BANK1 ] int 
  1886 ;;  clock_mode      2   57[BANK1 ] int 
  1887 ;;  evening         1   59[BANK1 ] _Bool 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       9       0       0
  1900 ;;      Locals:         0       0       0       0       0
  1901 ;;      Temps:          0       0       1       0       0
  1902 ;;      Totals:         0       0      10       0       0
  1903 ;;Total ram usage:       10 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 7
  1906 ;; This function calls:
  1907 ;;		_LCD_cursor
  1908 ;;		_LCD_display_value
  1909 ;;		_LCD_putch
  1910 ;;		_LCD_puts
  1911 ;; This function is called by:
  1912 ;;		_setup
  1913 ;;		_set_time
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _updateClock
  1919  0805                     _updateClock:
  1920  0805                     l2814:	
  1921                           ;incstack = 0
  1922 ;; hardware stack exceeded
  1923                           ; Regs used in _updateClock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1924                           
  1925                           
  1926                           ;Clock_ws.c: 94:     PM= evening;
  1927  0805  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0806  1303               	bcf	3,6	;RP1=0, select bank1
  1929  0807  085B               	movf	updateClock@evening^(0+128),w
  1930  0808  00DC               	movwf	??_updateClock^(0+128)
  1931  0809  085C               	movf	??_updateClock^(0+128),w
  1932  080A  00EB               	movwf	_PM^(0+128)
  1933  080B                     l2816:
  1934                           
  1935                           ;Clock_ws.c: 96:     LCD_cursor (0,0);
  1936  080B  01AB               	clrf	LCD_cursor@y^(0+128)
  1937  080C  3000               	movlw	0
  1938  080D  160A  118A  2039  120A  158A  	fcall	_LCD_cursor
  1939  0812                     l2818:
  1940                           
  1941                           ;Clock_ws.c: 98:     if(hours<10) LCD_putch('0');
  1942  0812  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0813  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0814  0854               	movf	(updateClock@hours+1)^(0+128),w
  1945  0815  3A80               	xorlw	128
  1946  0816  00FF               	movwf	btemp+1
  1947  0817  3080               	movlw	128
  1948  0818  027F               	subwf	btemp+1,w
  1949  0819  1D03               	skipz
  1950  081A  281D               	goto	u3845
  1951  081B  300A               	movlw	10
  1952  081C  0253               	subwf	updateClock@hours^(0+128),w
  1953  081D                     u3845:
  1954  081D  1803               	skipnc
  1955  081E  2820               	goto	u3841
  1956  081F  2821               	goto	u3840
  1957  0820                     u3841:
  1958  0820  2827               	goto	l2822
  1959  0821                     u3840:
  1960  0821                     l2820:
  1961  0821  3030               	movlw	48
  1962  0822  160A  118A  2053  120A  158A  	fcall	_LCD_putch
  1963  0827                     l2822:
  1964                           
  1965                           ;Clock_ws.c: 99:     LCD_display_value(hours);
  1966  0827  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0828  1303               	bcf	3,6	;RP1=0, select bank1
  1968  0829  0853               	movf	updateClock@hours^(0+128),w
  1969  082A  00C3               	movwf	LCD_display_value@value^(0+128)
  1970  082B  0854               	movf	(updateClock@hours+1)^(0+128),w
  1971  082C  00C4               	movwf	(LCD_display_value@value+1)^(0+128)
  1972  082D  3000               	movlw	0
  1973  082E  1BC4               	btfsc	(LCD_display_value@value+1)^(0+128),7
  1974  082F  30FF               	movlw	255
  1975  0830  00C5               	movwf	(LCD_display_value@value+2)^(0+128)
  1976  0831  00C6               	movwf	(LCD_display_value@value+3)^(0+128)
  1977  0832  160A  118A  2072  120A  158A  	fcall	_LCD_display_value
  1978  0837                     l2824:
  1979                           
  1980                           ;Clock_ws.c: 100:     LCD_putch(':');
  1981  0837  303A               	movlw	58
  1982  0838  160A  118A  2053  120A  158A  	fcall	_LCD_putch
  1983  083D                     l2826:
  1984                           
  1985                           ;Clock_ws.c: 101:     if(minutes<10) LCD_putch('0');
  1986  083D  1683               	bsf	3,5	;RP0=1, select bank1
  1987  083E  1303               	bcf	3,6	;RP1=0, select bank1
  1988  083F  0856               	movf	(updateClock@minutes+1)^(0+128),w
  1989  0840  3A80               	xorlw	128
  1990  0841  00FF               	movwf	btemp+1
  1991  0842  3080               	movlw	128
  1992  0843  027F               	subwf	btemp+1,w
  1993  0844  1D03               	skipz
  1994  0845  2848               	goto	u3855
  1995  0846  300A               	movlw	10
  1996  0847  0255               	subwf	updateClock@minutes^(0+128),w
  1997  0848                     u3855:
  1998  0848  1803               	skipnc
  1999  0849  284B               	goto	u3851
  2000  084A  284C               	goto	u3850
  2001  084B                     u3851:
  2002  084B  2852               	goto	l2830
  2003  084C                     u3850:
  2004  084C                     l2828:
  2005  084C  3030               	movlw	48
  2006  084D  160A  118A  2053  120A  158A  	fcall	_LCD_putch
  2007  0852                     l2830:
  2008                           
  2009                           ;Clock_ws.c: 102:     LCD_display_value(minutes);
  2010  0852  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0853  1303               	bcf	3,6	;RP1=0, select bank1
  2012  0854  0855               	movf	updateClock@minutes^(0+128),w
  2013  0855  00C3               	movwf	LCD_display_value@value^(0+128)
  2014  0856  0856               	movf	(updateClock@minutes+1)^(0+128),w
  2015  0857  00C4               	movwf	(LCD_display_value@value+1)^(0+128)
  2016  0858  3000               	movlw	0
  2017  0859  1BC4               	btfsc	(LCD_display_value@value+1)^(0+128),7
  2018  085A  30FF               	movlw	255
  2019  085B  00C5               	movwf	(LCD_display_value@value+2)^(0+128)
  2020  085C  00C6               	movwf	(LCD_display_value@value+3)^(0+128)
  2021  085D  160A  118A  2072  120A  158A  	fcall	_LCD_display_value
  2022  0862                     l2832:
  2023                           
  2024                           ;Clock_ws.c: 103:     LCD_putch(':');
  2025  0862  303A               	movlw	58
  2026  0863  160A  118A  2053  120A  158A  	fcall	_LCD_putch
  2027  0868                     l2834:
  2028                           
  2029                           ;Clock_ws.c: 104:     if(seconds<10) LCD_putch('0');
  2030  0868  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0869  1303               	bcf	3,6	;RP1=0, select bank1
  2032  086A  0858               	movf	(updateClock@seconds+1)^(0+128),w
  2033  086B  3A80               	xorlw	128
  2034  086C  00FF               	movwf	btemp+1
  2035  086D  3080               	movlw	128
  2036  086E  027F               	subwf	btemp+1,w
  2037  086F  1D03               	skipz
  2038  0870  2873               	goto	u3865
  2039  0871  300A               	movlw	10
  2040  0872  0257               	subwf	updateClock@seconds^(0+128),w
  2041  0873                     u3865:
  2042  0873  1803               	skipnc
  2043  0874  2876               	goto	u3861
  2044  0875  2877               	goto	u3860
  2045  0876                     u3861:
  2046  0876  287D               	goto	l2838
  2047  0877                     u3860:
  2048  0877                     l2836:
  2049  0877  3030               	movlw	48
  2050  0878  160A  118A  2053  120A  158A  	fcall	_LCD_putch
  2051  087D                     l2838:
  2052                           
  2053                           ;Clock_ws.c: 105:     LCD_display_value(seconds);
  2054  087D  1683               	bsf	3,5	;RP0=1, select bank1
  2055  087E  1303               	bcf	3,6	;RP1=0, select bank1
  2056  087F  0857               	movf	updateClock@seconds^(0+128),w
  2057  0880  00C3               	movwf	LCD_display_value@value^(0+128)
  2058  0881  0858               	movf	(updateClock@seconds+1)^(0+128),w
  2059  0882  00C4               	movwf	(LCD_display_value@value+1)^(0+128)
  2060  0883  3000               	movlw	0
  2061  0884  1BC4               	btfsc	(LCD_display_value@value+1)^(0+128),7
  2062  0885  30FF               	movlw	255
  2063  0886  00C5               	movwf	(LCD_display_value@value+2)^(0+128)
  2064  0887  00C6               	movwf	(LCD_display_value@value+3)^(0+128)
  2065  0888  160A  118A  2072  120A  158A  	fcall	_LCD_display_value
  2066  088D                     l2840:
  2067                           
  2068                           ;Clock_ws.c: 106:     LCD_cursor (9,0);
  2069  088D  1683               	bsf	3,5	;RP0=1, select bank1
  2070  088E  1303               	bcf	3,6	;RP1=0, select bank1
  2071  088F  01AB               	clrf	LCD_cursor@y^(0+128)
  2072  0890  3009               	movlw	9
  2073  0891  160A  118A  2039  120A  158A  	fcall	_LCD_cursor
  2074  0896                     l2842:
  2075                           
  2076                           ;Clock_ws.c: 108:     if(clock_mode ==2){
  2077  0896  3002               	movlw	2
  2078  0897  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0898  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0899  0659               	xorwf	updateClock@clock_mode^(0+128),w
  2081  089A  045A               	iorwf	(updateClock@clock_mode+1)^(0+128),w
  2082  089B  1D03               	btfss	3,2
  2083  089C  289E               	goto	u3871
  2084  089D  289F               	goto	u3870
  2085  089E                     u3871:
  2086  089E  28B7               	goto	l216
  2087  089F                     u3870:
  2088  089F                     l2844:
  2089                           
  2090                           ;Clock_ws.c: 109:     if(PM){
  2091  089F  086B               	movf	_PM^(0+128),w
  2092  08A0  1903               	btfsc	3,2
  2093  08A1  28A3               	goto	u3881
  2094  08A2  28A4               	goto	u3880
  2095  08A3                     u3881:
  2096  08A3  28AE               	goto	l2848
  2097  08A4                     u3880:
  2098  08A4                     l2846:
  2099                           
  2100                           ;Clock_ws.c: 110:     LCD_puts("PM");
  2101  08A4  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2102  08A5  00AE               	movwf	LCD_puts@s^(0+128)
  2103  08A6  3080               	movlw	128
  2104  08A7  00AF               	movwf	(LCD_puts@s+1)^(0+128)
  2105  08A8  160A  118A  21D6  120A  158A  	fcall	_LCD_puts
  2106                           
  2107                           ;Clock_ws.c: 111:     }else{
  2108  08AD  28B7               	goto	l216
  2109  08AE                     l2848:
  2110                           
  2111                           ;Clock_ws.c: 112:     LCD_puts("AM");
  2112  08AE  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2113  08AF  00AE               	movwf	LCD_puts@s^(0+128)
  2114  08B0  3080               	movlw	128
  2115  08B1  00AF               	movwf	(LCD_puts@s+1)^(0+128)
  2116  08B2  160A  118A  21D6  120A  158A  	fcall	_LCD_puts
  2117  08B7                     l216:
  2118  08B7  0008               	return
  2119  08B8                     __end_of_updateClock:
  2120                           
  2121                           	psect	text7
  2122  1039                     __ptext7:	
  2123 ;; *************** function _LCD_cursor *****************
  2124 ;; Defined at:
  2125 ;;		line 172 in file "LCDdrive.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  x               1    wreg     unsigned char 
  2128 ;;  y               1   11[BANK1 ] unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  x               1   13[BANK1 ] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, pclath, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       0       1       0       0
  2141 ;;      Locals:         0       0       1       0       0
  2142 ;;      Temps:          0       0       1       0       0
  2143 ;;      Totals:         0       0       3       0       0
  2144 ;;Total ram usage:        3 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 4
  2147 ;; This function calls:
  2148 ;;		_LCD_write
  2149 ;; This function is called by:
  2150 ;;		_updateClock
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _LCD_cursor
  2156  1039                     _LCD_cursor:
  2157                           
  2158                           ;incstack = 0
  2159                           ; Regs used in _LCD_cursor: [wreg+status,2+status,0+pclath+cstack]
  2160                           ;LCD_cursor@x stored from wreg
  2161  1039  1683               	bsf	3,5	;RP0=1, select bank1
  2162  103A  1303               	bcf	3,6	;RP1=0, select bank1
  2163  103B  00AD               	movwf	LCD_cursor@x^(0+128)
  2164  103C                     l2668:
  2165                           
  2166                           ;LCDdrive.c: 172: void LCD_cursor (unsigned char x, unsigned char y );LCDdrive.c: 173: {
      +                          ;LCDdrive.c: 174:     if ( y==0 )
  2167  103C  082B               	movf	LCD_cursor@y^(0+128),w
  2168  103D  1D03               	btfss	3,2
  2169  103E  2840               	goto	u3621
  2170  103F  2841               	goto	u3620
  2171  1040                     u3621:
  2172  1040  2846               	goto	l2672
  2173  1041                     u3620:
  2174  1041                     l2670:
  2175                           
  2176                           ;LCDdrive.c: 175:     {;LCDdrive.c: 177:         y=0x80 ;
  2177  1041  3080               	movlw	128
  2178  1042  00AC               	movwf	??_LCD_cursor^(0+128)
  2179  1043  082C               	movf	??_LCD_cursor^(0+128),w
  2180  1044  00AB               	movwf	LCD_cursor@y^(0+128)
  2181                           
  2182                           ;LCDdrive.c: 178:     }
  2183  1045  284A               	goto	l2674
  2184  1046                     l2672:
  2185                           
  2186                           ;LCDdrive.c: 180:     {;LCDdrive.c: 182:         y=0xc0 ;
  2187  1046  30C0               	movlw	192
  2188  1047  00AC               	movwf	??_LCD_cursor^(0+128)
  2189  1048  082C               	movf	??_LCD_cursor^(0+128),w
  2190  1049  00AB               	movwf	LCD_cursor@y^(0+128)
  2191  104A                     l2674:
  2192                           
  2193                           ;LCDdrive.c: 185:     LCD_write( y+x, 0) ;
  2194  104A  01A0               	clrf	LCD_write@rs^(0+128)
  2195  104B  082D               	movf	LCD_cursor@x^(0+128),w
  2196  104C  072B               	addwf	LCD_cursor@y^(0+128),w
  2197  104D  120A  158A  2230  160A  118A  	fcall	_LCD_write
  2198  1052                     l81:
  2199  1052  0008               	return
  2200  1053                     __end_of_LCD_cursor:
  2201                           
  2202                           	psect	text8
  2203  1394                     __ptext8:	
  2204 ;; *************** function _convert_time *****************
  2205 ;; Defined at:
  2206 ;;		line 166 in file "Clock_ws.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0
  2222 ;;      Temps:          0       0       3       0       0
  2223 ;;      Totals:         0       0       3       0       0
  2224 ;;Total ram usage:        3 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 6
  2227 ;; This function calls:
  2228 ;;		_LCD_puts
  2229 ;;		___awmod
  2230 ;; This function is called by:
  2231 ;;		_set_time
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _convert_time
  2237  1394                     _convert_time:
  2238  1394                     l2850:	
  2239                           ;incstack = 0
  2240                           ; Regs used in _convert_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2241                           
  2242                           
  2243                           ;Clock_ws.c: 167:     if(clock_mode ==1){
  2244  1394  1683               	bsf	3,5	;RP0=1, select bank1
  2245  1395  1303               	bcf	3,6	;RP1=0, select bank1
  2246  1396  036A               	decf	_clock_mode^(0+128),w
  2247  1397  1D03               	btfss	3,2
  2248  1398  2B9A               	goto	u3891
  2249  1399  2B9B               	goto	u3890
  2250  139A                     u3891:
  2251  139A  2BD0               	goto	l2862
  2252  139B                     u3890:
  2253  139B                     l2852:
  2254                           
  2255                           ;Clock_ws.c: 168:         if(PM){
  2256  139B  086B               	movf	_PM^(0+128),w
  2257  139C  1903               	btfsc	3,2
  2258  139D  2B9F               	goto	u3901
  2259  139E  2BA0               	goto	u3900
  2260  139F                     u3901:
  2261  139F  2BC0               	goto	l2858
  2262  13A0                     u3900:
  2263  13A0                     l2854:
  2264                           
  2265                           ;Clock_ws.c: 169:             hour = hour %12;
  2266  13A0  300C               	movlw	12
  2267  13A1  00A0               	movwf	___awmod@divisor^(0+128)
  2268  13A2  3000               	movlw	0
  2269  13A3  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  2270  13A4  086C               	movf	_hour^(0+128),w
  2271  13A5  00B3               	movwf	??_convert_time^(0+128)
  2272  13A6  01B4               	clrf	(??_convert_time^(0+128)+1)
  2273  13A7  0833               	movf	??_convert_time^(0+128),w
  2274  13A8  00A2               	movwf	___awmod@dividend^(0+128)
  2275  13A9  0834               	movf	(??_convert_time+1)^(0+128),w
  2276  13AA  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2277  13AB  160A  118A  2339  160A  118A  	fcall	___awmod
  2278  13B0  1683               	bsf	3,5	;RP0=1, select bank1
  2279  13B1  1303               	bcf	3,6	;RP1=0, select bank1
  2280  13B2  0820               	movf	?___awmod^(0+128),w
  2281  13B3  00B5               	movwf	(??_convert_time+2)^(0+128)
  2282  13B4  0835               	movf	(??_convert_time+2)^(0+128),w
  2283  13B5  00EC               	movwf	_hour^(0+128)
  2284  13B6                     l2856:
  2285                           
  2286                           ;Clock_ws.c: 170:             LCD_puts("PM");
  2287  13B6  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2288  13B7  00AE               	movwf	LCD_puts@s^(0+128)
  2289  13B8  3080               	movlw	128
  2290  13B9  00AF               	movwf	(LCD_puts@s+1)^(0+128)
  2291  13BA  160A  118A  21D6  160A  118A  	fcall	_LCD_puts
  2292                           
  2293                           ;Clock_ws.c: 171:         }
  2294  13BF  2BC9               	goto	l2860
  2295  13C0                     l2858:
  2296                           
  2297                           ;Clock_ws.c: 173:             LCD_puts("AM");
  2298  13C0  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2299  13C1  00AE               	movwf	LCD_puts@s^(0+128)
  2300  13C2  3080               	movlw	128
  2301  13C3  00AF               	movwf	(LCD_puts@s+1)^(0+128)
  2302  13C4  160A  118A  21D6  160A  118A  	fcall	_LCD_puts
  2303  13C9                     l2860:
  2304                           
  2305                           ;Clock_ws.c: 175:         clock_mode = 2;
  2306  13C9  3002               	movlw	2
  2307  13CA  1683               	bsf	3,5	;RP0=1, select bank1
  2308  13CB  1303               	bcf	3,6	;RP1=0, select bank1
  2309  13CC  00B3               	movwf	??_convert_time^(0+128)
  2310  13CD  0833               	movf	??_convert_time^(0+128),w
  2311  13CE  00EA               	movwf	_clock_mode^(0+128)
  2312                           
  2313                           ;Clock_ws.c: 176:     }
  2314  13CF  2BF7               	goto	l238
  2315  13D0                     l2862:
  2316  13D0  3002               	movlw	2
  2317  13D1  066A               	xorwf	_clock_mode^(0+128),w
  2318  13D2  1D03               	btfss	3,2
  2319  13D3  2BD5               	goto	u3911
  2320  13D4  2BD6               	goto	u3910
  2321  13D5                     u3911:
  2322  13D5  2BF7               	goto	l238
  2323  13D6                     u3910:
  2324  13D6                     l2864:
  2325                           
  2326                           ;Clock_ws.c: 178:         if(PM){
  2327  13D6  086B               	movf	_PM^(0+128),w
  2328  13D7  1903               	btfsc	3,2
  2329  13D8  2BDA               	goto	u3921
  2330  13D9  2BDB               	goto	u3920
  2331  13DA                     u3921:
  2332  13DA  2BEA               	goto	l2870
  2333  13DB                     u3920:
  2334  13DB                     l2866:
  2335                           
  2336                           ;Clock_ws.c: 179:             hour = hour +12;
  2337  13DB  086C               	movf	_hour^(0+128),w
  2338  13DC  3E0C               	addlw	12
  2339  13DD  00B3               	movwf	??_convert_time^(0+128)
  2340  13DE  0833               	movf	??_convert_time^(0+128),w
  2341  13DF  00EC               	movwf	_hour^(0+128)
  2342  13E0                     l2868:
  2343                           
  2344                           ;Clock_ws.c: 180:             LCD_puts("  ");
  2345  13E0  3006               	movlw	(low (((STR_8+5)-__stringbase)| (0+32768)))& (0+255)
  2346  13E1  00AE               	movwf	LCD_puts@s^(0+128)
  2347  13E2  3080               	movlw	128
  2348  13E3  00AF               	movwf	(LCD_puts@s+1)^(0+128)
  2349  13E4  160A  118A  21D6  160A  118A  	fcall	_LCD_puts
  2350                           
  2351                           ;Clock_ws.c: 181:         }
  2352  13E9  2BF3               	goto	l2872
  2353  13EA                     l2870:
  2354                           
  2355                           ;Clock_ws.c: 183:              LCD_puts("  ");
  2356  13EA  3006               	movlw	(low (((STR_8+5)-__stringbase)| (0+32768)))& (0+255)
  2357  13EB  00AE               	movwf	LCD_puts@s^(0+128)
  2358  13EC  3080               	movlw	128
  2359  13ED  00AF               	movwf	(LCD_puts@s+1)^(0+128)
  2360  13EE  160A  118A  21D6  160A  118A  	fcall	_LCD_puts
  2361  13F3                     l2872:
  2362                           
  2363                           ;Clock_ws.c: 185:         clock_mode = 1;
  2364  13F3  1683               	bsf	3,5	;RP0=1, select bank1
  2365  13F4  1303               	bcf	3,6	;RP1=0, select bank1
  2366  13F5  01EA               	clrf	_clock_mode^(0+128)
  2367  13F6  0AEA               	incf	_clock_mode^(0+128),f
  2368  13F7                     l238:
  2369  13F7  0008               	return
  2370  13F8                     __end_of_convert_time:
  2371                           
  2372                           	psect	text9
  2373  1339                     __ptext9:	
  2374 ;; *************** function ___awmod *****************
  2375 ;; Defined at:
  2376 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  divisor         2    0[BANK1 ] int 
  2379 ;;  dividend        2    2[BANK1 ] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  sign            1    6[BANK1 ] unsigned char 
  2382 ;;  counter         1    5[BANK1 ] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2    0[BANK1 ] int 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       0       4       0       0
  2393 ;;      Locals:         0       0       2       0       0
  2394 ;;      Temps:          0       0       1       0       0
  2395 ;;      Totals:         0       0       7       0       0
  2396 ;;Total ram usage:        7 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 3
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_convert_time
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function ___awmod
  2408  1339                     ___awmod:
  2409  1339                     l2680:	
  2410                           ;incstack = 0
  2411                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2412                           
  2413  1339  1683               	bsf	3,5	;RP0=1, select bank1
  2414  133A  1303               	bcf	3,6	;RP1=0, select bank1
  2415  133B  01A6               	clrf	___awmod@sign^(0+128)
  2416  133C                     l2682:
  2417  133C  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  2418  133D  2B3F               	goto	u3631
  2419  133E  2B40               	goto	u3630
  2420  133F                     u3631:
  2421  133F  2B47               	goto	l2688
  2422  1340                     u3630:
  2423  1340                     l2684:
  2424  1340  09A2               	comf	___awmod@dividend^(0+128),f
  2425  1341  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2426  1342  0AA2               	incf	___awmod@dividend^(0+128),f
  2427  1343  1903               	skipnz
  2428  1344  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2429  1345                     l2686:
  2430  1345  01A6               	clrf	___awmod@sign^(0+128)
  2431  1346  0AA6               	incf	___awmod@sign^(0+128),f
  2432  1347                     l2688:
  2433  1347  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2434  1348  2B4A               	goto	u3641
  2435  1349  2B4B               	goto	u3640
  2436  134A                     u3641:
  2437  134A  2B50               	goto	l2692
  2438  134B                     u3640:
  2439  134B                     l2690:
  2440  134B  09A0               	comf	___awmod@divisor^(0+128),f
  2441  134C  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  2442  134D  0AA0               	incf	___awmod@divisor^(0+128),f
  2443  134E  1903               	skipnz
  2444  134F  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  2445  1350                     l2692:
  2446  1350  0820               	movf	___awmod@divisor^(0+128),w
  2447  1351  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  2448  1352  1903               	btfsc	3,2
  2449  1353  2B55               	goto	u3651
  2450  1354  2B56               	goto	u3650
  2451  1355                     u3651:
  2452  1355  2B85               	goto	l2710
  2453  1356                     u3650:
  2454  1356                     l2694:
  2455  1356  01A5               	clrf	___awmod@counter^(0+128)
  2456  1357  0AA5               	incf	___awmod@counter^(0+128),f
  2457  1358  2B64               	goto	l2700
  2458  1359                     l2696:
  2459  1359  3001               	movlw	1
  2460  135A                     u3665:
  2461  135A  1003               	clrc
  2462  135B  0DA0               	rlf	___awmod@divisor^(0+128),f
  2463  135C  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  2464  135D  3EFF               	addlw	-1
  2465  135E  1D03               	skipz
  2466  135F  2B5A               	goto	u3665
  2467  1360                     l2698:
  2468  1360  3001               	movlw	1
  2469  1361  00A4               	movwf	??___awmod^(0+128)
  2470  1362  0824               	movf	??___awmod^(0+128),w
  2471  1363  07A5               	addwf	___awmod@counter^(0+128),f
  2472  1364                     l2700:
  2473  1364  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2474  1365  2B67               	goto	u3671
  2475  1366  2B68               	goto	u3670
  2476  1367                     u3671:
  2477  1367  2B59               	goto	l2696
  2478  1368                     u3670:
  2479  1368                     l2702:
  2480  1368  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2481  1369  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  2482  136A  1D03               	skipz
  2483  136B  2B6E               	goto	u3685
  2484  136C  0820               	movf	___awmod@divisor^(0+128),w
  2485  136D  0222               	subwf	___awmod@dividend^(0+128),w
  2486  136E                     u3685:
  2487  136E  1C03               	skipc
  2488  136F  2B71               	goto	u3681
  2489  1370  2B72               	goto	u3680
  2490  1371                     u3681:
  2491  1371  2B78               	goto	l2706
  2492  1372                     u3680:
  2493  1372                     l2704:
  2494  1372  0820               	movf	___awmod@divisor^(0+128),w
  2495  1373  02A2               	subwf	___awmod@dividend^(0+128),f
  2496  1374  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2497  1375  1C03               	skipc
  2498  1376  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  2499  1377  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  2500  1378                     l2706:
  2501  1378  3001               	movlw	1
  2502  1379                     u3695:
  2503  1379  1003               	clrc
  2504  137A  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  2505  137B  0CA0               	rrf	___awmod@divisor^(0+128),f
  2506  137C  3EFF               	addlw	-1
  2507  137D  1D03               	skipz
  2508  137E  2B79               	goto	u3695
  2509  137F                     l2708:
  2510  137F  3001               	movlw	1
  2511  1380  02A5               	subwf	___awmod@counter^(0+128),f
  2512  1381  1D03               	btfss	3,2
  2513  1382  2B84               	goto	u3701
  2514  1383  2B85               	goto	u3700
  2515  1384                     u3701:
  2516  1384  2B68               	goto	l2702
  2517  1385                     u3700:
  2518  1385                     l2710:
  2519  1385  0826               	movf	___awmod@sign^(0+128),w
  2520  1386  1903               	btfsc	3,2
  2521  1387  2B89               	goto	u3711
  2522  1388  2B8A               	goto	u3710
  2523  1389                     u3711:
  2524  1389  2B8F               	goto	l2714
  2525  138A                     u3710:
  2526  138A                     l2712:
  2527  138A  09A2               	comf	___awmod@dividend^(0+128),f
  2528  138B  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2529  138C  0AA2               	incf	___awmod@dividend^(0+128),f
  2530  138D  1903               	skipnz
  2531  138E  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2532  138F                     l2714:
  2533  138F  0823               	movf	(___awmod@dividend+1)^(0+128),w
  2534  1390  00A1               	movwf	(?___awmod+1)^(0+128)
  2535  1391  0822               	movf	___awmod@dividend^(0+128),w
  2536  1392  00A0               	movwf	?___awmod^(0+128)
  2537  1393                     l534:
  2538  1393  0008               	return
  2539  1394                     __end_of___awmod:
  2540                           
  2541                           	psect	text10
  2542  06EB                     __ptext10:	
  2543 ;; *************** function _set_temp *****************
  2544 ;; Defined at:
  2545 ;;		line 194 in file "Clock_ws.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  temp_f          4   65[BANK1 ] int 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       0       0       0       0
  2560 ;;      Locals:         0       0       4       0       0
  2561 ;;      Temps:          0       0       0       0       0
  2562 ;;      Totals:         0       0       4       0       0
  2563 ;;Total ram usage:        4 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 7
  2566 ;; This function calls:
  2567 ;;		_ADC_channel_select
  2568 ;;		_ADC_read
  2569 ;;		_LCD_clear
  2570 ;;		_LCD_display_value
  2571 ;;		_LCD_putch
  2572 ;;		_LCD_putsc
  2573 ;;		___fladd
  2574 ;;		___flmul
  2575 ;;		___fltol
  2576 ;;		___xxtofl
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _set_temp
  2584  06EB                     _set_temp:
  2585  06EB                     l3408:	
  2586                           ;incstack = 0
  2587                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2588                           
  2589                           
  2590                           ;Clock_ws.c: 195:  ADC_channel_select(1);
  2591  06EB  3001               	movlw	1
  2592  06EC  160A  158A  27D3  120A  118A  	fcall	_ADC_channel_select
  2593  06F1                     l3410:
  2594                           
  2595                           ;Clock_ws.c: 196:             temp_c = (ADC_read()*0.088) -40;
  2596  06F1  30C2               	movlw	194
  2597  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  2598  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  2599  06F4  00D0               	movwf	(___fladd@b+3)^(0+128)
  2600  06F5  3020               	movlw	32
  2601  06F6  00CF               	movwf	(___fladd@b+2)^(0+128)
  2602  06F7  3000               	movlw	0
  2603  06F8  00CE               	movwf	(___fladd@b+1)^(0+128)
  2604  06F9  3000               	movlw	0
  2605  06FA  00CD               	movwf	___fladd@b^(0+128)
  2606  06FB  303D               	movlw	61
  2607  06FC  00B6               	movwf	(___flmul@b+3)^(0+128)
  2608  06FD  30B4               	movlw	180
  2609  06FE  00B5               	movwf	(___flmul@b+2)^(0+128)
  2610  06FF  3039               	movlw	57
  2611  0700  00B4               	movwf	(___flmul@b+1)^(0+128)
  2612  0701  3058               	movlw	88
  2613  0702  00B3               	movwf	___flmul@b^(0+128)
  2614  0703  160A  158A  27E7  120A  118A  	fcall	_ADC_read
  2615  0708  1683               	bsf	3,5	;RP0=1, select bank1
  2616  0709  1303               	bcf	3,6	;RP1=0, select bank1
  2617  070A  0820               	movf	?_ADC_read^(0+128),w
  2618  070B  00A5               	movwf	___xxtofl@val^(0+128)
  2619  070C  0821               	movf	(?_ADC_read+1)^(0+128),w
  2620  070D  00A6               	movwf	(___xxtofl@val+1)^(0+128)
  2621  070E  3000               	movlw	0
  2622  070F  1BA6               	btfsc	(___xxtofl@val+1)^(0+128),7
  2623  0710  30FF               	movlw	255
  2624  0711  00A7               	movwf	(___xxtofl@val+2)^(0+128)
  2625  0712  00A8               	movwf	(___xxtofl@val+3)^(0+128)
  2626  0713  3001               	movlw	1
  2627  0714  120A  158A  2174  120A  118A  	fcall	___xxtofl
  2628  0719  1683               	bsf	3,5	;RP0=1, select bank1
  2629  071A  1303               	bcf	3,6	;RP1=0, select bank1
  2630  071B  0828               	movf	(?___xxtofl+3)^(0+128),w
  2631  071C  00BA               	movwf	(___flmul@a+3)^(0+128)
  2632  071D  0827               	movf	(?___xxtofl+2)^(0+128),w
  2633  071E  00B9               	movwf	(___flmul@a+2)^(0+128)
  2634  071F  0826               	movf	(?___xxtofl+1)^(0+128),w
  2635  0720  00B8               	movwf	(___flmul@a+1)^(0+128)
  2636  0721  0825               	movf	?___xxtofl^(0+128),w
  2637  0722  00B7               	movwf	___flmul@a^(0+128)
  2638  0723  120A  118A  2029  120A  118A  	fcall	___flmul
  2639  0728  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0729  1303               	bcf	3,6	;RP1=0, select bank1
  2641  072A  0836               	movf	(?___flmul+3)^(0+128),w
  2642  072B  00D4               	movwf	(___fladd@a+3)^(0+128)
  2643  072C  0835               	movf	(?___flmul+2)^(0+128),w
  2644  072D  00D3               	movwf	(___fladd@a+2)^(0+128)
  2645  072E  0834               	movf	(?___flmul+1)^(0+128),w
  2646  072F  00D2               	movwf	(___fladd@a+1)^(0+128)
  2647  0730  0833               	movf	?___flmul^(0+128),w
  2648  0731  00D1               	movwf	___fladd@a^(0+128)
  2649  0732  120A  158A  2578  120A  118A  	fcall	___fladd
  2650  0737  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0738  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0739  0850               	movf	(?___fladd+3)^(0+128),w
  2653  073A  00E9               	movwf	(_temp_c+3)^(0+128)
  2654  073B  084F               	movf	(?___fladd+2)^(0+128),w
  2655  073C  00E8               	movwf	(_temp_c+2)^(0+128)
  2656  073D  084E               	movf	(?___fladd+1)^(0+128),w
  2657  073E  00E7               	movwf	(_temp_c+1)^(0+128)
  2658  073F  084D               	movf	?___fladd^(0+128),w
  2659  0740  00E6               	movwf	_temp_c^(0+128)
  2660  0741                     l3412:
  2661                           
  2662                           ;Clock_ws.c: 197:             double temp_f = ((temp_c *1.8)+32);
  2663  0741  3042               	movlw	66
  2664  0742  00D0               	movwf	(___fladd@b+3)^(0+128)
  2665  0743  3000               	movlw	0
  2666  0744  00CF               	movwf	(___fladd@b+2)^(0+128)
  2667  0745  3000               	movlw	0
  2668  0746  00CE               	movwf	(___fladd@b+1)^(0+128)
  2669  0747  3000               	movlw	0
  2670  0748  00CD               	movwf	___fladd@b^(0+128)
  2671  0749  303F               	movlw	63
  2672  074A  00B6               	movwf	(___flmul@b+3)^(0+128)
  2673  074B  30E6               	movlw	230
  2674  074C  00B5               	movwf	(___flmul@b+2)^(0+128)
  2675  074D  3066               	movlw	102
  2676  074E  00B4               	movwf	(___flmul@b+1)^(0+128)
  2677  074F  3066               	movlw	102
  2678  0750  00B3               	movwf	___flmul@b^(0+128)
  2679  0751  0869               	movf	(_temp_c+3)^(0+128),w
  2680  0752  00BA               	movwf	(___flmul@a+3)^(0+128)
  2681  0753  0868               	movf	(_temp_c+2)^(0+128),w
  2682  0754  00B9               	movwf	(___flmul@a+2)^(0+128)
  2683  0755  0867               	movf	(_temp_c+1)^(0+128),w
  2684  0756  00B8               	movwf	(___flmul@a+1)^(0+128)
  2685  0757  0866               	movf	_temp_c^(0+128),w
  2686  0758  00B7               	movwf	___flmul@a^(0+128)
  2687  0759  120A  118A  2029  120A  118A  	fcall	___flmul
  2688  075E  1683               	bsf	3,5	;RP0=1, select bank1
  2689  075F  1303               	bcf	3,6	;RP1=0, select bank1
  2690  0760  0836               	movf	(?___flmul+3)^(0+128),w
  2691  0761  00D4               	movwf	(___fladd@a+3)^(0+128)
  2692  0762  0835               	movf	(?___flmul+2)^(0+128),w
  2693  0763  00D3               	movwf	(___fladd@a+2)^(0+128)
  2694  0764  0834               	movf	(?___flmul+1)^(0+128),w
  2695  0765  00D2               	movwf	(___fladd@a+1)^(0+128)
  2696  0766  0833               	movf	?___flmul^(0+128),w
  2697  0767  00D1               	movwf	___fladd@a^(0+128)
  2698  0768  120A  158A  2578  120A  118A  	fcall	___fladd
  2699  076D  1683               	bsf	3,5	;RP0=1, select bank1
  2700  076E  1303               	bcf	3,6	;RP1=0, select bank1
  2701  076F  0850               	movf	(?___fladd+3)^(0+128),w
  2702  0770  00E4               	movwf	(set_temp@temp_f+3)^(0+128)
  2703  0771  084F               	movf	(?___fladd+2)^(0+128),w
  2704  0772  00E3               	movwf	(set_temp@temp_f+2)^(0+128)
  2705  0773  084E               	movf	(?___fladd+1)^(0+128),w
  2706  0774  00E2               	movwf	(set_temp@temp_f+1)^(0+128)
  2707  0775  084D               	movf	?___fladd^(0+128),w
  2708  0776  00E1               	movwf	set_temp@temp_f^(0+128)
  2709  0777                     l3414:
  2710                           
  2711                           ;Clock_ws.c: 198:             if(RD0){
  2712  0777  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0778  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0779  1C08               	btfss	8,0	;volatile
  2715  077A  2F7C               	goto	u5161
  2716  077B  2F7D               	goto	u5160
  2717  077C                     u5161:
  2718  077C  2FD7               	goto	l244
  2719  077D                     u5160:
  2720  077D                     l3416:
  2721                           
  2722                           ;Clock_ws.c: 199:             LCD_clear();
  2723  077D  160A  118A  219F  120A  118A  	fcall	_LCD_clear
  2724  0782                     l3418:
  2725                           
  2726                           ;Clock_ws.c: 200:             LCD_putsc("TEMP:  ");
  2727  0782  3001               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2728  0783  160A  118A  216E  120A  118A  	fcall	_LCD_putsc
  2729  0788                     l3420:
  2730                           
  2731                           ;Clock_ws.c: 201:             if(!RD1){
  2732  0788  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0789  1303               	bcf	3,6	;RP1=0, select bank0
  2734  078A  1888               	btfsc	8,1	;volatile
  2735  078B  2F8D               	goto	u5171
  2736  078C  2F8E               	goto	u5170
  2737  078D                     u5171:
  2738  078D  2FB3               	goto	l3426
  2739  078E                     u5170:
  2740  078E                     l3422:
  2741                           
  2742                           ;Clock_ws.c: 202:             LCD_display_value(temp_c);
  2743  078E  1683               	bsf	3,5	;RP0=1, select bank1
  2744  078F  1303               	bcf	3,6	;RP1=0, select bank1
  2745  0790  0869               	movf	(_temp_c+3)^(0+128),w
  2746  0791  00A3               	movwf	(___fltol@f1+3)^(0+128)
  2747  0792  0868               	movf	(_temp_c+2)^(0+128),w
  2748  0793  00A2               	movwf	(___fltol@f1+2)^(0+128)
  2749  0794  0867               	movf	(_temp_c+1)^(0+128),w
  2750  0795  00A1               	movwf	(___fltol@f1+1)^(0+128)
  2751  0796  0866               	movf	_temp_c^(0+128),w
  2752  0797  00A0               	movwf	___fltol@f1^(0+128)
  2753  0798  160A  118A  2460  120A  118A  	fcall	___fltol
  2754  079D  1683               	bsf	3,5	;RP0=1, select bank1
  2755  079E  1303               	bcf	3,6	;RP1=0, select bank1
  2756  079F  0823               	movf	(?___fltol+3)^(0+128),w
  2757  07A0  00C6               	movwf	(LCD_display_value@value+3)^(0+128)
  2758  07A1  0822               	movf	(?___fltol+2)^(0+128),w
  2759  07A2  00C5               	movwf	(LCD_display_value@value+2)^(0+128)
  2760  07A3  0821               	movf	(?___fltol+1)^(0+128),w
  2761  07A4  00C4               	movwf	(LCD_display_value@value+1)^(0+128)
  2762  07A5  0820               	movf	?___fltol^(0+128),w
  2763  07A6  00C3               	movwf	LCD_display_value@value^(0+128)
  2764  07A7  160A  118A  2072  120A  118A  	fcall	_LCD_display_value
  2765  07AC                     l3424:
  2766                           
  2767                           ;Clock_ws.c: 203:             LCD_putch('C');
  2768  07AC  3043               	movlw	67
  2769  07AD  160A  118A  2053  120A  118A  	fcall	_LCD_putch
  2770                           
  2771                           ;Clock_ws.c: 204:             }else{
  2772  07B2  2FD7               	goto	l244
  2773  07B3                     l3426:
  2774                           
  2775                           ;Clock_ws.c: 205:             LCD_display_value(temp_f);
  2776  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  2777  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  2778  07B5  0864               	movf	(set_temp@temp_f+3)^(0+128),w
  2779  07B6  00A3               	movwf	(___fltol@f1+3)^(0+128)
  2780  07B7  0863               	movf	(set_temp@temp_f+2)^(0+128),w
  2781  07B8  00A2               	movwf	(___fltol@f1+2)^(0+128)
  2782  07B9  0862               	movf	(set_temp@temp_f+1)^(0+128),w
  2783  07BA  00A1               	movwf	(___fltol@f1+1)^(0+128)
  2784  07BB  0861               	movf	set_temp@temp_f^(0+128),w
  2785  07BC  00A0               	movwf	___fltol@f1^(0+128)
  2786  07BD  160A  118A  2460  120A  118A  	fcall	___fltol
  2787  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  2788  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  2789  07C4  0823               	movf	(?___fltol+3)^(0+128),w
  2790  07C5  00C6               	movwf	(LCD_display_value@value+3)^(0+128)
  2791  07C6  0822               	movf	(?___fltol+2)^(0+128),w
  2792  07C7  00C5               	movwf	(LCD_display_value@value+2)^(0+128)
  2793  07C8  0821               	movf	(?___fltol+1)^(0+128),w
  2794  07C9  00C4               	movwf	(LCD_display_value@value+1)^(0+128)
  2795  07CA  0820               	movf	?___fltol^(0+128),w
  2796  07CB  00C3               	movwf	LCD_display_value@value^(0+128)
  2797  07CC  160A  118A  2072  120A  118A  	fcall	_LCD_display_value
  2798  07D1                     l3428:
  2799                           
  2800                           ;Clock_ws.c: 206:             LCD_putch('F');
  2801  07D1  3046               	movlw	70
  2802  07D2  160A  118A  2053  120A  118A  	fcall	_LCD_putch
  2803  07D7                     l244:
  2804  07D7  0008               	return
  2805  07D8                     __end_of_set_temp:
  2806                           
  2807                           	psect	text11
  2808  0974                     __ptext11:	
  2809 ;; *************** function ___xxtofl *****************
  2810 ;; Defined at:
  2811 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  sign            1    wreg     unsigned char 
  2814 ;;  val             4    5[BANK1 ] long 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  sign            1   13[BANK1 ] unsigned char 
  2817 ;;  arg             4   15[BANK1 ] unsigned long 
  2818 ;;  exp             1   14[BANK1 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  4    5[BANK1 ] unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       4       0       0
  2829 ;;      Locals:         0       0       6       0       0
  2830 ;;      Temps:          0       0       4       0       0
  2831 ;;      Totals:         0       0      14       0       0
  2832 ;;Total ram usage:       14 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 3
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_set_temp
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function ___xxtofl
  2844  0974                     ___xxtofl:
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2848                           ;___xxtofl@sign stored from wreg
  2849  0974  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0975  1303               	bcf	3,6	;RP1=0, select bank1
  2851  0976  00AD               	movwf	___xxtofl@sign^(0+128)
  2852  0977                     l3244:
  2853  0977  082D               	movf	___xxtofl@sign^(0+128),w
  2854  0978  1903               	btfsc	3,2
  2855  0979  297B               	goto	u4861
  2856  097A  297C               	goto	u4860
  2857  097B                     u4861:
  2858  097B  2990               	goto	l3250
  2859  097C                     u4860:
  2860  097C                     l3246:
  2861  097C  1FA8               	btfss	(___xxtofl@val+3)^(0+128),7
  2862  097D  297F               	goto	u4871
  2863  097E  2980               	goto	u4870
  2864  097F                     u4871:
  2865  097F  2990               	goto	l3250
  2866  0980                     u4870:
  2867  0980                     l3248:
  2868  0980  0925               	comf	___xxtofl@val^(0+128),w
  2869  0981  00AF               	movwf	___xxtofl@arg^(0+128)
  2870  0982  0926               	comf	(___xxtofl@val^(0+128)+1),w
  2871  0983  00B0               	movwf	(___xxtofl@arg+1)^(0+128)
  2872  0984  0927               	comf	(___xxtofl@val^(0+128)+2),w
  2873  0985  00B1               	movwf	(___xxtofl@arg+2)^(0+128)
  2874  0986  0928               	comf	(___xxtofl@val^(0+128)+3),w
  2875  0987  00B2               	movwf	(___xxtofl@arg+3)^(0+128)
  2876  0988  0AAF               	incf	___xxtofl@arg^(0+128),f
  2877  0989  1903               	skipnz
  2878  098A  0AB0               	incf	(___xxtofl@arg+1)^(0+128),f
  2879  098B  1903               	skipnz
  2880  098C  0AB1               	incf	(___xxtofl@arg+2)^(0+128),f
  2881  098D  1903               	skipnz
  2882  098E  0AB2               	incf	(___xxtofl@arg+3)^(0+128),f
  2883  098F  2998               	goto	l801
  2884  0990                     l3250:
  2885  0990  0828               	movf	(___xxtofl@val+3)^(0+128),w
  2886  0991  00B2               	movwf	(___xxtofl@arg+3)^(0+128)
  2887  0992  0827               	movf	(___xxtofl@val+2)^(0+128),w
  2888  0993  00B1               	movwf	(___xxtofl@arg+2)^(0+128)
  2889  0994  0826               	movf	(___xxtofl@val+1)^(0+128),w
  2890  0995  00B0               	movwf	(___xxtofl@arg+1)^(0+128)
  2891  0996  0825               	movf	___xxtofl@val^(0+128),w
  2892  0997  00AF               	movwf	___xxtofl@arg^(0+128)
  2893  0998                     l801:
  2894  0998  0828               	movf	(___xxtofl@val+3)^(0+128),w
  2895  0999  0427               	iorwf	(___xxtofl@val+2)^(0+128),w
  2896  099A  0426               	iorwf	(___xxtofl@val+1)^(0+128),w
  2897  099B  0425               	iorwf	___xxtofl@val^(0+128),w
  2898  099C  1D03               	skipz
  2899  099D  299F               	goto	u4881
  2900  099E  29A0               	goto	u4880
  2901  099F                     u4881:
  2902  099F  29A9               	goto	l3256
  2903  09A0                     u4880:
  2904  09A0                     l3252:
  2905  09A0  3000               	movlw	0
  2906  09A1  00A8               	movwf	(?___xxtofl+3)^(0+128)
  2907  09A2  3000               	movlw	0
  2908  09A3  00A7               	movwf	(?___xxtofl+2)^(0+128)
  2909  09A4  3000               	movlw	0
  2910  09A5  00A6               	movwf	(?___xxtofl+1)^(0+128)
  2911  09A6  3000               	movlw	0
  2912  09A7  00A5               	movwf	?___xxtofl^(0+128)
  2913  09A8  2A2F               	goto	l803
  2914  09A9                     l3256:
  2915  09A9  3096               	movlw	150
  2916  09AA  00A9               	movwf	??___xxtofl^(0+128)
  2917  09AB  0829               	movf	??___xxtofl^(0+128),w
  2918  09AC  00AE               	movwf	___xxtofl@exp^(0+128)
  2919  09AD  29BB               	goto	l3260
  2920  09AE                     l3258:
  2921  09AE  3001               	movlw	1
  2922  09AF  00A9               	movwf	??___xxtofl^(0+128)
  2923  09B0  0829               	movf	??___xxtofl^(0+128),w
  2924  09B1  07AE               	addwf	___xxtofl@exp^(0+128),f
  2925  09B2  3001               	movlw	1
  2926  09B3                     u4895:
  2927  09B3  1003               	clrc
  2928  09B4  0CB2               	rrf	(___xxtofl@arg+3)^(0+128),f
  2929  09B5  0CB1               	rrf	(___xxtofl@arg+2)^(0+128),f
  2930  09B6  0CB0               	rrf	(___xxtofl@arg+1)^(0+128),f
  2931  09B7  0CAF               	rrf	___xxtofl@arg^(0+128),f
  2932  09B8  3EFF               	addlw	-1
  2933  09B9  1D03               	skipz
  2934  09BA  29B3               	goto	u4895
  2935  09BB                     l3260:
  2936  09BB  30FE               	movlw	254
  2937  09BC  0532               	andwf	(___xxtofl@arg+3)^(0+128),w
  2938  09BD  1D03               	btfss	3,2
  2939  09BE  29C0               	goto	u4901
  2940  09BF  29C1               	goto	u4900
  2941  09C0                     u4901:
  2942  09C0  29AE               	goto	l3258
  2943  09C1                     u4900:
  2944  09C1  29DD               	goto	l807
  2945  09C2                     l3262:
  2946  09C2  3001               	movlw	1
  2947  09C3  00A9               	movwf	??___xxtofl^(0+128)
  2948  09C4  0829               	movf	??___xxtofl^(0+128),w
  2949  09C5  07AE               	addwf	___xxtofl@exp^(0+128),f
  2950  09C6                     l3264:
  2951  09C6  3001               	movlw	1
  2952  09C7  07AF               	addwf	___xxtofl@arg^(0+128),f
  2953  09C8  3000               	movlw	0
  2954  09C9  1803               	skipnc
  2955  09CA  3001               	movlw	1
  2956  09CB  07B0               	addwf	(___xxtofl@arg+1)^(0+128),f
  2957  09CC  3000               	movlw	0
  2958  09CD  1803               	skipnc
  2959  09CE  3001               	movlw	1
  2960  09CF  07B1               	addwf	(___xxtofl@arg+2)^(0+128),f
  2961  09D0  3000               	movlw	0
  2962  09D1  1803               	skipnc
  2963  09D2  3001               	movlw	1
  2964  09D3  07B2               	addwf	(___xxtofl@arg+3)^(0+128),f
  2965  09D4                     l3266:
  2966  09D4  3001               	movlw	1
  2967  09D5                     u4915:
  2968  09D5  1003               	clrc
  2969  09D6  0CB2               	rrf	(___xxtofl@arg+3)^(0+128),f
  2970  09D7  0CB1               	rrf	(___xxtofl@arg+2)^(0+128),f
  2971  09D8  0CB0               	rrf	(___xxtofl@arg+1)^(0+128),f
  2972  09D9  0CAF               	rrf	___xxtofl@arg^(0+128),f
  2973  09DA  3EFF               	addlw	-1
  2974  09DB  1D03               	skipz
  2975  09DC  29D5               	goto	u4915
  2976  09DD                     l807:
  2977  09DD  30FF               	movlw	255
  2978  09DE  0532               	andwf	(___xxtofl@arg+3)^(0+128),w
  2979  09DF  1D03               	btfss	3,2
  2980  09E0  29E2               	goto	u4921
  2981  09E1  29E3               	goto	u4920
  2982  09E2                     u4921:
  2983  09E2  29C2               	goto	l3262
  2984  09E3                     u4920:
  2985  09E3  29EF               	goto	l3270
  2986  09E4                     l3268:
  2987  09E4  3001               	movlw	1
  2988  09E5  02AE               	subwf	___xxtofl@exp^(0+128),f
  2989  09E6  3001               	movlw	1
  2990  09E7  00A9               	movwf	??___xxtofl^(0+128)
  2991  09E8                     u4935:
  2992  09E8  1003               	clrc
  2993  09E9  0DAF               	rlf	___xxtofl@arg^(0+128),f
  2994  09EA  0DB0               	rlf	(___xxtofl@arg+1)^(0+128),f
  2995  09EB  0DB1               	rlf	(___xxtofl@arg+2)^(0+128),f
  2996  09EC  0DB2               	rlf	(___xxtofl@arg+3)^(0+128),f
  2997  09ED  0BA9               	decfsz	??___xxtofl^(0+128),f
  2998  09EE  29E8               	goto	u4935
  2999  09EF                     l3270:
  3000  09EF  1BB1               	btfsc	(___xxtofl@arg+2)^(0+128),7
  3001  09F0  29F2               	goto	u4941
  3002  09F1  29F3               	goto	u4940
  3003  09F2                     u4941:
  3004  09F2  29F9               	goto	l814
  3005  09F3                     u4940:
  3006  09F3                     l3272:
  3007  09F3  3002               	movlw	2
  3008  09F4  022E               	subwf	___xxtofl@exp^(0+128),w
  3009  09F5  1803               	skipnc
  3010  09F6  29F8               	goto	u4951
  3011  09F7  29F9               	goto	u4950
  3012  09F8                     u4951:
  3013  09F8  29E4               	goto	l3268
  3014  09F9                     u4950:
  3015  09F9                     l814:
  3016  09F9  182E               	btfsc	___xxtofl@exp^(0+128),0
  3017  09FA  29FC               	goto	u4961
  3018  09FB  29FD               	goto	u4960
  3019  09FC                     u4961:
  3020  09FC  2A05               	goto	l815
  3021  09FD                     u4960:
  3022  09FD                     l3274:
  3023  09FD  30FF               	movlw	255
  3024  09FE  05AF               	andwf	___xxtofl@arg^(0+128),f
  3025  09FF  30FF               	movlw	255
  3026  0A00  05B0               	andwf	(___xxtofl@arg+1)^(0+128),f
  3027  0A01  307F               	movlw	127
  3028  0A02  05B1               	andwf	(___xxtofl@arg+2)^(0+128),f
  3029  0A03  30FF               	movlw	255
  3030  0A04  05B2               	andwf	(___xxtofl@arg+3)^(0+128),f
  3031  0A05                     l815:
  3032  0A05  1003               	clrc
  3033  0A06  0CAE               	rrf	___xxtofl@exp^(0+128),f
  3034  0A07                     l3276:
  3035  0A07  082E               	movf	___xxtofl@exp^(0+128),w
  3036  0A08  00A9               	movwf	??___xxtofl^(0+128)
  3037  0A09  01AA               	clrf	(??___xxtofl^(0+128)+1)
  3038  0A0A  01AB               	clrf	(??___xxtofl^(0+128)+2)
  3039  0A0B  01AC               	clrf	(??___xxtofl^(0+128)+3)
  3040  0A0C  3018               	movlw	24
  3041  0A0D                     u4975:
  3042  0A0D  1003               	clrc
  3043  0A0E  0DA9               	rlf	??___xxtofl^(0+128),f
  3044  0A0F  0DAA               	rlf	(??___xxtofl^(0+128)+1),f
  3045  0A10  0DAB               	rlf	(??___xxtofl^(0+128)+2),f
  3046  0A11  0DAC               	rlf	(??___xxtofl^(0+128)+3),f
  3047  0A12                     u4970:
  3048  0A12  3EFF               	addlw	-1
  3049  0A13  1D03               	skipz
  3050  0A14  2A0D               	goto	u4975
  3051  0A15  0829               	movf	??___xxtofl^(0+128),w
  3052  0A16  04AF               	iorwf	___xxtofl@arg^(0+128),f
  3053  0A17  082A               	movf	(??___xxtofl+1)^(0+128),w
  3054  0A18  04B0               	iorwf	(___xxtofl@arg+1)^(0+128),f
  3055  0A19  082B               	movf	(??___xxtofl+2)^(0+128),w
  3056  0A1A  04B1               	iorwf	(___xxtofl@arg+2)^(0+128),f
  3057  0A1B  082C               	movf	(??___xxtofl+3)^(0+128),w
  3058  0A1C  04B2               	iorwf	(___xxtofl@arg+3)^(0+128),f
  3059  0A1D                     l3278:
  3060  0A1D  082D               	movf	___xxtofl@sign^(0+128),w
  3061  0A1E  1903               	btfsc	3,2
  3062  0A1F  2A21               	goto	u4981
  3063  0A20  2A22               	goto	u4980
  3064  0A21                     u4981:
  3065  0A21  2A27               	goto	l3284
  3066  0A22                     u4980:
  3067  0A22                     l3280:
  3068  0A22  1FA8               	btfss	(___xxtofl@val+3)^(0+128),7
  3069  0A23  2A25               	goto	u4991
  3070  0A24  2A26               	goto	u4990
  3071  0A25                     u4991:
  3072  0A25  2A27               	goto	l3284
  3073  0A26                     u4990:
  3074  0A26                     l3282:
  3075  0A26  17B2               	bsf	(___xxtofl@arg^(0+128)+3),7
  3076  0A27                     l3284:
  3077  0A27  0832               	movf	(___xxtofl@arg+3)^(0+128),w
  3078  0A28  00A8               	movwf	(?___xxtofl+3)^(0+128)
  3079  0A29  0831               	movf	(___xxtofl@arg+2)^(0+128),w
  3080  0A2A  00A7               	movwf	(?___xxtofl+2)^(0+128)
  3081  0A2B  0830               	movf	(___xxtofl@arg+1)^(0+128),w
  3082  0A2C  00A6               	movwf	(?___xxtofl+1)^(0+128)
  3083  0A2D  082F               	movf	___xxtofl@arg^(0+128),w
  3084  0A2E  00A5               	movwf	?___xxtofl^(0+128)
  3085  0A2F                     l803:
  3086  0A2F  0008               	return
  3087  0A30                     __end_of___xxtofl:
  3088                           
  3089                           	psect	text12
  3090  1460                     __ptext12:	
  3091 ;; *************** function ___fltol *****************
  3092 ;; Defined at:
  3093 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  f1              4    0[BANK1 ] unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  exp1            1   10[BANK1 ] unsigned char 
  3098 ;;  sign1           1    9[BANK1 ] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  4    0[BANK1 ] long 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       4       0       0
  3109 ;;      Locals:         0       0       2       0       0
  3110 ;;      Temps:          0       0       5       0       0
  3111 ;;      Totals:         0       0      11       0       0
  3112 ;;Total ram usage:       11 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 3
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_set_temp
  3119 ;;		_LCD_display_float
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function ___fltol
  3125  1460                     ___fltol:
  3126  1460                     l2874:	
  3127                           ;incstack = 0
  3128                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3129                           
  3130  1460  1003               	clrc
  3131  1461  1683               	bsf	3,5	;RP0=1, select bank1
  3132  1462  1303               	bcf	3,6	;RP1=0, select bank1
  3133  1463  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  3134  1464  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  3135  1465  00A4               	movwf	??___fltol^(0+128)
  3136  1466  0824               	movf	??___fltol^(0+128),w
  3137  1467  00AA               	movwf	___fltol@exp1^(0+128)
  3138  1468  082A               	movf	___fltol@exp1^(0+128),w
  3139  1469  1D03               	btfss	3,2
  3140  146A  2C6C               	goto	u3931
  3141  146B  2C6D               	goto	u3930
  3142  146C                     u3931:
  3143  146C  2C76               	goto	l2880
  3144  146D                     u3930:
  3145  146D                     l2876:
  3146  146D  3000               	movlw	0
  3147  146E  00A3               	movwf	(?___fltol+3)^(0+128)
  3148  146F  3000               	movlw	0
  3149  1470  00A2               	movwf	(?___fltol+2)^(0+128)
  3150  1471  3000               	movlw	0
  3151  1472  00A1               	movwf	(?___fltol+1)^(0+128)
  3152  1473  3000               	movlw	0
  3153  1474  00A0               	movwf	?___fltol^(0+128)
  3154  1475  2CDB               	goto	l554
  3155  1476                     l2880:
  3156  1476  0820               	movf	___fltol@f1^(0+128),w
  3157  1477  00A4               	movwf	??___fltol^(0+128)
  3158  1478  0821               	movf	(___fltol@f1+1)^(0+128),w
  3159  1479  00A5               	movwf	(??___fltol^(0+128)+1)
  3160  147A  0822               	movf	(___fltol@f1+2)^(0+128),w
  3161  147B  00A6               	movwf	(??___fltol^(0+128)+2)
  3162  147C  0823               	movf	(___fltol@f1+3)^(0+128),w
  3163  147D  00A7               	movwf	(??___fltol^(0+128)+3)
  3164  147E  301F               	movlw	31
  3165  147F                     u3945:
  3166  147F  1003               	clrc
  3167  1480  0CA7               	rrf	(??___fltol^(0+128)+3),f
  3168  1481  0CA6               	rrf	(??___fltol^(0+128)+2),f
  3169  1482  0CA5               	rrf	(??___fltol^(0+128)+1),f
  3170  1483  0CA4               	rrf	??___fltol^(0+128),f
  3171  1484                     u3940:
  3172  1484  3EFF               	addlw	-1
  3173  1485  1D03               	skipz
  3174  1486  2C7F               	goto	u3945
  3175  1487  0824               	movf	??___fltol^(0+128),w
  3176  1488  00A8               	movwf	(??___fltol+4)^(0+128)
  3177  1489  0828               	movf	(??___fltol+4)^(0+128),w
  3178  148A  00A9               	movwf	___fltol@sign1^(0+128)
  3179  148B                     l2882:
  3180  148B  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  3181  148C                     l2884:
  3182  148C  30FF               	movlw	255
  3183  148D  05A0               	andwf	___fltol@f1^(0+128),f
  3184  148E  30FF               	movlw	255
  3185  148F  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  3186  1490  30FF               	movlw	255
  3187  1491  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  3188  1492  3000               	movlw	0
  3189  1493  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  3190  1494                     l2886:
  3191  1494  3096               	movlw	150
  3192  1495  02AA               	subwf	___fltol@exp1^(0+128),f
  3193  1496                     l2888:
  3194  1496  1FAA               	btfss	___fltol@exp1^(0+128),7
  3195  1497  2C99               	goto	u3951
  3196  1498  2C9A               	goto	u3950
  3197  1499                     u3951:
  3198  1499  2CB4               	goto	l2898
  3199  149A                     u3950:
  3200  149A                     l2890:
  3201  149A  082A               	movf	___fltol@exp1^(0+128),w
  3202  149B  3A80               	xorlw	128
  3203  149C  3E97               	addlw	151
  3204  149D  1803               	skipnc
  3205  149E  2CA0               	goto	u3961
  3206  149F  2CA1               	goto	u3960
  3207  14A0                     u3961:
  3208  14A0  2CA2               	goto	l2896
  3209  14A1                     u3960:
  3210  14A1  2C6D               	goto	l2876
  3211  14A2                     l2896:
  3212  14A2  3001               	movlw	1
  3213  14A3                     u3975:
  3214  14A3  1003               	clrc
  3215  14A4  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  3216  14A5  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  3217  14A6  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  3218  14A7  0CA0               	rrf	___fltol@f1^(0+128),f
  3219  14A8  3EFF               	addlw	-1
  3220  14A9  1D03               	skipz
  3221  14AA  2CA3               	goto	u3975
  3222  14AB  3001               	movlw	1
  3223  14AC  00A4               	movwf	??___fltol^(0+128)
  3224  14AD  0824               	movf	??___fltol^(0+128),w
  3225  14AE  07AA               	addwf	___fltol@exp1^(0+128),f
  3226  14AF  1D03               	btfss	3,2
  3227  14B0  2CB2               	goto	u3981
  3228  14B1  2CB3               	goto	u3980
  3229  14B2                     u3981:
  3230  14B2  2CA2               	goto	l2896
  3231  14B3                     u3980:
  3232  14B3  2CCB               	goto	l2906
  3233  14B4                     l2898:
  3234  14B4  3020               	movlw	32
  3235  14B5  022A               	subwf	___fltol@exp1^(0+128),w
  3236  14B6  1C03               	skipc
  3237  14B7  2CB9               	goto	u3991
  3238  14B8  2CBA               	goto	u3990
  3239  14B9                     u3991:
  3240  14B9  2CC6               	goto	l561
  3241  14BA                     u3990:
  3242  14BA  2C6D               	goto	l2876
  3243  14BB                     l2904:
  3244  14BB  3001               	movlw	1
  3245  14BC  00A4               	movwf	??___fltol^(0+128)
  3246  14BD                     u4005:
  3247  14BD  1003               	clrc
  3248  14BE  0DA0               	rlf	___fltol@f1^(0+128),f
  3249  14BF  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  3250  14C0  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  3251  14C1  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  3252  14C2  0BA4               	decfsz	??___fltol^(0+128),f
  3253  14C3  2CBD               	goto	u4005
  3254  14C4  3001               	movlw	1
  3255  14C5  02AA               	subwf	___fltol@exp1^(0+128),f
  3256  14C6                     l561:
  3257  14C6  082A               	movf	___fltol@exp1^(0+128),w
  3258  14C7  1D03               	btfss	3,2
  3259  14C8  2CCA               	goto	u4011
  3260  14C9  2CCB               	goto	u4010
  3261  14CA                     u4011:
  3262  14CA  2CBB               	goto	l2904
  3263  14CB                     u4010:
  3264  14CB                     l2906:
  3265  14CB  0829               	movf	___fltol@sign1^(0+128),w
  3266  14CC  1903               	btfsc	3,2
  3267  14CD  2CCF               	goto	u4021
  3268  14CE  2CD0               	goto	u4020
  3269  14CF                     u4021:
  3270  14CF  2CDB               	goto	l564
  3271  14D0                     u4020:
  3272  14D0                     l2908:
  3273  14D0  09A0               	comf	___fltol@f1^(0+128),f
  3274  14D1  09A1               	comf	(___fltol@f1+1)^(0+128),f
  3275  14D2  09A2               	comf	(___fltol@f1+2)^(0+128),f
  3276  14D3  09A3               	comf	(___fltol@f1+3)^(0+128),f
  3277  14D4  0AA0               	incf	___fltol@f1^(0+128),f
  3278  14D5  1903               	skipnz
  3279  14D6  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  3280  14D7  1903               	skipnz
  3281  14D8  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  3282  14D9  1903               	skipnz
  3283  14DA  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  3284  14DB                     l564:
  3285  14DB                     l554:
  3286  14DB  0008               	return
  3287  14DC                     __end_of___fltol:
  3288                           
  3289                           	psect	text13
  3290  0029                     __ptext13:	
  3291 ;; *************** function ___flmul *****************
  3292 ;; Defined at:
  3293 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  b               4   19[BANK1 ] long 
  3296 ;;  a               4   23[BANK1 ] long 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  prod            4   39[BANK1 ] struct .
  3299 ;;  grs             4   33[BANK1 ] unsigned long 
  3300 ;;  temp            2   43[BANK1 ] struct .
  3301 ;;  bexp            1   38[BANK1 ] unsigned char 
  3302 ;;  aexp            1   37[BANK1 ] unsigned char 
  3303 ;;  sign            1   32[BANK1 ] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  4   19[BANK1 ] unsigned char 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         0       0       8       0       0
  3314 ;;      Locals:         0       0      13       0       0
  3315 ;;      Temps:          0       0       5       0       0
  3316 ;;      Totals:         0       0      26       0       0
  3317 ;;Total ram usage:       26 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; Hardware stack levels required when called: 4
  3320 ;; This function calls:
  3321 ;;		__Umul8_16
  3322 ;; This function is called by:
  3323 ;;		_set_temp
  3324 ;;		_LCD_display_float
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function ___flmul
  3330  0029                     ___flmul:
  3331  0029                     l3104:	
  3332                           ;incstack = 0
  3333                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3334                           
  3335  0029  1683               	bsf	3,5	;RP0=1, select bank1
  3336  002A  1303               	bcf	3,6	;RP1=0, select bank1
  3337  002B  0836               	movf	(___flmul@b^(0+128)+3),w
  3338  002C  3980               	andlw	128
  3339  002D  00BB               	movwf	??___flmul^(0+128)
  3340  002E  083B               	movf	??___flmul^(0+128),w
  3341  002F  00C0               	movwf	___flmul@sign^(0+128)
  3342  0030                     l3106:
  3343  0030  0836               	movf	(___flmul@b^(0+128)+3),w
  3344  0031  00BB               	movwf	??___flmul^(0+128)
  3345  0032  073B               	addwf	??___flmul^(0+128),w
  3346  0033  00BC               	movwf	(??___flmul+1)^(0+128)
  3347  0034  083C               	movf	(??___flmul+1)^(0+128),w
  3348  0035  00C6               	movwf	___flmul@bexp^(0+128)
  3349  0036                     l3108:
  3350  0036  1FB5               	btfss	(___flmul@b^(0+128)+2),7
  3351  0037  2839               	goto	u4491
  3352  0038  283A               	goto	u4490
  3353  0039                     u4491:
  3354  0039  283B               	goto	l3112
  3355  003A                     u4490:
  3356  003A                     l3110:
  3357  003A  1446               	bsf	___flmul@bexp^(0+128),0
  3358  003B                     l3112:
  3359  003B  0846               	movf	___flmul@bexp^(0+128),w
  3360  003C  1903               	btfsc	3,2
  3361  003D  283F               	goto	u4501
  3362  003E  2840               	goto	u4500
  3363  003F                     u4501:
  3364  003F  284F               	goto	l3120
  3365  0040                     u4500:
  3366  0040                     l3114:
  3367  0040  0A46               	incf	___flmul@bexp^(0+128),w
  3368  0041  1D03               	btfss	3,2
  3369  0042  2844               	goto	u4511
  3370  0043  2845               	goto	u4510
  3371  0044                     u4511:
  3372  0044  284D               	goto	l3118
  3373  0045                     u4510:
  3374  0045                     l3116:
  3375  0045  3000               	movlw	0
  3376  0046  00B6               	movwf	(___flmul@b+3)^(0+128)
  3377  0047  3000               	movlw	0
  3378  0048  00B5               	movwf	(___flmul@b+2)^(0+128)
  3379  0049  3000               	movlw	0
  3380  004A  00B4               	movwf	(___flmul@b+1)^(0+128)
  3381  004B  3000               	movlw	0
  3382  004C  00B3               	movwf	___flmul@b^(0+128)
  3383  004D                     l3118:
  3384  004D  17B5               	bsf	(___flmul@b^(0+128)+2),7
  3385  004E  2857               	goto	l3122
  3386  004F                     l3120:
  3387  004F  3000               	movlw	0
  3388  0050  00B6               	movwf	(___flmul@b+3)^(0+128)
  3389  0051  3000               	movlw	0
  3390  0052  00B5               	movwf	(___flmul@b+2)^(0+128)
  3391  0053  3000               	movlw	0
  3392  0054  00B4               	movwf	(___flmul@b+1)^(0+128)
  3393  0055  3000               	movlw	0
  3394  0056  00B3               	movwf	___flmul@b^(0+128)
  3395  0057                     l3122:
  3396  0057  083A               	movf	(___flmul@a^(0+128)+3),w
  3397  0058  3980               	andlw	128
  3398  0059  00BB               	movwf	??___flmul^(0+128)
  3399  005A  083B               	movf	??___flmul^(0+128),w
  3400  005B  06C0               	xorwf	___flmul@sign^(0+128),f
  3401  005C                     l3124:
  3402  005C  083A               	movf	(___flmul@a^(0+128)+3),w
  3403  005D  00BB               	movwf	??___flmul^(0+128)
  3404  005E  073B               	addwf	??___flmul^(0+128),w
  3405  005F  00BC               	movwf	(??___flmul+1)^(0+128)
  3406  0060  083C               	movf	(??___flmul+1)^(0+128),w
  3407  0061  00C5               	movwf	___flmul@aexp^(0+128)
  3408  0062                     l3126:
  3409  0062  1FB9               	btfss	(___flmul@a^(0+128)+2),7
  3410  0063  2865               	goto	u4521
  3411  0064  2866               	goto	u4520
  3412  0065                     u4521:
  3413  0065  2867               	goto	l3130
  3414  0066                     u4520:
  3415  0066                     l3128:
  3416  0066  1445               	bsf	___flmul@aexp^(0+128),0
  3417  0067                     l3130:
  3418  0067  0845               	movf	___flmul@aexp^(0+128),w
  3419  0068  1903               	btfsc	3,2
  3420  0069  286B               	goto	u4531
  3421  006A  286C               	goto	u4530
  3422  006B                     u4531:
  3423  006B  287B               	goto	l3138
  3424  006C                     u4530:
  3425  006C                     l3132:
  3426  006C  0A45               	incf	___flmul@aexp^(0+128),w
  3427  006D  1D03               	btfss	3,2
  3428  006E  2870               	goto	u4541
  3429  006F  2871               	goto	u4540
  3430  0070                     u4541:
  3431  0070  2879               	goto	l3136
  3432  0071                     u4540:
  3433  0071                     l3134:
  3434  0071  3000               	movlw	0
  3435  0072  00BA               	movwf	(___flmul@a+3)^(0+128)
  3436  0073  3000               	movlw	0
  3437  0074  00B9               	movwf	(___flmul@a+2)^(0+128)
  3438  0075  3000               	movlw	0
  3439  0076  00B8               	movwf	(___flmul@a+1)^(0+128)
  3440  0077  3000               	movlw	0
  3441  0078  00B7               	movwf	___flmul@a^(0+128)
  3442  0079                     l3136:
  3443  0079  17B9               	bsf	(___flmul@a^(0+128)+2),7
  3444  007A  2883               	goto	l3140
  3445  007B                     l3138:
  3446  007B  3000               	movlw	0
  3447  007C  00BA               	movwf	(___flmul@a+3)^(0+128)
  3448  007D  3000               	movlw	0
  3449  007E  00B9               	movwf	(___flmul@a+2)^(0+128)
  3450  007F  3000               	movlw	0
  3451  0080  00B8               	movwf	(___flmul@a+1)^(0+128)
  3452  0081  3000               	movlw	0
  3453  0082  00B7               	movwf	___flmul@a^(0+128)
  3454  0083                     l3140:
  3455  0083  0845               	movf	___flmul@aexp^(0+128),w
  3456  0084  1903               	btfsc	3,2
  3457  0085  2887               	goto	u4551
  3458  0086  2888               	goto	u4550
  3459  0087                     u4551:
  3460  0087  288D               	goto	l3144
  3461  0088                     u4550:
  3462  0088                     l3142:
  3463  0088  0846               	movf	___flmul@bexp^(0+128),w
  3464  0089  1D03               	btfss	3,2
  3465  008A  288C               	goto	u4561
  3466  008B  288D               	goto	u4560
  3467  008C                     u4561:
  3468  008C  2896               	goto	l3148
  3469  008D                     u4560:
  3470  008D                     l3144:
  3471  008D  3000               	movlw	0
  3472  008E  00B6               	movwf	(?___flmul+3)^(0+128)
  3473  008F  3000               	movlw	0
  3474  0090  00B5               	movwf	(?___flmul+2)^(0+128)
  3475  0091  3000               	movlw	0
  3476  0092  00B4               	movwf	(?___flmul+1)^(0+128)
  3477  0093  3000               	movlw	0
  3478  0094  00B3               	movwf	?___flmul^(0+128)
  3479  0095  2B89               	goto	l757
  3480  0096                     l3148:
  3481  0096  0833               	movf	___flmul@b^(0+128),w
  3482  0097  00BB               	movwf	??___flmul^(0+128)
  3483  0098  083B               	movf	??___flmul^(0+128),w
  3484  0099  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3485  009A  0839               	movf	(___flmul@a^(0+128)+2),w
  3486  009B  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3487  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  3488  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  3489  00A2  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3490  00A3  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3491  00A4  0820               	movf	?__Umul8_16^(0+128),w
  3492  00A5  00CB               	movwf	___flmul@temp^(0+128)
  3493  00A6                     l3150:
  3494  00A6  084B               	movf	___flmul@temp^(0+128),w
  3495  00A7  00BB               	movwf	??___flmul^(0+128)
  3496  00A8  01BC               	clrf	(??___flmul^(0+128)+1)
  3497  00A9  01BD               	clrf	(??___flmul^(0+128)+2)
  3498  00AA  01BE               	clrf	(??___flmul^(0+128)+3)
  3499  00AB  083E               	movf	(??___flmul+3)^(0+128),w
  3500  00AC  00C4               	movwf	(___flmul@grs+3)^(0+128)
  3501  00AD  083D               	movf	(??___flmul+2)^(0+128),w
  3502  00AE  00C3               	movwf	(___flmul@grs+2)^(0+128)
  3503  00AF  083C               	movf	(??___flmul+1)^(0+128),w
  3504  00B0  00C2               	movwf	(___flmul@grs+1)^(0+128)
  3505  00B1  083B               	movf	??___flmul^(0+128),w
  3506  00B2  00C1               	movwf	___flmul@grs^(0+128)
  3507  00B3                     l3152:
  3508  00B3  084C               	movf	(___flmul@temp^(0+128)+1),w
  3509  00B4  00BB               	movwf	??___flmul^(0+128)
  3510  00B5  01BC               	clrf	(??___flmul^(0+128)+1)
  3511  00B6  01BD               	clrf	(??___flmul^(0+128)+2)
  3512  00B7  01BE               	clrf	(??___flmul^(0+128)+3)
  3513  00B8  083E               	movf	(??___flmul+3)^(0+128),w
  3514  00B9  00CA               	movwf	(___flmul@prod+3)^(0+128)
  3515  00BA  083D               	movf	(??___flmul+2)^(0+128),w
  3516  00BB  00C9               	movwf	(___flmul@prod+2)^(0+128)
  3517  00BC  083C               	movf	(??___flmul+1)^(0+128),w
  3518  00BD  00C8               	movwf	(___flmul@prod+1)^(0+128)
  3519  00BE  083B               	movf	??___flmul^(0+128),w
  3520  00BF  00C7               	movwf	___flmul@prod^(0+128)
  3521  00C0  0834               	movf	(___flmul@b^(0+128)+1),w
  3522  00C1  00BB               	movwf	??___flmul^(0+128)
  3523  00C2  083B               	movf	??___flmul^(0+128),w
  3524  00C3  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3525  00C4  0838               	movf	(___flmul@a^(0+128)+1),w
  3526  00C5  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3527  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  3528  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  3529  00CC  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3530  00CD  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3531  00CE  0820               	movf	?__Umul8_16^(0+128),w
  3532  00CF  00CB               	movwf	___flmul@temp^(0+128)
  3533  00D0                     l3154:
  3534  00D0  084B               	movf	___flmul@temp^(0+128),w
  3535  00D1  00BB               	movwf	??___flmul^(0+128)
  3536  00D2  01BC               	clrf	(??___flmul^(0+128)+1)
  3537  00D3  01BD               	clrf	(??___flmul^(0+128)+2)
  3538  00D4  01BE               	clrf	(??___flmul^(0+128)+3)
  3539  00D5  083B               	movf	??___flmul^(0+128),w
  3540  00D6  07C1               	addwf	___flmul@grs^(0+128),f
  3541  00D7  083C               	movf	(??___flmul+1)^(0+128),w
  3542  00D8  1103               	clrz
  3543  00D9  1803               	skipnc
  3544  00DA  3E01               	addlw	1
  3545  00DB  1903               	skipnz
  3546  00DC  28DE               	goto	u4571
  3547  00DD  07C2               	addwf	(___flmul@grs+1)^(0+128),f
  3548  00DE                     u4571:
  3549  00DE  083D               	movf	(??___flmul+2)^(0+128),w
  3550  00DF  1103               	clrz
  3551  00E0  1803               	skipnc
  3552  00E1  3E01               	addlw	1
  3553  00E2  1903               	skipnz
  3554  00E3  28E5               	goto	u4572
  3555  00E4  07C3               	addwf	(___flmul@grs+2)^(0+128),f
  3556  00E5                     u4572:
  3557  00E5  083E               	movf	(??___flmul+3)^(0+128),w
  3558  00E6  1103               	clrz
  3559  00E7  1803               	skipnc
  3560  00E8  3E01               	addlw	1
  3561  00E9  1903               	skipnz
  3562  00EA  28EC               	goto	u4573
  3563  00EB  07C4               	addwf	(___flmul@grs+3)^(0+128),f
  3564  00EC                     u4573:
  3565  00EC                     l3156:
  3566  00EC  084C               	movf	(___flmul@temp^(0+128)+1),w
  3567  00ED  00BB               	movwf	??___flmul^(0+128)
  3568  00EE  01BC               	clrf	(??___flmul^(0+128)+1)
  3569  00EF  01BD               	clrf	(??___flmul^(0+128)+2)
  3570  00F0  01BE               	clrf	(??___flmul^(0+128)+3)
  3571  00F1  083B               	movf	??___flmul^(0+128),w
  3572  00F2  07C7               	addwf	___flmul@prod^(0+128),f
  3573  00F3  083C               	movf	(??___flmul+1)^(0+128),w
  3574  00F4  1103               	clrz
  3575  00F5  1803               	skipnc
  3576  00F6  3E01               	addlw	1
  3577  00F7  1903               	skipnz
  3578  00F8  28FA               	goto	u4581
  3579  00F9  07C8               	addwf	(___flmul@prod+1)^(0+128),f
  3580  00FA                     u4581:
  3581  00FA  083D               	movf	(??___flmul+2)^(0+128),w
  3582  00FB  1103               	clrz
  3583  00FC  1803               	skipnc
  3584  00FD  3E01               	addlw	1
  3585  00FE  1903               	skipnz
  3586  00FF  2901               	goto	u4582
  3587  0100  07C9               	addwf	(___flmul@prod+2)^(0+128),f
  3588  0101                     u4582:
  3589  0101  083E               	movf	(??___flmul+3)^(0+128),w
  3590  0102  1103               	clrz
  3591  0103  1803               	skipnc
  3592  0104  3E01               	addlw	1
  3593  0105  1903               	skipnz
  3594  0106  2908               	goto	u4583
  3595  0107  07CA               	addwf	(___flmul@prod+3)^(0+128),f
  3596  0108                     u4583:
  3597  0108  0835               	movf	(___flmul@b^(0+128)+2),w
  3598  0109  00BB               	movwf	??___flmul^(0+128)
  3599  010A  083B               	movf	??___flmul^(0+128),w
  3600  010B  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3601  010C  0837               	movf	___flmul@a^(0+128),w
  3602  010D  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3603  0112  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0113  1303               	bcf	3,6	;RP1=0, select bank1
  3605  0114  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3606  0115  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3607  0116  0820               	movf	?__Umul8_16^(0+128),w
  3608  0117  00CB               	movwf	___flmul@temp^(0+128)
  3609  0118                     l3158:
  3610  0118  084B               	movf	___flmul@temp^(0+128),w
  3611  0119  00BB               	movwf	??___flmul^(0+128)
  3612  011A  01BC               	clrf	(??___flmul^(0+128)+1)
  3613  011B  01BD               	clrf	(??___flmul^(0+128)+2)
  3614  011C  01BE               	clrf	(??___flmul^(0+128)+3)
  3615  011D  083B               	movf	??___flmul^(0+128),w
  3616  011E  07C1               	addwf	___flmul@grs^(0+128),f
  3617  011F  083C               	movf	(??___flmul+1)^(0+128),w
  3618  0120  1103               	clrz
  3619  0121  1803               	skipnc
  3620  0122  3E01               	addlw	1
  3621  0123  1903               	skipnz
  3622  0124  2926               	goto	u4591
  3623  0125  07C2               	addwf	(___flmul@grs+1)^(0+128),f
  3624  0126                     u4591:
  3625  0126  083D               	movf	(??___flmul+2)^(0+128),w
  3626  0127  1103               	clrz
  3627  0128  1803               	skipnc
  3628  0129  3E01               	addlw	1
  3629  012A  1903               	skipnz
  3630  012B  292D               	goto	u4592
  3631  012C  07C3               	addwf	(___flmul@grs+2)^(0+128),f
  3632  012D                     u4592:
  3633  012D  083E               	movf	(??___flmul+3)^(0+128),w
  3634  012E  1103               	clrz
  3635  012F  1803               	skipnc
  3636  0130  3E01               	addlw	1
  3637  0131  1903               	skipnz
  3638  0132  2934               	goto	u4593
  3639  0133  07C4               	addwf	(___flmul@grs+3)^(0+128),f
  3640  0134                     u4593:
  3641  0134                     l3160:
  3642  0134  084C               	movf	(___flmul@temp^(0+128)+1),w
  3643  0135  00BB               	movwf	??___flmul^(0+128)
  3644  0136  01BC               	clrf	(??___flmul^(0+128)+1)
  3645  0137  01BD               	clrf	(??___flmul^(0+128)+2)
  3646  0138  01BE               	clrf	(??___flmul^(0+128)+3)
  3647  0139  083B               	movf	??___flmul^(0+128),w
  3648  013A  07C7               	addwf	___flmul@prod^(0+128),f
  3649  013B  083C               	movf	(??___flmul+1)^(0+128),w
  3650  013C  1103               	clrz
  3651  013D  1803               	skipnc
  3652  013E  3E01               	addlw	1
  3653  013F  1903               	skipnz
  3654  0140  2942               	goto	u4601
  3655  0141  07C8               	addwf	(___flmul@prod+1)^(0+128),f
  3656  0142                     u4601:
  3657  0142  083D               	movf	(??___flmul+2)^(0+128),w
  3658  0143  1103               	clrz
  3659  0144  1803               	skipnc
  3660  0145  3E01               	addlw	1
  3661  0146  1903               	skipnz
  3662  0147  2949               	goto	u4602
  3663  0148  07C9               	addwf	(___flmul@prod+2)^(0+128),f
  3664  0149                     u4602:
  3665  0149  083E               	movf	(??___flmul+3)^(0+128),w
  3666  014A  1103               	clrz
  3667  014B  1803               	skipnc
  3668  014C  3E01               	addlw	1
  3669  014D  1903               	skipnz
  3670  014E  2950               	goto	u4603
  3671  014F  07CA               	addwf	(___flmul@prod+3)^(0+128),f
  3672  0150                     u4603:
  3673  0150                     l3162:
  3674  0150  3008               	movlw	8
  3675  0151  00BB               	movwf	??___flmul^(0+128)
  3676  0152                     u4615:
  3677  0152  1003               	clrc
  3678  0153  0DC1               	rlf	___flmul@grs^(0+128),f
  3679  0154  0DC2               	rlf	(___flmul@grs+1)^(0+128),f
  3680  0155  0DC3               	rlf	(___flmul@grs+2)^(0+128),f
  3681  0156  0DC4               	rlf	(___flmul@grs+3)^(0+128),f
  3682  0157  0BBB               	decfsz	??___flmul^(0+128),f
  3683  0158  2952               	goto	u4615
  3684  0159                     l3164:
  3685  0159  0834               	movf	(___flmul@b^(0+128)+1),w
  3686  015A  00BB               	movwf	??___flmul^(0+128)
  3687  015B  083B               	movf	??___flmul^(0+128),w
  3688  015C  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3689  015D  0837               	movf	___flmul@a^(0+128),w
  3690  015E  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3691  0163  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0164  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0165  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3694  0166  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3695  0167  0820               	movf	?__Umul8_16^(0+128),w
  3696  0168  00CB               	movwf	___flmul@temp^(0+128)
  3697  0169                     l3166:
  3698  0169  084B               	movf	___flmul@temp^(0+128),w
  3699  016A  00BB               	movwf	??___flmul^(0+128)
  3700  016B  084C               	movf	(___flmul@temp+1)^(0+128),w
  3701  016C  00BC               	movwf	(??___flmul^(0+128)+1)
  3702  016D  01BD               	clrf	(??___flmul^(0+128)+2)
  3703  016E  01BE               	clrf	(??___flmul^(0+128)+3)
  3704  016F  083B               	movf	??___flmul^(0+128),w
  3705  0170  07C1               	addwf	___flmul@grs^(0+128),f
  3706  0171  083C               	movf	(??___flmul+1)^(0+128),w
  3707  0172  1103               	clrz
  3708  0173  1803               	skipnc
  3709  0174  3E01               	addlw	1
  3710  0175  1903               	skipnz
  3711  0176  2978               	goto	u4621
  3712  0177  07C2               	addwf	(___flmul@grs+1)^(0+128),f
  3713  0178                     u4621:
  3714  0178  083D               	movf	(??___flmul+2)^(0+128),w
  3715  0179  1103               	clrz
  3716  017A  1803               	skipnc
  3717  017B  3E01               	addlw	1
  3718  017C  1903               	skipnz
  3719  017D  297F               	goto	u4622
  3720  017E  07C3               	addwf	(___flmul@grs+2)^(0+128),f
  3721  017F                     u4622:
  3722  017F  083E               	movf	(??___flmul+3)^(0+128),w
  3723  0180  1103               	clrz
  3724  0181  1803               	skipnc
  3725  0182  3E01               	addlw	1
  3726  0183  1903               	skipnz
  3727  0184  2986               	goto	u4623
  3728  0185  07C4               	addwf	(___flmul@grs+3)^(0+128),f
  3729  0186                     u4623:
  3730  0186                     l3168:
  3731  0186  0833               	movf	___flmul@b^(0+128),w
  3732  0187  00BB               	movwf	??___flmul^(0+128)
  3733  0188  083B               	movf	??___flmul^(0+128),w
  3734  0189  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3735  018A  0838               	movf	(___flmul@a^(0+128)+1),w
  3736  018B  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3737  0190  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0191  1303               	bcf	3,6	;RP1=0, select bank1
  3739  0192  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3740  0193  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3741  0194  0820               	movf	?__Umul8_16^(0+128),w
  3742  0195  00CB               	movwf	___flmul@temp^(0+128)
  3743  0196                     l3170:
  3744  0196  084B               	movf	___flmul@temp^(0+128),w
  3745  0197  00BB               	movwf	??___flmul^(0+128)
  3746  0198  084C               	movf	(___flmul@temp+1)^(0+128),w
  3747  0199  00BC               	movwf	(??___flmul^(0+128)+1)
  3748  019A  01BD               	clrf	(??___flmul^(0+128)+2)
  3749  019B  01BE               	clrf	(??___flmul^(0+128)+3)
  3750  019C  083B               	movf	??___flmul^(0+128),w
  3751  019D  07C1               	addwf	___flmul@grs^(0+128),f
  3752  019E  083C               	movf	(??___flmul+1)^(0+128),w
  3753  019F  1103               	clrz
  3754  01A0  1803               	skipnc
  3755  01A1  3E01               	addlw	1
  3756  01A2  1903               	skipnz
  3757  01A3  29A5               	goto	u4631
  3758  01A4  07C2               	addwf	(___flmul@grs+1)^(0+128),f
  3759  01A5                     u4631:
  3760  01A5  083D               	movf	(??___flmul+2)^(0+128),w
  3761  01A6  1103               	clrz
  3762  01A7  1803               	skipnc
  3763  01A8  3E01               	addlw	1
  3764  01A9  1903               	skipnz
  3765  01AA  29AC               	goto	u4632
  3766  01AB  07C3               	addwf	(___flmul@grs+2)^(0+128),f
  3767  01AC                     u4632:
  3768  01AC  083E               	movf	(??___flmul+3)^(0+128),w
  3769  01AD  1103               	clrz
  3770  01AE  1803               	skipnc
  3771  01AF  3E01               	addlw	1
  3772  01B0  1903               	skipnz
  3773  01B1  29B3               	goto	u4633
  3774  01B2  07C4               	addwf	(___flmul@grs+3)^(0+128),f
  3775  01B3                     u4633:
  3776  01B3                     l3172:
  3777  01B3  3008               	movlw	8
  3778  01B4  00BB               	movwf	??___flmul^(0+128)
  3779  01B5                     u4645:
  3780  01B5  1003               	clrc
  3781  01B6  0DC1               	rlf	___flmul@grs^(0+128),f
  3782  01B7  0DC2               	rlf	(___flmul@grs+1)^(0+128),f
  3783  01B8  0DC3               	rlf	(___flmul@grs+2)^(0+128),f
  3784  01B9  0DC4               	rlf	(___flmul@grs+3)^(0+128),f
  3785  01BA  0BBB               	decfsz	??___flmul^(0+128),f
  3786  01BB  29B5               	goto	u4645
  3787  01BC  0833               	movf	___flmul@b^(0+128),w
  3788  01BD  00BB               	movwf	??___flmul^(0+128)
  3789  01BE  083B               	movf	??___flmul^(0+128),w
  3790  01BF  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3791  01C0  0837               	movf	___flmul@a^(0+128),w
  3792  01C1  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3793  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  3794  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  3795  01C8  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3796  01C9  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3797  01CA  0820               	movf	?__Umul8_16^(0+128),w
  3798  01CB  00CB               	movwf	___flmul@temp^(0+128)
  3799  01CC                     l3174:
  3800  01CC  084B               	movf	___flmul@temp^(0+128),w
  3801  01CD  00BB               	movwf	??___flmul^(0+128)
  3802  01CE  084C               	movf	(___flmul@temp+1)^(0+128),w
  3803  01CF  00BC               	movwf	(??___flmul^(0+128)+1)
  3804  01D0  01BD               	clrf	(??___flmul^(0+128)+2)
  3805  01D1  01BE               	clrf	(??___flmul^(0+128)+3)
  3806  01D2  083B               	movf	??___flmul^(0+128),w
  3807  01D3  07C1               	addwf	___flmul@grs^(0+128),f
  3808  01D4  083C               	movf	(??___flmul+1)^(0+128),w
  3809  01D5  1103               	clrz
  3810  01D6  1803               	skipnc
  3811  01D7  3E01               	addlw	1
  3812  01D8  1903               	skipnz
  3813  01D9  29DB               	goto	u4651
  3814  01DA  07C2               	addwf	(___flmul@grs+1)^(0+128),f
  3815  01DB                     u4651:
  3816  01DB  083D               	movf	(??___flmul+2)^(0+128),w
  3817  01DC  1103               	clrz
  3818  01DD  1803               	skipnc
  3819  01DE  3E01               	addlw	1
  3820  01DF  1903               	skipnz
  3821  01E0  29E2               	goto	u4652
  3822  01E1  07C3               	addwf	(___flmul@grs+2)^(0+128),f
  3823  01E2                     u4652:
  3824  01E2  083E               	movf	(??___flmul+3)^(0+128),w
  3825  01E3  1103               	clrz
  3826  01E4  1803               	skipnc
  3827  01E5  3E01               	addlw	1
  3828  01E6  1903               	skipnz
  3829  01E7  29E9               	goto	u4653
  3830  01E8  07C4               	addwf	(___flmul@grs+3)^(0+128),f
  3831  01E9                     u4653:
  3832  01E9                     l3176:
  3833  01E9  0834               	movf	(___flmul@b^(0+128)+1),w
  3834  01EA  00BB               	movwf	??___flmul^(0+128)
  3835  01EB  083B               	movf	??___flmul^(0+128),w
  3836  01EC  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3837  01ED  0839               	movf	(___flmul@a^(0+128)+2),w
  3838  01EE  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3839  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  3840  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  3841  01F5  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3842  01F6  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3843  01F7  0820               	movf	?__Umul8_16^(0+128),w
  3844  01F8  00CB               	movwf	___flmul@temp^(0+128)
  3845  01F9  084B               	movf	___flmul@temp^(0+128),w
  3846  01FA  00BB               	movwf	??___flmul^(0+128)
  3847  01FB  084C               	movf	(___flmul@temp+1)^(0+128),w
  3848  01FC  00BC               	movwf	(??___flmul^(0+128)+1)
  3849  01FD  01BD               	clrf	(??___flmul^(0+128)+2)
  3850  01FE  01BE               	clrf	(??___flmul^(0+128)+3)
  3851  01FF  083B               	movf	??___flmul^(0+128),w
  3852  0200  07C7               	addwf	___flmul@prod^(0+128),f
  3853  0201  083C               	movf	(??___flmul+1)^(0+128),w
  3854  0202  1103               	clrz
  3855  0203  1803               	skipnc
  3856  0204  3E01               	addlw	1
  3857  0205  1903               	skipnz
  3858  0206  2A08               	goto	u4661
  3859  0207  07C8               	addwf	(___flmul@prod+1)^(0+128),f
  3860  0208                     u4661:
  3861  0208  083D               	movf	(??___flmul+2)^(0+128),w
  3862  0209  1103               	clrz
  3863  020A  1803               	skipnc
  3864  020B  3E01               	addlw	1
  3865  020C  1903               	skipnz
  3866  020D  2A0F               	goto	u4662
  3867  020E  07C9               	addwf	(___flmul@prod+2)^(0+128),f
  3868  020F                     u4662:
  3869  020F  083E               	movf	(??___flmul+3)^(0+128),w
  3870  0210  1103               	clrz
  3871  0211  1803               	skipnc
  3872  0212  3E01               	addlw	1
  3873  0213  1903               	skipnz
  3874  0214  2A16               	goto	u4663
  3875  0215  07CA               	addwf	(___flmul@prod+3)^(0+128),f
  3876  0216                     u4663:
  3877  0216                     l3178:
  3878  0216  0835               	movf	(___flmul@b^(0+128)+2),w
  3879  0217  00BB               	movwf	??___flmul^(0+128)
  3880  0218  083B               	movf	??___flmul^(0+128),w
  3881  0219  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3882  021A  0838               	movf	(___flmul@a^(0+128)+1),w
  3883  021B  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3884  0220  1683               	bsf	3,5	;RP0=1, select bank1
  3885  0221  1303               	bcf	3,6	;RP1=0, select bank1
  3886  0222  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3887  0223  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3888  0224  0820               	movf	?__Umul8_16^(0+128),w
  3889  0225  00CB               	movwf	___flmul@temp^(0+128)
  3890  0226                     l3180:
  3891  0226  084B               	movf	___flmul@temp^(0+128),w
  3892  0227  00BB               	movwf	??___flmul^(0+128)
  3893  0228  084C               	movf	(___flmul@temp+1)^(0+128),w
  3894  0229  00BC               	movwf	(??___flmul^(0+128)+1)
  3895  022A  01BD               	clrf	(??___flmul^(0+128)+2)
  3896  022B  01BE               	clrf	(??___flmul^(0+128)+3)
  3897  022C  083B               	movf	??___flmul^(0+128),w
  3898  022D  07C7               	addwf	___flmul@prod^(0+128),f
  3899  022E  083C               	movf	(??___flmul+1)^(0+128),w
  3900  022F  1103               	clrz
  3901  0230  1803               	skipnc
  3902  0231  3E01               	addlw	1
  3903  0232  1903               	skipnz
  3904  0233  2A35               	goto	u4671
  3905  0234  07C8               	addwf	(___flmul@prod+1)^(0+128),f
  3906  0235                     u4671:
  3907  0235  083D               	movf	(??___flmul+2)^(0+128),w
  3908  0236  1103               	clrz
  3909  0237  1803               	skipnc
  3910  0238  3E01               	addlw	1
  3911  0239  1903               	skipnz
  3912  023A  2A3C               	goto	u4672
  3913  023B  07C9               	addwf	(___flmul@prod+2)^(0+128),f
  3914  023C                     u4672:
  3915  023C  083E               	movf	(??___flmul+3)^(0+128),w
  3916  023D  1103               	clrz
  3917  023E  1803               	skipnc
  3918  023F  3E01               	addlw	1
  3919  0240  1903               	skipnz
  3920  0241  2A43               	goto	u4673
  3921  0242  07CA               	addwf	(___flmul@prod+3)^(0+128),f
  3922  0243                     u4673:
  3923  0243  0835               	movf	(___flmul@b^(0+128)+2),w
  3924  0244  00BB               	movwf	??___flmul^(0+128)
  3925  0245  083B               	movf	??___flmul^(0+128),w
  3926  0246  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  3927  0247  0839               	movf	(___flmul@a^(0+128)+2),w
  3928  0248  160A  118A  20B5  120A  118A  	fcall	__Umul8_16
  3929  024D  1683               	bsf	3,5	;RP0=1, select bank1
  3930  024E  1303               	bcf	3,6	;RP1=0, select bank1
  3931  024F  0821               	movf	(?__Umul8_16+1)^(0+128),w
  3932  0250  00CC               	movwf	(___flmul@temp+1)^(0+128)
  3933  0251  0820               	movf	?__Umul8_16^(0+128),w
  3934  0252  00CB               	movwf	___flmul@temp^(0+128)
  3935  0253                     l3182:
  3936  0253  084B               	movf	___flmul@temp^(0+128),w
  3937  0254  00BB               	movwf	??___flmul^(0+128)
  3938  0255  084C               	movf	(___flmul@temp+1)^(0+128),w
  3939  0256  00BC               	movwf	(??___flmul^(0+128)+1)
  3940  0257  01BD               	clrf	(??___flmul^(0+128)+2)
  3941  0258  01BE               	clrf	(??___flmul^(0+128)+3)
  3942  0259  3008               	movlw	8
  3943  025A                     u4685:
  3944  025A  1003               	clrc
  3945  025B  0DBB               	rlf	??___flmul^(0+128),f
  3946  025C  0DBC               	rlf	(??___flmul^(0+128)+1),f
  3947  025D  0DBD               	rlf	(??___flmul^(0+128)+2),f
  3948  025E  0DBE               	rlf	(??___flmul^(0+128)+3),f
  3949  025F                     u4680:
  3950  025F  3EFF               	addlw	-1
  3951  0260  1D03               	skipz
  3952  0261  2A5A               	goto	u4685
  3953  0262  083B               	movf	??___flmul^(0+128),w
  3954  0263  07C7               	addwf	___flmul@prod^(0+128),f
  3955  0264  083C               	movf	(??___flmul+1)^(0+128),w
  3956  0265  1103               	clrz
  3957  0266  1803               	skipnc
  3958  0267  3E01               	addlw	1
  3959  0268  1903               	skipnz
  3960  0269  2A6B               	goto	u4691
  3961  026A  07C8               	addwf	(___flmul@prod+1)^(0+128),f
  3962  026B                     u4691:
  3963  026B  083D               	movf	(??___flmul+2)^(0+128),w
  3964  026C  1103               	clrz
  3965  026D  1803               	skipnc
  3966  026E  3E01               	addlw	1
  3967  026F  1903               	skipnz
  3968  0270  2A72               	goto	u4692
  3969  0271  07C9               	addwf	(___flmul@prod+2)^(0+128),f
  3970  0272                     u4692:
  3971  0272  083E               	movf	(??___flmul+3)^(0+128),w
  3972  0273  1103               	clrz
  3973  0274  1803               	skipnc
  3974  0275  3E01               	addlw	1
  3975  0276  1903               	skipnz
  3976  0277  2A79               	goto	u4693
  3977  0278  07CA               	addwf	(___flmul@prod+3)^(0+128),f
  3978  0279                     u4693:
  3979  0279                     l3184:
  3980  0279  0841               	movf	___flmul@grs^(0+128),w
  3981  027A  00BB               	movwf	??___flmul^(0+128)
  3982  027B  0842               	movf	(___flmul@grs+1)^(0+128),w
  3983  027C  00BC               	movwf	(??___flmul^(0+128)+1)
  3984  027D  0843               	movf	(___flmul@grs+2)^(0+128),w
  3985  027E  00BD               	movwf	(??___flmul^(0+128)+2)
  3986  027F  0844               	movf	(___flmul@grs+3)^(0+128),w
  3987  0280  00BE               	movwf	(??___flmul^(0+128)+3)
  3988  0281  3018               	movlw	24
  3989  0282                     u4705:
  3990  0282  1003               	clrc
  3991  0283  0CBE               	rrf	(??___flmul^(0+128)+3),f
  3992  0284  0CBD               	rrf	(??___flmul^(0+128)+2),f
  3993  0285  0CBC               	rrf	(??___flmul^(0+128)+1),f
  3994  0286  0CBB               	rrf	??___flmul^(0+128),f
  3995  0287                     u4700:
  3996  0287  3EFF               	addlw	-1
  3997  0288  1D03               	skipz
  3998  0289  2A82               	goto	u4705
  3999  028A  083B               	movf	??___flmul^(0+128),w
  4000  028B  07C7               	addwf	___flmul@prod^(0+128),f
  4001  028C  083C               	movf	(??___flmul+1)^(0+128),w
  4002  028D  1103               	clrz
  4003  028E  1803               	skipnc
  4004  028F  3E01               	addlw	1
  4005  0290  1903               	skipnz
  4006  0291  2A93               	goto	u4711
  4007  0292  07C8               	addwf	(___flmul@prod+1)^(0+128),f
  4008  0293                     u4711:
  4009  0293  083D               	movf	(??___flmul+2)^(0+128),w
  4010  0294  1103               	clrz
  4011  0295  1803               	skipnc
  4012  0296  3E01               	addlw	1
  4013  0297  1903               	skipnz
  4014  0298  2A9A               	goto	u4712
  4015  0299  07C9               	addwf	(___flmul@prod+2)^(0+128),f
  4016  029A                     u4712:
  4017  029A  083E               	movf	(??___flmul+3)^(0+128),w
  4018  029B  1103               	clrz
  4019  029C  1803               	skipnc
  4020  029D  3E01               	addlw	1
  4021  029E  1903               	skipnz
  4022  029F  2AA1               	goto	u4713
  4023  02A0  07CA               	addwf	(___flmul@prod+3)^(0+128),f
  4024  02A1                     u4713:
  4025  02A1                     l3186:
  4026  02A1  3008               	movlw	8
  4027  02A2  00BB               	movwf	??___flmul^(0+128)
  4028  02A3                     u4725:
  4029  02A3  1003               	clrc
  4030  02A4  0DC1               	rlf	___flmul@grs^(0+128),f
  4031  02A5  0DC2               	rlf	(___flmul@grs+1)^(0+128),f
  4032  02A6  0DC3               	rlf	(___flmul@grs+2)^(0+128),f
  4033  02A7  0DC4               	rlf	(___flmul@grs+3)^(0+128),f
  4034  02A8  0BBB               	decfsz	??___flmul^(0+128),f
  4035  02A9  2AA3               	goto	u4725
  4036  02AA                     l3188:
  4037  02AA  0846               	movf	___flmul@bexp^(0+128),w
  4038  02AB  0745               	addwf	___flmul@aexp^(0+128),w
  4039  02AC  00BB               	movwf	??___flmul^(0+128)
  4040  02AD  01BC               	clrf	(??___flmul^(0+128)+1)
  4041  02AE  0DBC               	rlf	(??___flmul+1)^(0+128),f
  4042  02AF  083B               	movf	??___flmul^(0+128),w
  4043  02B0  3E82               	addlw	130
  4044  02B1  00CB               	movwf	___flmul@temp^(0+128)
  4045  02B2  083C               	movf	(??___flmul+1)^(0+128),w
  4046  02B3  1803               	skipnc
  4047  02B4  3E01               	addlw	1
  4048  02B5  3EFF               	addlw	255
  4049  02B6  00CC               	movwf	(___flmul@temp+1)^(0+128)
  4050  02B7  2AD5               	goto	l3200
  4051  02B8                     l3190:
  4052  02B8  3001               	movlw	1
  4053  02B9  00BB               	movwf	??___flmul^(0+128)
  4054  02BA                     u4735:
  4055  02BA  1003               	clrc
  4056  02BB  0DC7               	rlf	___flmul@prod^(0+128),f
  4057  02BC  0DC8               	rlf	(___flmul@prod+1)^(0+128),f
  4058  02BD  0DC9               	rlf	(___flmul@prod+2)^(0+128),f
  4059  02BE  0DCA               	rlf	(___flmul@prod+3)^(0+128),f
  4060  02BF  0BBB               	decfsz	??___flmul^(0+128),f
  4061  02C0  2ABA               	goto	u4735
  4062  02C1                     l3192:
  4063  02C1  1FC4               	btfss	(___flmul@grs+3)^(0+128),7
  4064  02C2  2AC4               	goto	u4741
  4065  02C3  2AC5               	goto	u4740
  4066  02C4                     u4741:
  4067  02C4  2AC6               	goto	l3196
  4068  02C5                     u4740:
  4069  02C5                     l3194:
  4070  02C5  1447               	bsf	___flmul@prod^(0+128),0
  4071  02C6                     l3196:
  4072  02C6  3001               	movlw	1
  4073  02C7  00BB               	movwf	??___flmul^(0+128)
  4074  02C8                     u4755:
  4075  02C8  1003               	clrc
  4076  02C9  0DC1               	rlf	___flmul@grs^(0+128),f
  4077  02CA  0DC2               	rlf	(___flmul@grs+1)^(0+128),f
  4078  02CB  0DC3               	rlf	(___flmul@grs+2)^(0+128),f
  4079  02CC  0DC4               	rlf	(___flmul@grs+3)^(0+128),f
  4080  02CD  0BBB               	decfsz	??___flmul^(0+128),f
  4081  02CE  2AC8               	goto	u4755
  4082  02CF                     l3198:
  4083  02CF  30FF               	movlw	255
  4084  02D0  07CB               	addwf	___flmul@temp^(0+128),f
  4085  02D1  1803               	skipnc
  4086  02D2  0ACC               	incf	(___flmul@temp+1)^(0+128),f
  4087  02D3  30FF               	movlw	255
  4088  02D4  07CC               	addwf	(___flmul@temp+1)^(0+128),f
  4089  02D5                     l3200:
  4090  02D5  1FC9               	btfss	(___flmul@prod+2)^(0+128),7
  4091  02D6  2AD8               	goto	u4761
  4092  02D7  2AD9               	goto	u4760
  4093  02D8                     u4761:
  4094  02D8  2AB8               	goto	l3190
  4095  02D9                     u4760:
  4096  02D9                     l3202:
  4097  02D9  01C5               	clrf	___flmul@aexp^(0+128)
  4098  02DA                     l3204:
  4099  02DA  1FC4               	btfss	(___flmul@grs+3)^(0+128),7
  4100  02DB  2ADD               	goto	u4771
  4101  02DC  2ADE               	goto	u4770
  4102  02DD                     u4771:
  4103  02DD  2AFA               	goto	l3212
  4104  02DE                     u4770:
  4105  02DE                     l3206:
  4106  02DE  30FF               	movlw	255
  4107  02DF  0541               	andwf	___flmul@grs^(0+128),w
  4108  02E0  00BB               	movwf	??___flmul^(0+128)
  4109  02E1  30FF               	movlw	255
  4110  02E2  0542               	andwf	(___flmul@grs+1)^(0+128),w
  4111  02E3  00BC               	movwf	(??___flmul^(0+128)+1)
  4112  02E4  30FF               	movlw	255
  4113  02E5  0543               	andwf	(___flmul@grs+2)^(0+128),w
  4114  02E6  00BD               	movwf	(??___flmul^(0+128)+2)
  4115  02E7  307F               	movlw	127
  4116  02E8  0544               	andwf	(___flmul@grs+3)^(0+128),w
  4117  02E9  00BE               	movwf	(??___flmul^(0+128)+3)
  4118  02EA  083E               	movf	(??___flmul+3)^(0+128),w
  4119  02EB  043D               	iorwf	(??___flmul+2)^(0+128),w
  4120  02EC  043C               	iorwf	(??___flmul+1)^(0+128),w
  4121  02ED  043B               	iorwf	??___flmul^(0+128),w
  4122  02EE  1903               	skipnz
  4123  02EF  2AF1               	goto	u4781
  4124  02F0  2AF2               	goto	u4780
  4125  02F1                     u4781:
  4126  02F1  2AF5               	goto	l763
  4127  02F2                     u4780:
  4128  02F2                     l3208:
  4129  02F2  01C5               	clrf	___flmul@aexp^(0+128)
  4130  02F3  0AC5               	incf	___flmul@aexp^(0+128),f
  4131  02F4  2AFA               	goto	l3212
  4132  02F5                     l763:
  4133  02F5  1C47               	btfss	___flmul@prod^(0+128),0
  4134  02F6  2AF8               	goto	u4791
  4135  02F7  2AF9               	goto	u4790
  4136  02F8                     u4791:
  4137  02F8  2AFA               	goto	l3212
  4138  02F9                     u4790:
  4139  02F9  2AF2               	goto	l3208
  4140  02FA                     l3212:
  4141  02FA  0845               	movf	___flmul@aexp^(0+128),w
  4142  02FB  1903               	btfsc	3,2
  4143  02FC  2AFE               	goto	u4801
  4144  02FD  2AFF               	goto	u4800
  4145  02FE                     u4801:
  4146  02FE  2B30               	goto	l3222
  4147  02FF                     u4800:
  4148  02FF                     l3214:
  4149  02FF  3001               	movlw	1
  4150  0300  07C7               	addwf	___flmul@prod^(0+128),f
  4151  0301  3000               	movlw	0
  4152  0302  1803               	skipnc
  4153  0303  3001               	movlw	1
  4154  0304  07C8               	addwf	(___flmul@prod+1)^(0+128),f
  4155  0305  3000               	movlw	0
  4156  0306  1803               	skipnc
  4157  0307  3001               	movlw	1
  4158  0308  07C9               	addwf	(___flmul@prod+2)^(0+128),f
  4159  0309  3000               	movlw	0
  4160  030A  1803               	skipnc
  4161  030B  3001               	movlw	1
  4162  030C  07CA               	addwf	(___flmul@prod+3)^(0+128),f
  4163  030D                     l3216:
  4164  030D  1C4A               	btfss	(___flmul@prod+3)^(0+128),0
  4165  030E  2B10               	goto	u4811
  4166  030F  2B11               	goto	u4810
  4167  0310                     u4811:
  4168  0310  2B30               	goto	l3222
  4169  0311                     u4810:
  4170  0311                     l3218:
  4171  0311  0847               	movf	___flmul@prod^(0+128),w
  4172  0312  00BB               	movwf	??___flmul^(0+128)
  4173  0313  0848               	movf	(___flmul@prod+1)^(0+128),w
  4174  0314  00BC               	movwf	(??___flmul^(0+128)+1)
  4175  0315  0849               	movf	(___flmul@prod+2)^(0+128),w
  4176  0316  00BD               	movwf	(??___flmul^(0+128)+2)
  4177  0317  084A               	movf	(___flmul@prod+3)^(0+128),w
  4178  0318  00BE               	movwf	(??___flmul^(0+128)+3)
  4179  0319  3001               	movlw	1
  4180  031A  00BF               	movwf	(??___flmul+4)^(0+128)
  4181  031B                     u4825:
  4182  031B  0D3E               	rlf	(??___flmul^(0+128)+3),w
  4183  031C  0CBE               	rrf	(??___flmul^(0+128)+3),f
  4184  031D  0CBD               	rrf	(??___flmul^(0+128)+2),f
  4185  031E  0CBC               	rrf	(??___flmul^(0+128)+1),f
  4186  031F  0CBB               	rrf	??___flmul^(0+128),f
  4187  0320                     u4820:
  4188  0320  0BBF               	decfsz	(??___flmul+4)^(0+128),f
  4189  0321  2B1B               	goto	u4825
  4190  0322  083E               	movf	(??___flmul+3)^(0+128),w
  4191  0323  00CA               	movwf	(___flmul@prod+3)^(0+128)
  4192  0324  083D               	movf	(??___flmul+2)^(0+128),w
  4193  0325  00C9               	movwf	(___flmul@prod+2)^(0+128)
  4194  0326  083C               	movf	(??___flmul+1)^(0+128),w
  4195  0327  00C8               	movwf	(___flmul@prod+1)^(0+128)
  4196  0328  083B               	movf	??___flmul^(0+128),w
  4197  0329  00C7               	movwf	___flmul@prod^(0+128)
  4198  032A                     l3220:
  4199  032A  3001               	movlw	1
  4200  032B  07CB               	addwf	___flmul@temp^(0+128),f
  4201  032C  1803               	skipnc
  4202  032D  0ACC               	incf	(___flmul@temp+1)^(0+128),f
  4203  032E  3000               	movlw	0
  4204  032F  07CC               	addwf	(___flmul@temp+1)^(0+128),f
  4205  0330                     l3222:
  4206  0330  084C               	movf	(___flmul@temp+1)^(0+128),w
  4207  0331  3A80               	xorlw	128
  4208  0332  00FF               	movwf	btemp+1
  4209  0333  3080               	movlw	128
  4210  0334  027F               	subwf	btemp+1,w
  4211  0335  1D03               	skipz
  4212  0336  2B39               	goto	u4835
  4213  0337  30FF               	movlw	255
  4214  0338  024B               	subwf	___flmul@temp^(0+128),w
  4215  0339                     u4835:
  4216  0339  1C03               	skipc
  4217  033A  2B3C               	goto	u4831
  4218  033B  2B3D               	goto	u4830
  4219  033C                     u4831:
  4220  033C  2B48               	goto	l3226
  4221  033D                     u4830:
  4222  033D                     l3224:
  4223  033D  307F               	movlw	127
  4224  033E  1683               	bsf	3,5	;RP0=1, select bank1
  4225  033F  1303               	bcf	3,6	;RP1=0, select bank1
  4226  0340  00CA               	movwf	(___flmul@prod+3)^(0+128)
  4227  0341  3080               	movlw	128
  4228  0342  00C9               	movwf	(___flmul@prod+2)^(0+128)
  4229  0343  3000               	movlw	0
  4230  0344  00C8               	movwf	(___flmul@prod+1)^(0+128)
  4231  0345  3000               	movlw	0
  4232  0346  00C7               	movwf	___flmul@prod^(0+128)
  4233  0347  2B7D               	goto	l769
  4234  0348                     l3226:
  4235  0348  1683               	bsf	3,5	;RP0=1, select bank1
  4236  0349  1303               	bcf	3,6	;RP1=0, select bank1
  4237  034A  084C               	movf	(___flmul@temp+1)^(0+128),w
  4238  034B  3A80               	xorlw	128
  4239  034C  00FF               	movwf	btemp+1
  4240  034D  3080               	movlw	128
  4241  034E  027F               	subwf	btemp+1,w
  4242  034F  1D03               	skipz
  4243  0350  2B53               	goto	u4845
  4244  0351  3001               	movlw	1
  4245  0352  024B               	subwf	___flmul@temp^(0+128),w
  4246  0353                     u4845:
  4247  0353  1803               	skipnc
  4248  0354  2B56               	goto	u4841
  4249  0355  2B57               	goto	u4840
  4250  0356                     u4841:
  4251  0356  2B63               	goto	l3232
  4252  0357                     u4840:
  4253  0357                     l3228:
  4254  0357  3000               	movlw	0
  4255  0358  1683               	bsf	3,5	;RP0=1, select bank1
  4256  0359  1303               	bcf	3,6	;RP1=0, select bank1
  4257  035A  00CA               	movwf	(___flmul@prod+3)^(0+128)
  4258  035B  3000               	movlw	0
  4259  035C  00C9               	movwf	(___flmul@prod+2)^(0+128)
  4260  035D  3000               	movlw	0
  4261  035E  00C8               	movwf	(___flmul@prod+1)^(0+128)
  4262  035F  3000               	movlw	0
  4263  0360  00C7               	movwf	___flmul@prod^(0+128)
  4264  0361                     l3230:
  4265  0361  01C0               	clrf	___flmul@sign^(0+128)
  4266  0362  2B7D               	goto	l769
  4267  0363                     l3232:
  4268  0363  1683               	bsf	3,5	;RP0=1, select bank1
  4269  0364  1303               	bcf	3,6	;RP1=0, select bank1
  4270  0365  084B               	movf	___flmul@temp^(0+128),w
  4271  0366  00BB               	movwf	??___flmul^(0+128)
  4272  0367  083B               	movf	??___flmul^(0+128),w
  4273  0368  00C6               	movwf	___flmul@bexp^(0+128)
  4274  0369  30FF               	movlw	255
  4275  036A  05C7               	andwf	___flmul@prod^(0+128),f
  4276  036B  30FF               	movlw	255
  4277  036C  05C8               	andwf	(___flmul@prod+1)^(0+128),f
  4278  036D  307F               	movlw	127
  4279  036E  05C9               	andwf	(___flmul@prod+2)^(0+128),f
  4280  036F  3000               	movlw	0
  4281  0370  05CA               	andwf	(___flmul@prod+3)^(0+128),f
  4282  0371                     l3234:
  4283  0371  1C46               	btfss	___flmul@bexp^(0+128),0
  4284  0372  2B74               	goto	u4851
  4285  0373  2B75               	goto	u4850
  4286  0374                     u4851:
  4287  0374  2B76               	goto	l3238
  4288  0375                     u4850:
  4289  0375                     l3236:
  4290  0375  17C9               	bsf	(___flmul@prod^(0+128)+2),7
  4291  0376                     l3238:
  4292  0376  0846               	movf	___flmul@bexp^(0+128),w
  4293  0377  00BB               	movwf	??___flmul^(0+128)
  4294  0378  1003               	clrc
  4295  0379  0C3B               	rrf	??___flmul^(0+128),w
  4296  037A  00BC               	movwf	(??___flmul+1)^(0+128)
  4297  037B  083C               	movf	(??___flmul+1)^(0+128),w
  4298  037C  00CA               	movwf	(___flmul@prod^(0+128)+3)
  4299  037D                     l769:
  4300  037D  0840               	movf	___flmul@sign^(0+128),w
  4301  037E  00BB               	movwf	??___flmul^(0+128)
  4302  037F  083B               	movf	??___flmul^(0+128),w
  4303  0380  04CA               	iorwf	(___flmul@prod^(0+128)+3),f
  4304  0381                     l3240:
  4305  0381  084A               	movf	(___flmul@prod+3)^(0+128),w
  4306  0382  00B6               	movwf	(?___flmul+3)^(0+128)
  4307  0383  0849               	movf	(___flmul@prod+2)^(0+128),w
  4308  0384  00B5               	movwf	(?___flmul+2)^(0+128)
  4309  0385  0848               	movf	(___flmul@prod+1)^(0+128),w
  4310  0386  00B4               	movwf	(?___flmul+1)^(0+128)
  4311  0387  0847               	movf	___flmul@prod^(0+128),w
  4312  0388  00B3               	movwf	?___flmul^(0+128)
  4313  0389                     l757:
  4314  0389  0008               	return
  4315  038A                     __end_of___flmul:
  4316                           
  4317                           	psect	text14
  4318  10B5                     __ptext14:	
  4319 ;; *************** function __Umul8_16 *****************
  4320 ;; Defined at:
  4321 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  multiplier      1    wreg     unsigned char 
  4324 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  multiplier      1    8[BANK1 ] unsigned char 
  4327 ;;  word_mpld       2    6[BANK1 ] unsigned int 
  4328 ;;  product         2    4[BANK1 ] unsigned int 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2    0[BANK1 ] unsigned int 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       2       0       0
  4339 ;;      Locals:         0       0       5       0       0
  4340 ;;      Temps:          0       0       2       0       0
  4341 ;;      Totals:         0       0       9       0       0
  4342 ;;Total ram usage:        9 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 3
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		___flmul
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function __Umul8_16
  4354  10B5                     __Umul8_16:
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4358                           ;__Umul8_16@multiplier stored from wreg
  4359  10B5  1683               	bsf	3,5	;RP0=1, select bank1
  4360  10B6  1303               	bcf	3,6	;RP1=0, select bank1
  4361  10B7  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  4362  10B8                     l2718:
  4363  10B8  01A4               	clrf	__Umul8_16@product^(0+128)
  4364  10B9  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  4365  10BA                     l2720:
  4366  10BA  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  4367  10BB  00A2               	movwf	??__Umul8_16^(0+128)
  4368  10BC  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  4369  10BD  0822               	movf	??__Umul8_16^(0+128),w
  4370  10BE  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  4371  10BF  0823               	movf	(??__Umul8_16+1)^(0+128),w
  4372  10C0  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  4373  10C1                     l2722:
  4374  10C1  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  4375  10C2  28C4               	goto	u3721
  4376  10C3  28C5               	goto	u3720
  4377  10C4                     u3721:
  4378  10C4  28CB               	goto	l776
  4379  10C5                     u3720:
  4380  10C5                     l2724:
  4381  10C5  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  4382  10C6  07A4               	addwf	__Umul8_16@product^(0+128),f
  4383  10C7  1803               	skipnc
  4384  10C8  0AA5               	incf	(__Umul8_16@product+1)^(0+128),f
  4385  10C9  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  4386  10CA  07A5               	addwf	(__Umul8_16@product+1)^(0+128),f
  4387  10CB                     l776:
  4388  10CB  3001               	movlw	1
  4389  10CC                     u3735:
  4390  10CC  1003               	clrc
  4391  10CD  0DA6               	rlf	__Umul8_16@word_mpld^(0+128),f
  4392  10CE  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  4393  10CF  3EFF               	addlw	-1
  4394  10D0  1D03               	skipz
  4395  10D1  28CC               	goto	u3735
  4396  10D2  1003               	clrc
  4397  10D3  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  4398  10D4                     l2726:
  4399  10D4  0828               	movf	__Umul8_16@multiplier^(0+128),w
  4400  10D5  1D03               	btfss	3,2
  4401  10D6  28D8               	goto	u3741
  4402  10D7  28D9               	goto	u3740
  4403  10D8                     u3741:
  4404  10D8  28C1               	goto	l2722
  4405  10D9                     u3740:
  4406  10D9                     l2728:
  4407  10D9  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  4408  10DA  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  4409  10DB  0824               	movf	__Umul8_16@product^(0+128),w
  4410  10DC  00A0               	movwf	?__Umul8_16^(0+128)
  4411  10DD                     l778:
  4412  10DD  0008               	return
  4413  10DE                     __end_of__Umul8_16:
  4414                           
  4415                           	psect	text15
  4416  0D78                     __ptext15:	
  4417 ;; *************** function ___fladd *****************
  4418 ;; Defined at:
  4419 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  b               4   45[BANK1 ] unsigned int 
  4422 ;;  a               4   49[BANK1 ] unsigned int 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  grs             1   64[BANK1 ] unsigned char 
  4425 ;;  bexp            1   63[BANK1 ] unsigned char 
  4426 ;;  aexp            1   62[BANK1 ] unsigned char 
  4427 ;;  signs           1   61[BANK1 ] unsigned char 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  4   45[BANK1 ] unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, btemp+1
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4437 ;;      Params:         0       0       8       0       0
  4438 ;;      Locals:         0       0       4       0       0
  4439 ;;      Temps:          0       0       8       0       0
  4440 ;;      Totals:         0       0      20       0       0
  4441 ;;Total ram usage:       20 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; Hardware stack levels required when called: 3
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_set_temp
  4448 ;;		_LCD_display_float
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function ___fladd
  4454  0D78                     ___fladd:
  4455  0D78                     l2910:	
  4456                           ;incstack = 0
  4457                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4458                           
  4459  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  4460  0D79  1303               	bcf	3,6	;RP1=0, select bank1
  4461  0D7A  0850               	movf	(___fladd@b^(0+128)+3),w
  4462  0D7B  3980               	andlw	128
  4463  0D7C  00D5               	movwf	??___fladd^(0+128)
  4464  0D7D  0855               	movf	??___fladd^(0+128),w
  4465  0D7E  00DD               	movwf	___fladd@signs^(0+128)
  4466  0D7F                     l2912:
  4467  0D7F  0850               	movf	(___fladd@b^(0+128)+3),w
  4468  0D80  00D5               	movwf	??___fladd^(0+128)
  4469  0D81  0755               	addwf	??___fladd^(0+128),w
  4470  0D82  00D6               	movwf	(??___fladd+1)^(0+128)
  4471  0D83  0856               	movf	(??___fladd+1)^(0+128),w
  4472  0D84  00DF               	movwf	___fladd@bexp^(0+128)
  4473  0D85                     l2914:
  4474  0D85  1FCF               	btfss	(___fladd@b^(0+128)+2),7
  4475  0D86  2D88               	goto	u4031
  4476  0D87  2D89               	goto	u4030
  4477  0D88                     u4031:
  4478  0D88  2D8A               	goto	l2918
  4479  0D89                     u4030:
  4480  0D89                     l2916:
  4481  0D89  145F               	bsf	___fladd@bexp^(0+128),0
  4482  0D8A                     l2918:
  4483  0D8A  085F               	movf	___fladd@bexp^(0+128),w
  4484  0D8B  1903               	btfsc	3,2
  4485  0D8C  2D8E               	goto	u4041
  4486  0D8D  2D8F               	goto	u4040
  4487  0D8E                     u4041:
  4488  0D8E  2D9F               	goto	l2928
  4489  0D8F                     u4040:
  4490  0D8F                     l2920:
  4491  0D8F  0A5F               	incf	___fladd@bexp^(0+128),w
  4492  0D90  1D03               	btfss	3,2
  4493  0D91  2D93               	goto	u4051
  4494  0D92  2D94               	goto	u4050
  4495  0D93                     u4051:
  4496  0D93  2D9C               	goto	l2924
  4497  0D94                     u4050:
  4498  0D94                     l2922:
  4499  0D94  3000               	movlw	0
  4500  0D95  00D0               	movwf	(___fladd@b+3)^(0+128)
  4501  0D96  3000               	movlw	0
  4502  0D97  00CF               	movwf	(___fladd@b+2)^(0+128)
  4503  0D98  3000               	movlw	0
  4504  0D99  00CE               	movwf	(___fladd@b+1)^(0+128)
  4505  0D9A  3000               	movlw	0
  4506  0D9B  00CD               	movwf	___fladd@b^(0+128)
  4507  0D9C                     l2924:
  4508  0D9C  17CF               	bsf	(___fladd@b^(0+128)+2),7
  4509  0D9D                     l2926:
  4510  0D9D  01D0               	clrf	(___fladd@b^(0+128)+3)
  4511  0D9E  2DA7               	goto	l2930
  4512  0D9F                     l2928:
  4513  0D9F  3000               	movlw	0
  4514  0DA0  00D0               	movwf	(___fladd@b+3)^(0+128)
  4515  0DA1  3000               	movlw	0
  4516  0DA2  00CF               	movwf	(___fladd@b+2)^(0+128)
  4517  0DA3  3000               	movlw	0
  4518  0DA4  00CE               	movwf	(___fladd@b+1)^(0+128)
  4519  0DA5  3000               	movlw	0
  4520  0DA6  00CD               	movwf	___fladd@b^(0+128)
  4521  0DA7                     l2930:
  4522  0DA7  0854               	movf	(___fladd@a^(0+128)+3),w
  4523  0DA8  3980               	andlw	128
  4524  0DA9  00D5               	movwf	??___fladd^(0+128)
  4525  0DAA  0855               	movf	??___fladd^(0+128),w
  4526  0DAB  00DE               	movwf	___fladd@aexp^(0+128)
  4527  0DAC                     l2932:
  4528  0DAC  085E               	movf	___fladd@aexp^(0+128),w
  4529  0DAD  065D               	xorwf	___fladd@signs^(0+128),w
  4530  0DAE  1903               	skipnz
  4531  0DAF  2DB1               	goto	u4061
  4532  0DB0  2DB2               	goto	u4060
  4533  0DB1                     u4061:
  4534  0DB1  2DB3               	goto	l2936
  4535  0DB2                     u4060:
  4536  0DB2                     l2934:
  4537  0DB2  175D               	bsf	___fladd@signs^(0+128),6
  4538  0DB3                     l2936:
  4539  0DB3  0854               	movf	(___fladd@a^(0+128)+3),w
  4540  0DB4  00D5               	movwf	??___fladd^(0+128)
  4541  0DB5  0755               	addwf	??___fladd^(0+128),w
  4542  0DB6  00D6               	movwf	(??___fladd+1)^(0+128)
  4543  0DB7  0856               	movf	(??___fladd+1)^(0+128),w
  4544  0DB8  00DE               	movwf	___fladd@aexp^(0+128)
  4545  0DB9                     l2938:
  4546  0DB9  1FD3               	btfss	(___fladd@a^(0+128)+2),7
  4547  0DBA  2DBC               	goto	u4071
  4548  0DBB  2DBD               	goto	u4070
  4549  0DBC                     u4071:
  4550  0DBC  2DBE               	goto	l2942
  4551  0DBD                     u4070:
  4552  0DBD                     l2940:
  4553  0DBD  145E               	bsf	___fladd@aexp^(0+128),0
  4554  0DBE                     l2942:
  4555  0DBE  085E               	movf	___fladd@aexp^(0+128),w
  4556  0DBF  1903               	btfsc	3,2
  4557  0DC0  2DC2               	goto	u4081
  4558  0DC1  2DC3               	goto	u4080
  4559  0DC2                     u4081:
  4560  0DC2  2DD3               	goto	l2952
  4561  0DC3                     u4080:
  4562  0DC3                     l2944:
  4563  0DC3  0A5E               	incf	___fladd@aexp^(0+128),w
  4564  0DC4  1D03               	btfss	3,2
  4565  0DC5  2DC7               	goto	u4091
  4566  0DC6  2DC8               	goto	u4090
  4567  0DC7                     u4091:
  4568  0DC7  2DD0               	goto	l2948
  4569  0DC8                     u4090:
  4570  0DC8                     l2946:
  4571  0DC8  3000               	movlw	0
  4572  0DC9  00D4               	movwf	(___fladd@a+3)^(0+128)
  4573  0DCA  3000               	movlw	0
  4574  0DCB  00D3               	movwf	(___fladd@a+2)^(0+128)
  4575  0DCC  3000               	movlw	0
  4576  0DCD  00D2               	movwf	(___fladd@a+1)^(0+128)
  4577  0DCE  3000               	movlw	0
  4578  0DCF  00D1               	movwf	___fladd@a^(0+128)
  4579  0DD0                     l2948:
  4580  0DD0  17D3               	bsf	(___fladd@a^(0+128)+2),7
  4581  0DD1                     l2950:
  4582  0DD1  01D4               	clrf	(___fladd@a^(0+128)+3)
  4583  0DD2  2DDB               	goto	l661
  4584  0DD3                     l2952:
  4585  0DD3  3000               	movlw	0
  4586  0DD4  00D4               	movwf	(___fladd@a+3)^(0+128)
  4587  0DD5  3000               	movlw	0
  4588  0DD6  00D3               	movwf	(___fladd@a+2)^(0+128)
  4589  0DD7  3000               	movlw	0
  4590  0DD8  00D2               	movwf	(___fladd@a+1)^(0+128)
  4591  0DD9  3000               	movlw	0
  4592  0DDA  00D1               	movwf	___fladd@a^(0+128)
  4593  0DDB                     l661:
  4594  0DDB  085F               	movf	___fladd@bexp^(0+128),w
  4595  0DDC  025E               	subwf	___fladd@aexp^(0+128),w
  4596  0DDD  1803               	skipnc
  4597  0DDE  2DE0               	goto	u4101
  4598  0DDF  2DE1               	goto	u4100
  4599  0DE0                     u4101:
  4600  0DE0  2E25               	goto	l2988
  4601  0DE1                     u4100:
  4602  0DE1                     l2954:
  4603  0DE1  1F5D               	btfss	___fladd@signs^(0+128),6
  4604  0DE2  2DE4               	goto	u4111
  4605  0DE3  2DE5               	goto	u4110
  4606  0DE4                     u4111:
  4607  0DE4  2DE9               	goto	l2958
  4608  0DE5                     u4110:
  4609  0DE5                     l2956:
  4610  0DE5  3080               	movlw	128
  4611  0DE6  00D5               	movwf	??___fladd^(0+128)
  4612  0DE7  0855               	movf	??___fladd^(0+128),w
  4613  0DE8  06DD               	xorwf	___fladd@signs^(0+128),f
  4614  0DE9                     l2958:
  4615  0DE9  085F               	movf	___fladd@bexp^(0+128),w
  4616  0DEA  00D5               	movwf	??___fladd^(0+128)
  4617  0DEB  0855               	movf	??___fladd^(0+128),w
  4618  0DEC  00E0               	movwf	___fladd@grs^(0+128)
  4619  0DED                     l2960:
  4620  0DED  085E               	movf	___fladd@aexp^(0+128),w
  4621  0DEE  00D5               	movwf	??___fladd^(0+128)
  4622  0DEF  0855               	movf	??___fladd^(0+128),w
  4623  0DF0  00DF               	movwf	___fladd@bexp^(0+128)
  4624  0DF1                     l2962:
  4625  0DF1  0860               	movf	___fladd@grs^(0+128),w
  4626  0DF2  00D5               	movwf	??___fladd^(0+128)
  4627  0DF3  0855               	movf	??___fladd^(0+128),w
  4628  0DF4  00DE               	movwf	___fladd@aexp^(0+128)
  4629  0DF5                     l2964:
  4630  0DF5  084D               	movf	___fladd@b^(0+128),w
  4631  0DF6  00D5               	movwf	??___fladd^(0+128)
  4632  0DF7  0855               	movf	??___fladd^(0+128),w
  4633  0DF8  00E0               	movwf	___fladd@grs^(0+128)
  4634  0DF9                     l2966:
  4635  0DF9  0851               	movf	___fladd@a^(0+128),w
  4636  0DFA  00D5               	movwf	??___fladd^(0+128)
  4637  0DFB  0855               	movf	??___fladd^(0+128),w
  4638  0DFC  00CD               	movwf	___fladd@b^(0+128)
  4639  0DFD                     l2968:
  4640  0DFD  0860               	movf	___fladd@grs^(0+128),w
  4641  0DFE  00D5               	movwf	??___fladd^(0+128)
  4642  0DFF  0855               	movf	??___fladd^(0+128),w
  4643  0E00  00D1               	movwf	___fladd@a^(0+128)
  4644  0E01                     l2970:
  4645  0E01  084E               	movf	(___fladd@b^(0+128)+1),w
  4646  0E02  00D5               	movwf	??___fladd^(0+128)
  4647  0E03  0855               	movf	??___fladd^(0+128),w
  4648  0E04  00E0               	movwf	___fladd@grs^(0+128)
  4649  0E05                     l2972:
  4650  0E05  0852               	movf	(___fladd@a^(0+128)+1),w
  4651  0E06  00D5               	movwf	??___fladd^(0+128)
  4652  0E07  0855               	movf	??___fladd^(0+128),w
  4653  0E08  00CE               	movwf	(___fladd@b^(0+128)+1)
  4654  0E09                     l2974:
  4655  0E09  0860               	movf	___fladd@grs^(0+128),w
  4656  0E0A  00D5               	movwf	??___fladd^(0+128)
  4657  0E0B  0855               	movf	??___fladd^(0+128),w
  4658  0E0C  00D2               	movwf	(___fladd@a^(0+128)+1)
  4659  0E0D                     l2976:
  4660  0E0D  084F               	movf	(___fladd@b^(0+128)+2),w
  4661  0E0E  00D5               	movwf	??___fladd^(0+128)
  4662  0E0F  0855               	movf	??___fladd^(0+128),w
  4663  0E10  00E0               	movwf	___fladd@grs^(0+128)
  4664  0E11                     l2978:
  4665  0E11  0853               	movf	(___fladd@a^(0+128)+2),w
  4666  0E12  00D5               	movwf	??___fladd^(0+128)
  4667  0E13  0855               	movf	??___fladd^(0+128),w
  4668  0E14  00CF               	movwf	(___fladd@b^(0+128)+2)
  4669  0E15                     l2980:
  4670  0E15  0860               	movf	___fladd@grs^(0+128),w
  4671  0E16  00D5               	movwf	??___fladd^(0+128)
  4672  0E17  0855               	movf	??___fladd^(0+128),w
  4673  0E18  00D3               	movwf	(___fladd@a^(0+128)+2)
  4674  0E19                     l2982:
  4675  0E19  0850               	movf	(___fladd@b^(0+128)+3),w
  4676  0E1A  00D5               	movwf	??___fladd^(0+128)
  4677  0E1B  0855               	movf	??___fladd^(0+128),w
  4678  0E1C  00E0               	movwf	___fladd@grs^(0+128)
  4679  0E1D                     l2984:
  4680  0E1D  0854               	movf	(___fladd@a^(0+128)+3),w
  4681  0E1E  00D5               	movwf	??___fladd^(0+128)
  4682  0E1F  0855               	movf	??___fladd^(0+128),w
  4683  0E20  00D0               	movwf	(___fladd@b^(0+128)+3)
  4684  0E21                     l2986:
  4685  0E21  0860               	movf	___fladd@grs^(0+128),w
  4686  0E22  00D5               	movwf	??___fladd^(0+128)
  4687  0E23  0855               	movf	??___fladd^(0+128),w
  4688  0E24  00D4               	movwf	(___fladd@a^(0+128)+3)
  4689  0E25                     l2988:
  4690  0E25  01E0               	clrf	___fladd@grs^(0+128)
  4691  0E26                     l2990:
  4692  0E26  085E               	movf	___fladd@aexp^(0+128),w
  4693  0E27  00D5               	movwf	??___fladd^(0+128)
  4694  0E28  01D6               	clrf	(??___fladd^(0+128)+1)
  4695  0E29  0856               	movf	(??___fladd+1)^(0+128),w
  4696  0E2A  00D8               	movwf	((??___fladd+2)^(0+128)+1)
  4697  0E2B  085F               	movf	___fladd@bexp^(0+128),w
  4698  0E2C  0255               	subwf	??___fladd^(0+128),w
  4699  0E2D  00D7               	movwf	(??___fladd+2)^(0+128)
  4700  0E2E  1C03               	skipc
  4701  0E2F  03D8               	decf	((??___fladd+2)^(0+128)+1),f
  4702  0E30  0858               	movf	(??___fladd+3)^(0+128),w
  4703  0E31  3A80               	xorlw	128
  4704  0E32  00FF               	movwf	btemp+1
  4705  0E33  3080               	movlw	128
  4706  0E34  027F               	subwf	btemp+1,w
  4707  0E35  1D03               	skipz
  4708  0E36  2E39               	goto	u4125
  4709  0E37  301A               	movlw	26
  4710  0E38  0257               	subwf	(??___fladd+2)^(0+128),w
  4711  0E39                     u4125:
  4712  0E39  1C03               	skipc
  4713  0E3A  2E3C               	goto	u4121
  4714  0E3B  2E3D               	goto	u4120
  4715  0E3C                     u4121:
  4716  0E3C  2E7A               	goto	l3006
  4717  0E3D                     u4120:
  4718  0E3D                     l2992:
  4719  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  4720  0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  4721  0E3F  0850               	movf	(___fladd@b+3)^(0+128),w
  4722  0E40  044F               	iorwf	(___fladd@b+2)^(0+128),w
  4723  0E41  044E               	iorwf	(___fladd@b+1)^(0+128),w
  4724  0E42  044D               	iorwf	___fladd@b^(0+128),w
  4725  0E43  1D03               	skipz
  4726  0E44  2E46               	goto	u4131
  4727  0E45  2E48               	goto	u4130
  4728  0E46                     u4131:
  4729  0E46  3001               	movlw	1
  4730  0E47  2E49               	goto	u4140
  4731  0E48                     u4130:
  4732  0E48  3000               	movlw	0
  4733  0E49                     u4140:
  4734  0E49  00D5               	movwf	??___fladd^(0+128)
  4735  0E4A  0855               	movf	??___fladd^(0+128),w
  4736  0E4B  00E0               	movwf	___fladd@grs^(0+128)
  4737  0E4C  3000               	movlw	0
  4738  0E4D  00D0               	movwf	(___fladd@b+3)^(0+128)
  4739  0E4E  3000               	movlw	0
  4740  0E4F  00CF               	movwf	(___fladd@b+2)^(0+128)
  4741  0E50  3000               	movlw	0
  4742  0E51  00CE               	movwf	(___fladd@b+1)^(0+128)
  4743  0E52  3000               	movlw	0
  4744  0E53  00CD               	movwf	___fladd@b^(0+128)
  4745  0E54  085E               	movf	___fladd@aexp^(0+128),w
  4746  0E55  00D5               	movwf	??___fladd^(0+128)
  4747  0E56  0855               	movf	??___fladd^(0+128),w
  4748  0E57  00DF               	movwf	___fladd@bexp^(0+128)
  4749  0E58  2E82               	goto	l665
  4750  0E59                     l667:
  4751  0E59  1C60               	btfss	___fladd@grs^(0+128),0
  4752  0E5A  2E5C               	goto	u4151
  4753  0E5B  2E5D               	goto	u4150
  4754  0E5C                     u4151:
  4755  0E5C  2E66               	goto	l2996
  4756  0E5D                     u4150:
  4757  0E5D                     l2994:
  4758  0E5D  0860               	movf	___fladd@grs^(0+128),w
  4759  0E5E  00D5               	movwf	??___fladd^(0+128)
  4760  0E5F  1003               	clrc
  4761  0E60  0C55               	rrf	??___fladd^(0+128),w
  4762  0E61  3801               	iorlw	1
  4763  0E62  00D6               	movwf	(??___fladd+1)^(0+128)
  4764  0E63  0856               	movf	(??___fladd+1)^(0+128),w
  4765  0E64  00E0               	movwf	___fladd@grs^(0+128)
  4766  0E65  2E68               	goto	l2998
  4767  0E66                     l2996:
  4768  0E66  1003               	clrc
  4769  0E67  0CE0               	rrf	___fladd@grs^(0+128),f
  4770  0E68                     l2998:
  4771  0E68  1C4D               	btfss	___fladd@b^(0+128),0
  4772  0E69  2E6B               	goto	u4161
  4773  0E6A  2E6C               	goto	u4160
  4774  0E6B                     u4161:
  4775  0E6B  2E6D               	goto	l3002
  4776  0E6C                     u4160:
  4777  0E6C                     l3000:
  4778  0E6C  17E0               	bsf	___fladd@grs^(0+128),7
  4779  0E6D                     l3002:
  4780  0E6D  3001               	movlw	1
  4781  0E6E  00D5               	movwf	??___fladd^(0+128)
  4782  0E6F                     u4175:
  4783  0E6F  0D50               	rlf	(___fladd@b+3)^(0+128),w
  4784  0E70  0CD0               	rrf	(___fladd@b+3)^(0+128),f
  4785  0E71  0CCF               	rrf	(___fladd@b+2)^(0+128),f
  4786  0E72  0CCE               	rrf	(___fladd@b+1)^(0+128),f
  4787  0E73  0CCD               	rrf	___fladd@b^(0+128),f
  4788  0E74  0BD5               	decfsz	(??___fladd^(0+128))& (0+127),f
  4789  0E75  2E6F               	goto	u4175
  4790  0E76                     l3004:
  4791  0E76  3001               	movlw	1
  4792  0E77  00D5               	movwf	??___fladd^(0+128)
  4793  0E78  0855               	movf	??___fladd^(0+128),w
  4794  0E79  07DF               	addwf	___fladd@bexp^(0+128),f
  4795  0E7A                     l3006:
  4796  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  4797  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  4798  0E7C  085E               	movf	___fladd@aexp^(0+128),w
  4799  0E7D  025F               	subwf	___fladd@bexp^(0+128),w
  4800  0E7E  1C03               	skipc
  4801  0E7F  2E81               	goto	u4181
  4802  0E80  2E82               	goto	u4180
  4803  0E81                     u4181:
  4804  0E81  2E59               	goto	l667
  4805  0E82                     u4180:
  4806  0E82                     l665:
  4807  0E82  1B5D               	btfsc	___fladd@signs^(0+128),6
  4808  0E83  2E85               	goto	u4191
  4809  0E84  2E86               	goto	u4190
  4810  0E85                     u4191:
  4811  0E85  2ED1               	goto	l3032
  4812  0E86                     u4190:
  4813  0E86                     l3008:
  4814  0E86  085F               	movf	___fladd@bexp^(0+128),w
  4815  0E87  1D03               	btfss	3,2
  4816  0E88  2E8A               	goto	u4201
  4817  0E89  2E8B               	goto	u4200
  4818  0E8A                     u4201:
  4819  0E8A  2E94               	goto	l3014
  4820  0E8B                     u4200:
  4821  0E8B                     l3010:
  4822  0E8B  3000               	movlw	0
  4823  0E8C  00D0               	movwf	(?___fladd+3)^(0+128)
  4824  0E8D  3000               	movlw	0
  4825  0E8E  00CF               	movwf	(?___fladd+2)^(0+128)
  4826  0E8F  3000               	movlw	0
  4827  0E90  00CE               	movwf	(?___fladd+1)^(0+128)
  4828  0E91  3000               	movlw	0
  4829  0E92  00CD               	movwf	?___fladd^(0+128)
  4830  0E93  2FFF               	goto	l674
  4831  0E94                     l3014:
  4832  0E94  0851               	movf	___fladd@a^(0+128),w
  4833  0E95  07CD               	addwf	___fladd@b^(0+128),f
  4834  0E96  0852               	movf	(___fladd@a+1)^(0+128),w
  4835  0E97  1103               	clrz
  4836  0E98  1803               	skipnc
  4837  0E99  3E01               	addlw	1
  4838  0E9A  1903               	skipnz
  4839  0E9B  2E9D               	goto	u4211
  4840  0E9C  07CE               	addwf	(___fladd@b+1)^(0+128),f
  4841  0E9D                     u4211:
  4842  0E9D  0853               	movf	(___fladd@a+2)^(0+128),w
  4843  0E9E  1103               	clrz
  4844  0E9F  1803               	skipnc
  4845  0EA0  3E01               	addlw	1
  4846  0EA1  1903               	skipnz
  4847  0EA2  2EA4               	goto	u4212
  4848  0EA3  07CF               	addwf	(___fladd@b+2)^(0+128),f
  4849  0EA4                     u4212:
  4850  0EA4  0854               	movf	(___fladd@a+3)^(0+128),w
  4851  0EA5  1103               	clrz
  4852  0EA6  1803               	skipnc
  4853  0EA7  3E01               	addlw	1
  4854  0EA8  1903               	skipnz
  4855  0EA9  2EAB               	goto	u4213
  4856  0EAA  07D0               	addwf	(___fladd@b+3)^(0+128),f
  4857  0EAB                     u4213:
  4858  0EAB                     l3016:
  4859  0EAB  1C50               	btfss	(___fladd@b+3)^(0+128),0
  4860  0EAC  2EAE               	goto	u4221
  4861  0EAD  2EAF               	goto	u4220
  4862  0EAE                     u4221:
  4863  0EAE  2F85               	goto	l3066
  4864  0EAF                     u4220:
  4865  0EAF                     l3018:
  4866  0EAF  1C60               	btfss	___fladd@grs^(0+128),0
  4867  0EB0  2EB2               	goto	u4231
  4868  0EB1  2EB3               	goto	u4230
  4869  0EB2                     u4231:
  4870  0EB2  2EBC               	goto	l3022
  4871  0EB3                     u4230:
  4872  0EB3                     l3020:
  4873  0EB3  0860               	movf	___fladd@grs^(0+128),w
  4874  0EB4  00D5               	movwf	??___fladd^(0+128)
  4875  0EB5  1003               	clrc
  4876  0EB6  0C55               	rrf	??___fladd^(0+128),w
  4877  0EB7  3801               	iorlw	1
  4878  0EB8  00D6               	movwf	(??___fladd+1)^(0+128)
  4879  0EB9  0856               	movf	(??___fladd+1)^(0+128),w
  4880  0EBA  00E0               	movwf	___fladd@grs^(0+128)
  4881  0EBB  2EBE               	goto	l3024
  4882  0EBC                     l3022:
  4883  0EBC  1003               	clrc
  4884  0EBD  0CE0               	rrf	___fladd@grs^(0+128),f
  4885  0EBE                     l3024:
  4886  0EBE  1C4D               	btfss	___fladd@b^(0+128),0
  4887  0EBF  2EC1               	goto	u4241
  4888  0EC0  2EC2               	goto	u4240
  4889  0EC1                     u4241:
  4890  0EC1  2EC3               	goto	l3028
  4891  0EC2                     u4240:
  4892  0EC2                     l3026:
  4893  0EC2  17E0               	bsf	___fladd@grs^(0+128),7
  4894  0EC3                     l3028:
  4895  0EC3  3001               	movlw	1
  4896  0EC4  00D5               	movwf	??___fladd^(0+128)
  4897  0EC5                     u4255:
  4898  0EC5  0D50               	rlf	(___fladd@b+3)^(0+128),w
  4899  0EC6  0CD0               	rrf	(___fladd@b+3)^(0+128),f
  4900  0EC7  0CCF               	rrf	(___fladd@b+2)^(0+128),f
  4901  0EC8  0CCE               	rrf	(___fladd@b+1)^(0+128),f
  4902  0EC9  0CCD               	rrf	___fladd@b^(0+128),f
  4903  0ECA  0BD5               	decfsz	(??___fladd^(0+128))& (0+127),f
  4904  0ECB  2EC5               	goto	u4255
  4905  0ECC                     l3030:
  4906  0ECC  3001               	movlw	1
  4907  0ECD  00D5               	movwf	??___fladd^(0+128)
  4908  0ECE  0855               	movf	??___fladd^(0+128),w
  4909  0ECF  07DF               	addwf	___fladd@bexp^(0+128),f
  4910  0ED0  2F85               	goto	l3066
  4911  0ED1                     l3032:
  4912  0ED1  0850               	movf	(___fladd@b+3)^(0+128),w
  4913  0ED2  3A80               	xorlw	128
  4914  0ED3  00FF               	movwf	btemp+1
  4915  0ED4  0854               	movf	(___fladd@a+3)^(0+128),w
  4916  0ED5  3A80               	xorlw	128
  4917  0ED6  027F               	subwf	btemp+1,w
  4918  0ED7  1D03               	skipz
  4919  0ED8  2EE3               	goto	u4263
  4920  0ED9  0853               	movf	(___fladd@a+2)^(0+128),w
  4921  0EDA  024F               	subwf	(___fladd@b+2)^(0+128),w
  4922  0EDB  1D03               	skipz
  4923  0EDC  2EE3               	goto	u4263
  4924  0EDD  0852               	movf	(___fladd@a+1)^(0+128),w
  4925  0EDE  024E               	subwf	(___fladd@b+1)^(0+128),w
  4926  0EDF  1D03               	skipz
  4927  0EE0  2EE3               	goto	u4263
  4928  0EE1  0851               	movf	___fladd@a^(0+128),w
  4929  0EE2  024D               	subwf	___fladd@b^(0+128),w
  4930  0EE3                     u4263:
  4931  0EE3  1803               	skipnc
  4932  0EE4  2EE6               	goto	u4261
  4933  0EE5  2EE7               	goto	u4260
  4934  0EE6                     u4261:
  4935  0EE6  2F3F               	goto	l3042
  4936  0EE7                     u4260:
  4937  0EE7                     l3034:
  4938  0EE7  30FF               	movlw	255
  4939  0EE8  00D5               	movwf	??___fladd^(0+128)
  4940  0EE9  30FF               	movlw	255
  4941  0EEA  00D6               	movwf	(??___fladd^(0+128)+1)
  4942  0EEB  30FF               	movlw	255
  4943  0EEC  00D7               	movwf	(??___fladd^(0+128)+2)
  4944  0EED  30FF               	movlw	255
  4945  0EEE  00D8               	movwf	(??___fladd^(0+128)+3)
  4946  0EEF  0851               	movf	___fladd@a^(0+128),w
  4947  0EF0  00D9               	movwf	(??___fladd+4)^(0+128)
  4948  0EF1  0852               	movf	(___fladd@a+1)^(0+128),w
  4949  0EF2  00DA               	movwf	((??___fladd+4)^(0+128)+1)
  4950  0EF3  0853               	movf	(___fladd@a+2)^(0+128),w
  4951  0EF4  00DB               	movwf	((??___fladd+4)^(0+128)+2)
  4952  0EF5  0854               	movf	(___fladd@a+3)^(0+128),w
  4953  0EF6  00DC               	movwf	((??___fladd+4)^(0+128)+3)
  4954  0EF7  084D               	movf	___fladd@b^(0+128),w
  4955  0EF8  02D9               	subwf	(??___fladd+4)^(0+128),f
  4956  0EF9  084E               	movf	(___fladd@b+1)^(0+128),w
  4957  0EFA  1C03               	skipc
  4958  0EFB  0F4E               	incfsz	(___fladd@b+1)^(0+128),w
  4959  0EFC  2EFE               	goto	u4271
  4960  0EFD  2EFF               	goto	u4272
  4961  0EFE                     u4271:
  4962  0EFE  02DA               	subwf	((??___fladd+4)^(0+128)+1),f
  4963  0EFF                     u4272:
  4964  0EFF  084F               	movf	(___fladd@b+2)^(0+128),w
  4965  0F00  1C03               	skipc
  4966  0F01  0F4F               	incfsz	(___fladd@b+2)^(0+128),w
  4967  0F02  2F04               	goto	u4273
  4968  0F03  2F05               	goto	u4274
  4969  0F04                     u4273:
  4970  0F04  02DB               	subwf	((??___fladd+4)^(0+128)+2),f
  4971  0F05                     u4274:
  4972  0F05  0850               	movf	(___fladd@b+3)^(0+128),w
  4973  0F06  1C03               	skipc
  4974  0F07  0F50               	incfsz	(___fladd@b+3)^(0+128),w
  4975  0F08  2F0A               	goto	u4275
  4976  0F09  2F0B               	goto	u4276
  4977  0F0A                     u4275:
  4978  0F0A  02DC               	subwf	((??___fladd+4)^(0+128)+3),f
  4979  0F0B                     u4276:
  4980  0F0B  0859               	movf	(??___fladd+4)^(0+128),w
  4981  0F0C  07D5               	addwf	??___fladd^(0+128),f
  4982  0F0D  085A               	movf	(??___fladd+5)^(0+128),w
  4983  0F0E  1803               	skipnc
  4984  0F0F  0F5A               	incfsz	(??___fladd+5)^(0+128),w
  4985  0F10  2F12               	goto	u4280
  4986  0F11  2F13               	goto	u4281
  4987  0F12                     u4280:
  4988  0F12  07D6               	addwf	(??___fladd^(0+128)+1),f
  4989  0F13                     u4281:
  4990  0F13  085B               	movf	(??___fladd+6)^(0+128),w
  4991  0F14  1803               	skipnc
  4992  0F15  0F5B               	incfsz	(??___fladd+6)^(0+128),w
  4993  0F16  2F18               	goto	u4282
  4994  0F17  2F19               	goto	u4283
  4995  0F18                     u4282:
  4996  0F18  07D7               	addwf	(??___fladd^(0+128)+2),f
  4997  0F19                     u4283:
  4998  0F19  085C               	movf	(??___fladd+7)^(0+128),w
  4999  0F1A  1803               	skipnc
  5000  0F1B  0A5C               	incf	(??___fladd+7)^(0+128),w
  5001  0F1C  07D8               	addwf	(??___fladd^(0+128)+3),f
  5002  0F1D  0858               	movf	(??___fladd+3)^(0+128),w
  5003  0F1E  00D0               	movwf	(___fladd@b+3)^(0+128)
  5004  0F1F  0857               	movf	(??___fladd+2)^(0+128),w
  5005  0F20  00CF               	movwf	(___fladd@b+2)^(0+128)
  5006  0F21  0856               	movf	(??___fladd+1)^(0+128),w
  5007  0F22  00CE               	movwf	(___fladd@b+1)^(0+128)
  5008  0F23  0855               	movf	??___fladd^(0+128),w
  5009  0F24  00CD               	movwf	___fladd@b^(0+128)
  5010  0F25                     l3036:
  5011  0F25  3080               	movlw	128
  5012  0F26  00D5               	movwf	??___fladd^(0+128)
  5013  0F27  0855               	movf	??___fladd^(0+128),w
  5014  0F28  06DD               	xorwf	___fladd@signs^(0+128),f
  5015  0F29  09E0               	comf	___fladd@grs^(0+128),f
  5016  0F2A  0AE0               	incf	___fladd@grs^(0+128),f
  5017  0F2B                     l3038:
  5018  0F2B  0860               	movf	___fladd@grs^(0+128),w
  5019  0F2C  1D03               	btfss	3,2
  5020  0F2D  2F2F               	goto	u4291
  5021  0F2E  2F30               	goto	u4290
  5022  0F2F                     u4291:
  5023  0F2F  2F4D               	goto	l682
  5024  0F30                     u4290:
  5025  0F30                     l3040:
  5026  0F30  3001               	movlw	1
  5027  0F31  07CD               	addwf	___fladd@b^(0+128),f
  5028  0F32  3000               	movlw	0
  5029  0F33  1803               	skipnc
  5030  0F34  3001               	movlw	1
  5031  0F35  07CE               	addwf	(___fladd@b+1)^(0+128),f
  5032  0F36  3000               	movlw	0
  5033  0F37  1803               	skipnc
  5034  0F38  3001               	movlw	1
  5035  0F39  07CF               	addwf	(___fladd@b+2)^(0+128),f
  5036  0F3A  3000               	movlw	0
  5037  0F3B  1803               	skipnc
  5038  0F3C  3001               	movlw	1
  5039  0F3D  07D0               	addwf	(___fladd@b+3)^(0+128),f
  5040  0F3E  2F4D               	goto	l682
  5041  0F3F                     l3042:
  5042  0F3F  0851               	movf	___fladd@a^(0+128),w
  5043  0F40  02CD               	subwf	___fladd@b^(0+128),f
  5044  0F41  0852               	movf	(___fladd@a+1)^(0+128),w
  5045  0F42  1C03               	skipc
  5046  0F43  0F52               	incfsz	(___fladd@a+1)^(0+128),w
  5047  0F44  02CE               	subwf	(___fladd@b+1)^(0+128),f
  5048  0F45  0853               	movf	(___fladd@a+2)^(0+128),w
  5049  0F46  1C03               	skipc
  5050  0F47  0F53               	incfsz	(___fladd@a+2)^(0+128),w
  5051  0F48  02CF               	subwf	(___fladd@b+2)^(0+128),f
  5052  0F49  0854               	movf	(___fladd@a+3)^(0+128),w
  5053  0F4A  1C03               	skipc
  5054  0F4B  0F54               	incfsz	(___fladd@a+3)^(0+128),w
  5055  0F4C  02D0               	subwf	(___fladd@b+3)^(0+128),f
  5056  0F4D                     l682:
  5057  0F4D  0850               	movf	(___fladd@b+3)^(0+128),w
  5058  0F4E  044F               	iorwf	(___fladd@b+2)^(0+128),w
  5059  0F4F  044E               	iorwf	(___fladd@b+1)^(0+128),w
  5060  0F50  044D               	iorwf	___fladd@b^(0+128),w
  5061  0F51  1D03               	skipz
  5062  0F52  2F54               	goto	u4301
  5063  0F53  2F55               	goto	u4300
  5064  0F54                     u4301:
  5065  0F54  2F81               	goto	l3064
  5066  0F55                     u4300:
  5067  0F55                     l3044:
  5068  0F55  0860               	movf	___fladd@grs^(0+128),w
  5069  0F56  1D03               	btfss	3,2
  5070  0F57  2F59               	goto	u4311
  5071  0F58  2F5A               	goto	u4310
  5072  0F59                     u4311:
  5073  0F59  2F81               	goto	l3064
  5074  0F5A                     u4310:
  5075  0F5A                     l3046:
  5076  0F5A  3000               	movlw	0
  5077  0F5B  00D0               	movwf	(?___fladd+3)^(0+128)
  5078  0F5C  3000               	movlw	0
  5079  0F5D  00CF               	movwf	(?___fladd+2)^(0+128)
  5080  0F5E  3000               	movlw	0
  5081  0F5F  00CE               	movwf	(?___fladd+1)^(0+128)
  5082  0F60  3000               	movlw	0
  5083  0F61  00CD               	movwf	?___fladd^(0+128)
  5084  0F62  2FFF               	goto	l674
  5085  0F63                     l3050:
  5086  0F63  3001               	movlw	1
  5087  0F64  00D5               	movwf	??___fladd^(0+128)
  5088  0F65                     u4325:
  5089  0F65  1003               	clrc
  5090  0F66  0DCD               	rlf	___fladd@b^(0+128),f
  5091  0F67  0DCE               	rlf	(___fladd@b+1)^(0+128),f
  5092  0F68  0DCF               	rlf	(___fladd@b+2)^(0+128),f
  5093  0F69  0DD0               	rlf	(___fladd@b+3)^(0+128),f
  5094  0F6A  0BD5               	decfsz	??___fladd^(0+128),f
  5095  0F6B  2F65               	goto	u4325
  5096  0F6C                     l3052:
  5097  0F6C  1FE0               	btfss	___fladd@grs^(0+128),7
  5098  0F6D  2F6F               	goto	u4331
  5099  0F6E  2F70               	goto	u4330
  5100  0F6F                     u4331:
  5101  0F6F  2F71               	goto	l686
  5102  0F70                     u4330:
  5103  0F70                     l3054:
  5104  0F70  144D               	bsf	___fladd@b^(0+128),0
  5105  0F71                     l686:
  5106  0F71  1C60               	btfss	___fladd@grs^(0+128),0
  5107  0F72  2F74               	goto	u4341
  5108  0F73  2F75               	goto	u4340
  5109  0F74                     u4341:
  5110  0F74  2F78               	goto	l3058
  5111  0F75                     u4340:
  5112  0F75                     l3056:
  5113  0F75  1403               	setc
  5114  0F76  0DE0               	rlf	___fladd@grs^(0+128),f
  5115  0F77  2F7A               	goto	l3060
  5116  0F78                     l3058:
  5117  0F78  1003               	clrc
  5118  0F79  0DE0               	rlf	___fladd@grs^(0+128),f
  5119  0F7A                     l3060:
  5120  0F7A  085F               	movf	___fladd@bexp^(0+128),w
  5121  0F7B  1903               	btfsc	3,2
  5122  0F7C  2F7E               	goto	u4351
  5123  0F7D  2F7F               	goto	u4350
  5124  0F7E                     u4351:
  5125  0F7E  2F81               	goto	l3064
  5126  0F7F                     u4350:
  5127  0F7F                     l3062:
  5128  0F7F  3001               	movlw	1
  5129  0F80  02DF               	subwf	___fladd@bexp^(0+128),f
  5130  0F81                     l3064:
  5131  0F81  1FCF               	btfss	(___fladd@b+2)^(0+128),7
  5132  0F82  2F84               	goto	u4361
  5133  0F83  2F85               	goto	u4360
  5134  0F84                     u4361:
  5135  0F84  2F63               	goto	l3050
  5136  0F85                     u4360:
  5137  0F85                     l3066:
  5138  0F85  01DE               	clrf	___fladd@aexp^(0+128)
  5139  0F86                     l3068:
  5140  0F86  1FE0               	btfss	___fladd@grs^(0+128),7
  5141  0F87  2F89               	goto	u4371
  5142  0F88  2F8A               	goto	u4370
  5143  0F89                     u4371:
  5144  0F89  2F98               	goto	l3076
  5145  0F8A                     u4370:
  5146  0F8A                     l3070:
  5147  0F8A  0860               	movf	___fladd@grs^(0+128),w
  5148  0F8B  397F               	andlw	127
  5149  0F8C  1903               	btfsc	3,2
  5150  0F8D  2F8F               	goto	u4381
  5151  0F8E  2F90               	goto	u4380
  5152  0F8F                     u4381:
  5153  0F8F  2F93               	goto	l692
  5154  0F90                     u4380:
  5155  0F90                     l3072:
  5156  0F90  01DE               	clrf	___fladd@aexp^(0+128)
  5157  0F91  0ADE               	incf	___fladd@aexp^(0+128),f
  5158  0F92  2F98               	goto	l3076
  5159  0F93                     l692:
  5160  0F93  1C4D               	btfss	___fladd@b^(0+128),0
  5161  0F94  2F96               	goto	u4391
  5162  0F95  2F97               	goto	u4390
  5163  0F96                     u4391:
  5164  0F96  2F98               	goto	l3076
  5165  0F97                     u4390:
  5166  0F97  2F90               	goto	l3072
  5167  0F98                     l3076:
  5168  0F98  085E               	movf	___fladd@aexp^(0+128),w
  5169  0F99  1903               	btfsc	3,2
  5170  0F9A  2F9C               	goto	u4401
  5171  0F9B  2F9D               	goto	u4400
  5172  0F9C                     u4401:
  5173  0F9C  2FD1               	goto	l695
  5174  0F9D                     u4400:
  5175  0F9D                     l3078:
  5176  0F9D  3001               	movlw	1
  5177  0F9E  07CD               	addwf	___fladd@b^(0+128),f
  5178  0F9F  3000               	movlw	0
  5179  0FA0  1803               	skipnc
  5180  0FA1  3001               	movlw	1
  5181  0FA2  07CE               	addwf	(___fladd@b+1)^(0+128),f
  5182  0FA3  3000               	movlw	0
  5183  0FA4  1803               	skipnc
  5184  0FA5  3001               	movlw	1
  5185  0FA6  07CF               	addwf	(___fladd@b+2)^(0+128),f
  5186  0FA7  3000               	movlw	0
  5187  0FA8  1803               	skipnc
  5188  0FA9  3001               	movlw	1
  5189  0FAA  07D0               	addwf	(___fladd@b+3)^(0+128),f
  5190  0FAB                     l3080:
  5191  0FAB  1C50               	btfss	(___fladd@b+3)^(0+128),0
  5192  0FAC  2FAE               	goto	u4411
  5193  0FAD  2FAF               	goto	u4410
  5194  0FAE                     u4411:
  5195  0FAE  2FD1               	goto	l695
  5196  0FAF                     u4410:
  5197  0FAF                     l3082:
  5198  0FAF  084D               	movf	___fladd@b^(0+128),w
  5199  0FB0  00D5               	movwf	??___fladd^(0+128)
  5200  0FB1  084E               	movf	(___fladd@b+1)^(0+128),w
  5201  0FB2  00D6               	movwf	(??___fladd^(0+128)+1)
  5202  0FB3  084F               	movf	(___fladd@b+2)^(0+128),w
  5203  0FB4  00D7               	movwf	(??___fladd^(0+128)+2)
  5204  0FB5  0850               	movf	(___fladd@b+3)^(0+128),w
  5205  0FB6  00D8               	movwf	(??___fladd^(0+128)+3)
  5206  0FB7  3001               	movlw	1
  5207  0FB8  00D9               	movwf	(??___fladd+4)^(0+128)
  5208  0FB9                     u4425:
  5209  0FB9  0D58               	rlf	(??___fladd^(0+128)+3),w
  5210  0FBA  0CD8               	rrf	(??___fladd^(0+128)+3),f
  5211  0FBB  0CD7               	rrf	(??___fladd^(0+128)+2),f
  5212  0FBC  0CD6               	rrf	(??___fladd^(0+128)+1),f
  5213  0FBD  0CD5               	rrf	??___fladd^(0+128),f
  5214  0FBE                     u4420:
  5215  0FBE  0BD9               	decfsz	(??___fladd+4)^(0+128),f
  5216  0FBF  2FB9               	goto	u4425
  5217  0FC0  0858               	movf	(??___fladd+3)^(0+128),w
  5218  0FC1  00D0               	movwf	(___fladd@b+3)^(0+128)
  5219  0FC2  0857               	movf	(??___fladd+2)^(0+128),w
  5220  0FC3  00CF               	movwf	(___fladd@b+2)^(0+128)
  5221  0FC4  0856               	movf	(??___fladd+1)^(0+128),w
  5222  0FC5  00CE               	movwf	(___fladd@b+1)^(0+128)
  5223  0FC6  0855               	movf	??___fladd^(0+128),w
  5224  0FC7  00CD               	movwf	___fladd@b^(0+128)
  5225  0FC8  0A5F               	incf	___fladd@bexp^(0+128),w
  5226  0FC9  1903               	btfsc	3,2
  5227  0FCA  2FCC               	goto	u4431
  5228  0FCB  2FCD               	goto	u4430
  5229  0FCC                     u4431:
  5230  0FCC  2FD1               	goto	l695
  5231  0FCD                     u4430:
  5232  0FCD                     l3084:
  5233  0FCD  3001               	movlw	1
  5234  0FCE  00D5               	movwf	??___fladd^(0+128)
  5235  0FCF  0855               	movf	??___fladd^(0+128),w
  5236  0FD0  07DF               	addwf	___fladd@bexp^(0+128),f
  5237  0FD1                     l695:
  5238  0FD1  0A5F               	incf	___fladd@bexp^(0+128),w
  5239  0FD2  1903               	btfsc	3,2
  5240  0FD3  2FD5               	goto	u4441
  5241  0FD4  2FD6               	goto	u4440
  5242  0FD5                     u4441:
  5243  0FD5  2FDB               	goto	l3088
  5244  0FD6                     u4440:
  5245  0FD6                     l3086:
  5246  0FD6  085F               	movf	___fladd@bexp^(0+128),w
  5247  0FD7  1D03               	btfss	3,2
  5248  0FD8  2FDA               	goto	u4451
  5249  0FD9  2FDB               	goto	u4450
  5250  0FDA                     u4451:
  5251  0FDA  2FE9               	goto	l3094
  5252  0FDB                     u4450:
  5253  0FDB                     l3088:
  5254  0FDB  3000               	movlw	0
  5255  0FDC  00D0               	movwf	(___fladd@b+3)^(0+128)
  5256  0FDD  3000               	movlw	0
  5257  0FDE  00CF               	movwf	(___fladd@b+2)^(0+128)
  5258  0FDF  3000               	movlw	0
  5259  0FE0  00CE               	movwf	(___fladd@b+1)^(0+128)
  5260  0FE1  3000               	movlw	0
  5261  0FE2  00CD               	movwf	___fladd@b^(0+128)
  5262  0FE3                     l3090:
  5263  0FE3  085F               	movf	___fladd@bexp^(0+128),w
  5264  0FE4  1D03               	btfss	3,2
  5265  0FE5  2FE7               	goto	u4461
  5266  0FE6  2FE8               	goto	u4460
  5267  0FE7                     u4461:
  5268  0FE7  2FE9               	goto	l3094
  5269  0FE8                     u4460:
  5270  0FE8                     l3092:
  5271  0FE8  01DD               	clrf	___fladd@signs^(0+128)
  5272  0FE9                     l3094:
  5273  0FE9  1C5F               	btfss	___fladd@bexp^(0+128),0
  5274  0FEA  2FEC               	goto	u4471
  5275  0FEB  2FED               	goto	u4470
  5276  0FEC                     u4471:
  5277  0FEC  2FEF               	goto	l3098
  5278  0FED                     u4470:
  5279  0FED                     l3096:
  5280  0FED  17CF               	bsf	(___fladd@b^(0+128)+2),7
  5281  0FEE  2FF3               	goto	l703
  5282  0FEF                     l3098:
  5283  0FEF  307F               	movlw	127
  5284  0FF0  00D5               	movwf	??___fladd^(0+128)
  5285  0FF1  0855               	movf	??___fladd^(0+128),w
  5286  0FF2  05CF               	andwf	(___fladd@b^(0+128)+2),f
  5287  0FF3                     l703:
  5288  0FF3  085F               	movf	___fladd@bexp^(0+128),w
  5289  0FF4  00D5               	movwf	??___fladd^(0+128)
  5290  0FF5  1003               	clrc
  5291  0FF6  0C55               	rrf	??___fladd^(0+128),w
  5292  0FF7  00D6               	movwf	(??___fladd+1)^(0+128)
  5293  0FF8  0856               	movf	(??___fladd+1)^(0+128),w
  5294  0FF9  00D0               	movwf	(___fladd@b^(0+128)+3)
  5295  0FFA                     l3100:
  5296  0FFA  1FDD               	btfss	___fladd@signs^(0+128),7
  5297  0FFB  2FFD               	goto	u4481
  5298  0FFC  2FFE               	goto	u4480
  5299  0FFD                     u4481:
  5300  0FFD  2FFF               	goto	l704
  5301  0FFE                     u4480:
  5302  0FFE                     l3102:
  5303  0FFE  17D0               	bsf	(___fladd@b^(0+128)+3),7
  5304  0FFF                     l704:
  5305  0FFF                     l674:
  5306  0FFF  0008               	return
  5307  1000                     __end_of___fladd:
  5308                           
  5309                           	psect	text16
  5310  116E                     __ptext16:	
  5311 ;; *************** function _LCD_putsc *****************
  5312 ;; Defined at:
  5313 ;;		line 160 in file "LCDdrive.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  s               1    wreg     PTR const unsigned char 
  5316 ;;		 -> STR_8(8), STR_1(4), 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  s               1   15[BANK1 ] PTR const unsigned char 
  5319 ;;		 -> STR_8(8), STR_1(4), 
  5320 ;;  c               1   17[BANK1 ] unsigned char 
  5321 ;;  i               1   16[BANK1 ] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5331 ;;      Params:         0       0       0       0       0
  5332 ;;      Locals:         0       0       3       0       0
  5333 ;;      Temps:          0       0       1       0       0
  5334 ;;      Totals:         0       0       4       0       0
  5335 ;;Total ram usage:        4 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 5
  5338 ;; This function calls:
  5339 ;;		_LCD_putch
  5340 ;; This function is called by:
  5341 ;;		_set_temp
  5342 ;;		_LCD_display_float
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _LCD_putsc
  5348  116E                     _LCD_putsc:
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _LCD_putsc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5352                           ;LCD_putsc@s stored from wreg
  5353  116E  1683               	bsf	3,5	;RP0=1, select bank1
  5354  116F  1303               	bcf	3,6	;RP1=0, select bank1
  5355  1170  00AF               	movwf	LCD_putsc@s^(0+128)
  5356  1171                     l2784:
  5357                           
  5358                           ;LCDdrive.c: 160: void LCD_putsc(const unsigned char *s);LCDdrive.c: 161: {;LCDdrive.c: 
      +                          162:         unsigned char c = 255;
  5359  1171  30FF               	movlw	255
  5360  1172  00AE               	movwf	??_LCD_putsc^(0+128)
  5361  1173  082E               	movf	??_LCD_putsc^(0+128),w
  5362  1174  00B1               	movwf	LCD_putsc@c^(0+128)
  5363  1175                     l2786:
  5364                           
  5365                           ;LCDdrive.c: 163:         unsigned char i = 0;
  5366  1175  01B0               	clrf	LCD_putsc@i^(0+128)
  5367                           
  5368                           ;LCDdrive.c: 164:         while ((c > 0) && (i < 16))
  5369  1176  2993               	goto	l2796
  5370  1177                     l2788:
  5371                           
  5372                           ;LCDdrive.c: 165:         {;LCDdrive.c: 166:           c = s[i];
  5373  1177  0830               	movf	LCD_putsc@i^(0+128),w
  5374  1178  072F               	addwf	LCD_putsc@s^(0+128),w
  5375  1179  0084               	movwf	4
  5376  117A  160A  118A  200A  160A  118A  	fcall	stringdir
  5377  117F  00AE               	movwf	??_LCD_putsc^(0+128)
  5378  1180  082E               	movf	??_LCD_putsc^(0+128),w
  5379  1181  00B1               	movwf	LCD_putsc@c^(0+128)
  5380  1182                     l2790:
  5381                           
  5382                           ;LCDdrive.c: 167:           if (c != 0) LCD_putch(c);
  5383  1182  0831               	movf	LCD_putsc@c^(0+128),w
  5384  1183  1903               	btfsc	3,2
  5385  1184  2986               	goto	u3801
  5386  1185  2987               	goto	u3800
  5387  1186                     u3801:
  5388  1186  298D               	goto	l2794
  5389  1187                     u3800:
  5390  1187                     l2792:
  5391  1187  0831               	movf	LCD_putsc@c^(0+128),w
  5392  1188  160A  118A  2053  160A  118A  	fcall	_LCD_putch
  5393  118D                     l2794:
  5394                           
  5395                           ;LCDdrive.c: 168:           i++;
  5396  118D  3001               	movlw	1
  5397  118E  1683               	bsf	3,5	;RP0=1, select bank1
  5398  118F  1303               	bcf	3,6	;RP1=0, select bank1
  5399  1190  00AE               	movwf	??_LCD_putsc^(0+128)
  5400  1191  082E               	movf	??_LCD_putsc^(0+128),w
  5401  1192  07B0               	addwf	LCD_putsc@i^(0+128),f
  5402  1193                     l2796:
  5403                           
  5404                           ;LCDdrive.c: 164:         while ((c > 0) && (i < 16))
  5405  1193  0831               	movf	LCD_putsc@c^(0+128),w
  5406  1194  1903               	btfsc	3,2
  5407  1195  2997               	goto	u3811
  5408  1196  2998               	goto	u3810
  5409  1197                     u3811:
  5410  1197  299E               	goto	l76
  5411  1198                     u3810:
  5412  1198                     l2798:
  5413  1198  3010               	movlw	16
  5414  1199  0230               	subwf	LCD_putsc@i^(0+128),w
  5415  119A  1C03               	skipc
  5416  119B  299D               	goto	u3821
  5417  119C  299E               	goto	u3820
  5418  119D                     u3821:
  5419  119D  2977               	goto	l2788
  5420  119E                     u3820:
  5421  119E                     l76:
  5422  119E  0008               	return
  5423  119F                     __end_of_LCD_putsc:
  5424                           
  5425                           	psect	text17
  5426  1072                     __ptext17:	
  5427 ;; *************** function _LCD_display_value *****************
  5428 ;; Defined at:
  5429 ;;		line 198 in file "LCDdrive.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  value           4   35[BANK1 ] long 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  buffer         12   39[BANK1 ] unsigned char [12]
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5443 ;;      Params:         0       0       4       0       0
  5444 ;;      Locals:         0       0      12       0       0
  5445 ;;      Temps:          0       0       0       0       0
  5446 ;;      Totals:         0       0      16       0       0
  5447 ;;Total ram usage:       16 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; Hardware stack levels required when called: 6
  5450 ;; This function calls:
  5451 ;;		_LCD_puts
  5452 ;;		_ltoa
  5453 ;; This function is called by:
  5454 ;;		_updateClock
  5455 ;;		_set_temp
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           
  5460                           ;psect for function _LCD_display_value
  5461  1072                     _LCD_display_value:
  5462  1072                     l2676:	
  5463                           ;incstack = 0
  5464 ;; hardware stack exceeded
  5465                           ; Regs used in _LCD_display_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5466                           
  5467                           
  5468                           ;LCDdrive.c: 198: void LCD_display_value (long value);LCDdrive.c: 199: {;LCDdrive.c: 200
      +                          :     char buffer[12];;LCDdrive.c: 202:     ltoa(buffer, value, 10);
  5469  1072  1683               	bsf	3,5	;RP0=1, select bank1
  5470  1073  1303               	bcf	3,6	;RP1=0, select bank1
  5471  1074  0846               	movf	(LCD_display_value@value+3)^(0+128),w
  5472  1075  00BE               	movwf	(ltoa@val+3)^(0+128)
  5473  1076  0845               	movf	(LCD_display_value@value+2)^(0+128),w
  5474  1077  00BD               	movwf	(ltoa@val+2)^(0+128)
  5475  1078  0844               	movf	(LCD_display_value@value+1)^(0+128),w
  5476  1079  00BC               	movwf	(ltoa@val+1)^(0+128)
  5477  107A  0843               	movf	LCD_display_value@value^(0+128),w
  5478  107B  00BB               	movwf	ltoa@val^(0+128)
  5479  107C  300A               	movlw	10
  5480  107D  00BF               	movwf	ltoa@base^(0+128)
  5481  107E  3000               	movlw	0
  5482  107F  00C0               	movwf	(ltoa@base^(0+128)+1)
  5483  1080  30C7               	movlw	(low (LCD_display_value@buffer| 0))& (0+255)
  5484  1081  160A  118A  210D  160A  118A  	fcall	_ltoa
  5485  1086                     l2678:
  5486                           
  5487                           ;LCDdrive.c: 203:     LCD_puts(buffer);
  5488  1086  30C7               	movlw	(low (LCD_display_value@buffer| 0))& (0+255)
  5489  1087  1683               	bsf	3,5	;RP0=1, select bank1
  5490  1088  1303               	bcf	3,6	;RP1=0, select bank1
  5491  1089  00AE               	movwf	LCD_puts@s^(0+128)
  5492  108A  3000               	movlw	0
  5493  108B  00AF               	movwf	(LCD_puts@s+1)^(0+128)
  5494  108C  160A  118A  21D6  160A  118A  	fcall	_LCD_puts
  5495  1091                     l90:
  5496  1091  0008               	return
  5497  1092                     __end_of_LCD_display_value:
  5498                           
  5499                           	psect	text18
  5500  110D                     __ptext18:	
  5501 ;; *************** function _ltoa *****************
  5502 ;; Defined at:
  5503 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ltoa.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  buf             1    wreg     PTR unsigned char 
  5506 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  5507 ;;  val             4   27[BANK1 ] long 
  5508 ;;  base            2   31[BANK1 ] int 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  buf             1   34[BANK1 ] PTR unsigned char 
  5511 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  5512 ;;  cp              1    0        PTR unsigned char 
  5513 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      PTR unsigned char 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5523 ;;      Params:         0       0       6       0       0
  5524 ;;      Locals:         0       0       1       0       0
  5525 ;;      Temps:          0       0       1       0       0
  5526 ;;      Totals:         0       0       8       0       0
  5527 ;;Total ram usage:        8 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; Hardware stack levels required when called: 5
  5530 ;; This function calls:
  5531 ;;		_ultoa
  5532 ;; This function is called by:
  5533 ;;		_LCD_display_value
  5534 ;;		_LCD_display_float
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function _ltoa
  5540  110D                     _ltoa:
  5541                           
  5542                           ;incstack = 0
  5543 ;; hardware stack exceeded
  5544                           ; Regs used in _ltoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5545                           ;ltoa@buf stored from wreg
  5546  110D  1683               	bsf	3,5	;RP0=1, select bank1
  5547  110E  1303               	bcf	3,6	;RP1=0, select bank1
  5548  110F  00C2               	movwf	ltoa@buf^(0+128)
  5549  1110                     l2634:
  5550  1110                     l2636:
  5551  1110  1FBE               	btfss	(ltoa@val+3)^(0+128),7
  5552  1111  2913               	goto	u3591
  5553  1112  2914               	goto	u3590
  5554  1113                     u3591:
  5555  1113  292A               	goto	l2644
  5556  1114                     u3590:
  5557  1114                     l2638:
  5558  1114  302D               	movlw	45
  5559  1115  00C1               	movwf	??_ltoa^(0+128)
  5560  1116  0842               	movf	ltoa@buf^(0+128),w
  5561  1117  0084               	movwf	4
  5562  1118  0841               	movf	??_ltoa^(0+128),w
  5563  1119  1383               	bcf	3,7	;select IRP bank0
  5564  111A  0080               	movwf	0
  5565  111B                     l2640:
  5566  111B  3001               	movlw	1
  5567  111C  00C1               	movwf	??_ltoa^(0+128)
  5568  111D  0841               	movf	??_ltoa^(0+128),w
  5569  111E  07C2               	addwf	ltoa@buf^(0+128),f
  5570  111F                     l2642:
  5571  111F  09BB               	comf	ltoa@val^(0+128),f
  5572  1120  09BC               	comf	(ltoa@val+1)^(0+128),f
  5573  1121  09BD               	comf	(ltoa@val+2)^(0+128),f
  5574  1122  09BE               	comf	(ltoa@val+3)^(0+128),f
  5575  1123  0ABB               	incf	ltoa@val^(0+128),f
  5576  1124  1903               	skipnz
  5577  1125  0ABC               	incf	(ltoa@val+1)^(0+128),f
  5578  1126  1903               	skipnz
  5579  1127  0ABD               	incf	(ltoa@val+2)^(0+128),f
  5580  1128  1903               	skipnz
  5581  1129  0ABE               	incf	(ltoa@val+3)^(0+128),f
  5582  112A                     l2644:
  5583  112A  083E               	movf	(ltoa@val+3)^(0+128),w
  5584  112B  00B1               	movwf	(ultoa@val+3)^(0+128)
  5585  112C  083D               	movf	(ltoa@val+2)^(0+128),w
  5586  112D  00B0               	movwf	(ultoa@val+2)^(0+128)
  5587  112E  083C               	movf	(ltoa@val+1)^(0+128),w
  5588  112F  00AF               	movwf	(ultoa@val+1)^(0+128)
  5589  1130  083B               	movf	ltoa@val^(0+128),w
  5590  1131  00AE               	movwf	ultoa@val^(0+128)
  5591  1132  0840               	movf	(ltoa@base+1)^(0+128),w
  5592  1133  00B3               	movwf	(ultoa@base+1)^(0+128)
  5593  1134  083F               	movf	ltoa@base^(0+128),w
  5594  1135  00B2               	movwf	ultoa@base^(0+128)
  5595  1136  0842               	movf	ltoa@buf^(0+128),w
  5596  1137  160A  118A  2566  160A  118A  	fcall	_ultoa
  5597  113C                     l822:
  5598  113C  0008               	return
  5599  113D                     __end_of_ltoa:
  5600                           
  5601                           	psect	text19
  5602  1566                     __ptext19:	
  5603 ;; *************** function _ultoa *****************
  5604 ;; Defined at:
  5605 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ltoa.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  buf             1    wreg     PTR unsigned char 
  5608 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  5609 ;;  val             4   14[BANK1 ] unsigned long 
  5610 ;;  base            2   18[BANK1 ] int 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  buf             1   26[BANK1 ] PTR unsigned char 
  5613 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  5614 ;;  v               4   21[BANK1 ] unsigned long 
  5615 ;;  c               1   25[BANK1 ] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      PTR unsigned char 
  5618 ;; Registers used:
  5619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5625 ;;      Params:         0       0       6       0       0
  5626 ;;      Locals:         0       0       6       0       0
  5627 ;;      Temps:          0       0       1       0       0
  5628 ;;      Totals:         0       0      13       0       0
  5629 ;;Total ram usage:       13 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 4
  5632 ;; This function calls:
  5633 ;;		___lldiv
  5634 ;;		___llmod
  5635 ;; This function is called by:
  5636 ;;		_ltoa
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _ultoa
  5642  1566                     _ultoa:
  5643                           
  5644                           ;incstack = 0
  5645 ;; hardware stack exceeded
  5646                           ; Regs used in _ultoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5647                           ;ultoa@buf stored from wreg
  5648  1566  1683               	bsf	3,5	;RP0=1, select bank1
  5649  1567  1303               	bcf	3,6	;RP1=0, select bank1
  5650  1568  00BA               	movwf	ultoa@buf^(0+128)
  5651  1569                     l2592:
  5652  1569  0831               	movf	(ultoa@val+3)^(0+128),w
  5653  156A  00B8               	movwf	(ultoa@v+3)^(0+128)
  5654  156B  0830               	movf	(ultoa@val+2)^(0+128),w
  5655  156C  00B7               	movwf	(ultoa@v+2)^(0+128)
  5656  156D  082F               	movf	(ultoa@val+1)^(0+128),w
  5657  156E  00B6               	movwf	(ultoa@v+1)^(0+128)
  5658  156F  082E               	movf	ultoa@val^(0+128),w
  5659  1570  00B5               	movwf	ultoa@v^(0+128)
  5660  1571                     l2594:
  5661  1571  0832               	movf	ultoa@base^(0+128),w
  5662  1572  00A0               	movwf	___lldiv@divisor^(0+128)
  5663  1573  0833               	movf	(ultoa@base+1)^(0+128),w
  5664  1574  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  5665  1575  3000               	movlw	0
  5666  1576  1BA1               	btfsc	(___lldiv@divisor+1)^(0+128),7
  5667  1577  30FF               	movlw	255
  5668  1578  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  5669  1579  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  5670  157A  0838               	movf	(ultoa@v+3)^(0+128),w
  5671  157B  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  5672  157C  0837               	movf	(ultoa@v+2)^(0+128),w
  5673  157D  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  5674  157E  0836               	movf	(ultoa@v+1)^(0+128),w
  5675  157F  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  5676  1580  0835               	movf	ultoa@v^(0+128),w
  5677  1581  00A4               	movwf	___lldiv@dividend^(0+128)
  5678  1582  160A  118A  23F8  160A  118A  	fcall	___lldiv
  5679  1587  1683               	bsf	3,5	;RP0=1, select bank1
  5680  1588  1303               	bcf	3,6	;RP1=0, select bank1
  5681  1589  0823               	movf	(?___lldiv+3)^(0+128),w
  5682  158A  00B8               	movwf	(ultoa@v+3)^(0+128)
  5683  158B  0822               	movf	(?___lldiv+2)^(0+128),w
  5684  158C  00B7               	movwf	(ultoa@v+2)^(0+128)
  5685  158D  0821               	movf	(?___lldiv+1)^(0+128),w
  5686  158E  00B6               	movwf	(ultoa@v+1)^(0+128)
  5687  158F  0820               	movf	?___lldiv^(0+128),w
  5688  1590  00B5               	movwf	ultoa@v^(0+128)
  5689  1591                     l2596:
  5690  1591  3001               	movlw	1
  5691  1592  00B4               	movwf	??_ultoa^(0+128)
  5692  1593  0834               	movf	??_ultoa^(0+128),w
  5693  1594  07BA               	addwf	ultoa@buf^(0+128),f
  5694  1595                     l2598:
  5695  1595  0838               	movf	(ultoa@v+3)^(0+128),w
  5696  1596  0437               	iorwf	(ultoa@v+2)^(0+128),w
  5697  1597  0436               	iorwf	(ultoa@v+1)^(0+128),w
  5698  1598  0435               	iorwf	ultoa@v^(0+128),w
  5699  1599  1D03               	skipz
  5700  159A  2D9C               	goto	u3531
  5701  159B  2D9D               	goto	u3530
  5702  159C                     u3531:
  5703  159C  2D71               	goto	l2594
  5704  159D                     u3530:
  5705  159D                     l2600:
  5706  159D  083A               	movf	ultoa@buf^(0+128),w
  5707  159E  0084               	movwf	4
  5708  159F  1383               	bcf	3,7	;select IRP bank0
  5709  15A0  0180               	clrf	0
  5710  15A1                     l2602:
  5711  15A1  3001               	movlw	1
  5712  15A2  02BA               	subwf	ultoa@buf^(0+128),f
  5713  15A3                     l2604:
  5714  15A3  0832               	movf	ultoa@base^(0+128),w
  5715  15A4  00A0               	movwf	___llmod@divisor^(0+128)
  5716  15A5  0833               	movf	(ultoa@base+1)^(0+128),w
  5717  15A6  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  5718  15A7  3000               	movlw	0
  5719  15A8  1BA1               	btfsc	(___llmod@divisor+1)^(0+128),7
  5720  15A9  30FF               	movlw	255
  5721  15AA  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  5722  15AB  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  5723  15AC  0831               	movf	(ultoa@val+3)^(0+128),w
  5724  15AD  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  5725  15AE  0830               	movf	(ultoa@val+2)^(0+128),w
  5726  15AF  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  5727  15B0  082F               	movf	(ultoa@val+1)^(0+128),w
  5728  15B1  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  5729  15B2  082E               	movf	ultoa@val^(0+128),w
  5730  15B3  00A4               	movwf	___llmod@dividend^(0+128)
  5731  15B4  160A  118A  22E3  160A  118A  	fcall	___llmod
  5732  15B9  1683               	bsf	3,5	;RP0=1, select bank1
  5733  15BA  1303               	bcf	3,6	;RP1=0, select bank1
  5734  15BB  0820               	movf	?___llmod^(0+128),w
  5735  15BC  00B4               	movwf	??_ultoa^(0+128)
  5736  15BD  0834               	movf	??_ultoa^(0+128),w
  5737  15BE  00B9               	movwf	ultoa@c^(0+128)
  5738  15BF                     l2606:
  5739  15BF  0832               	movf	ultoa@base^(0+128),w
  5740  15C0  00A0               	movwf	___lldiv@divisor^(0+128)
  5741  15C1  0833               	movf	(ultoa@base+1)^(0+128),w
  5742  15C2  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  5743  15C3  3000               	movlw	0
  5744  15C4  1BA1               	btfsc	(___lldiv@divisor+1)^(0+128),7
  5745  15C5  30FF               	movlw	255
  5746  15C6  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  5747  15C7  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  5748  15C8  0831               	movf	(ultoa@val+3)^(0+128),w
  5749  15C9  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  5750  15CA  0830               	movf	(ultoa@val+2)^(0+128),w
  5751  15CB  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  5752  15CC  082F               	movf	(ultoa@val+1)^(0+128),w
  5753  15CD  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  5754  15CE  082E               	movf	ultoa@val^(0+128),w
  5755  15CF  00A4               	movwf	___lldiv@dividend^(0+128)
  5756  15D0  160A  118A  23F8  160A  118A  	fcall	___lldiv
  5757  15D5  1683               	bsf	3,5	;RP0=1, select bank1
  5758  15D6  1303               	bcf	3,6	;RP1=0, select bank1
  5759  15D7  0823               	movf	(?___lldiv+3)^(0+128),w
  5760  15D8  00B1               	movwf	(ultoa@val+3)^(0+128)
  5761  15D9  0822               	movf	(?___lldiv+2)^(0+128),w
  5762  15DA  00B0               	movwf	(ultoa@val+2)^(0+128)
  5763  15DB  0821               	movf	(?___lldiv+1)^(0+128),w
  5764  15DC  00AF               	movwf	(ultoa@val+1)^(0+128)
  5765  15DD  0820               	movf	?___lldiv^(0+128),w
  5766  15DE  00AE               	movwf	ultoa@val^(0+128)
  5767  15DF                     l2608:
  5768  15DF  300A               	movlw	10
  5769  15E0  0239               	subwf	ultoa@c^(0+128),w
  5770  15E1  1C03               	skipc
  5771  15E2  2DE4               	goto	u3541
  5772  15E3  2DE5               	goto	u3540
  5773  15E4                     u3541:
  5774  15E4  2DE9               	goto	l828
  5775  15E5                     u3540:
  5776  15E5                     l2610:
  5777  15E5  3007               	movlw	7
  5778  15E6  00B4               	movwf	??_ultoa^(0+128)
  5779  15E7  0834               	movf	??_ultoa^(0+128),w
  5780  15E8  07B9               	addwf	ultoa@c^(0+128),f
  5781  15E9                     l828:
  5782  15E9  3030               	movlw	48
  5783  15EA  00B4               	movwf	??_ultoa^(0+128)
  5784  15EB  0834               	movf	??_ultoa^(0+128),w
  5785  15EC  07B9               	addwf	ultoa@c^(0+128),f
  5786  15ED                     l2612:
  5787  15ED  0839               	movf	ultoa@c^(0+128),w
  5788  15EE  00B4               	movwf	??_ultoa^(0+128)
  5789  15EF  083A               	movf	ultoa@buf^(0+128),w
  5790  15F0  0084               	movwf	4
  5791  15F1  0834               	movf	??_ultoa^(0+128),w
  5792  15F2  1383               	bcf	3,7	;select IRP bank0
  5793  15F3  0080               	movwf	0
  5794  15F4                     l2614:
  5795  15F4  3001               	movlw	1
  5796  15F5  02BA               	subwf	ultoa@buf^(0+128),f
  5797  15F6                     l2616:
  5798  15F6  0831               	movf	(ultoa@val+3)^(0+128),w
  5799  15F7  0430               	iorwf	(ultoa@val+2)^(0+128),w
  5800  15F8  042F               	iorwf	(ultoa@val+1)^(0+128),w
  5801  15F9  042E               	iorwf	ultoa@val^(0+128),w
  5802  15FA  1D03               	skipz
  5803  15FB  2DFD               	goto	u3551
  5804  15FC  2DFE               	goto	u3550
  5805  15FD                     u3551:
  5806  15FD  2DA3               	goto	l2604
  5807  15FE                     u3550:
  5808  15FE                     l830:
  5809  15FE  0008               	return
  5810  15FF                     __end_of_ultoa:
  5811                           
  5812                           	psect	text20
  5813  12E3                     __ptext20:	
  5814 ;; *************** function ___llmod *****************
  5815 ;; Defined at:
  5816 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  divisor         4    0[BANK1 ] unsigned long 
  5819 ;;  dividend        4    4[BANK1 ] unsigned long 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  counter         1    9[BANK1 ] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  4    0[BANK1 ] unsigned long 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       0       8       0       0
  5832 ;;      Locals:         0       0       1       0       0
  5833 ;;      Temps:          0       0       1       0       0
  5834 ;;      Totals:         0       0      10       0       0
  5835 ;;Total ram usage:       10 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 3
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_ultoa
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function ___llmod
  5847  12E3                     ___llmod:
  5848  12E3                     l2562:	
  5849                           ;incstack = 0
  5850 ;; hardware stack exceeded
  5851                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5852                           
  5853  12E3  1683               	bsf	3,5	;RP0=1, select bank1
  5854  12E4  1303               	bcf	3,6	;RP1=0, select bank1
  5855  12E5  0823               	movf	(___llmod@divisor+3)^(0+128),w
  5856  12E6  0422               	iorwf	(___llmod@divisor+2)^(0+128),w
  5857  12E7  0421               	iorwf	(___llmod@divisor+1)^(0+128),w
  5858  12E8  0420               	iorwf	___llmod@divisor^(0+128),w
  5859  12E9  1903               	skipnz
  5860  12EA  2AEC               	goto	u3461
  5861  12EB  2AED               	goto	u3460
  5862  12EC                     u3461:
  5863  12EC  2B30               	goto	l2578
  5864  12ED                     u3460:
  5865  12ED                     l2564:
  5866  12ED  01A9               	clrf	___llmod@counter^(0+128)
  5867  12EE  0AA9               	incf	___llmod@counter^(0+128),f
  5868  12EF  2AFD               	goto	l2568
  5869  12F0                     l2566:
  5870  12F0  3001               	movlw	1
  5871  12F1  00A8               	movwf	??___llmod^(0+128)
  5872  12F2                     u3475:
  5873  12F2  1003               	clrc
  5874  12F3  0DA0               	rlf	___llmod@divisor^(0+128),f
  5875  12F4  0DA1               	rlf	(___llmod@divisor+1)^(0+128),f
  5876  12F5  0DA2               	rlf	(___llmod@divisor+2)^(0+128),f
  5877  12F6  0DA3               	rlf	(___llmod@divisor+3)^(0+128),f
  5878  12F7  0BA8               	decfsz	??___llmod^(0+128),f
  5879  12F8  2AF2               	goto	u3475
  5880  12F9  3001               	movlw	1
  5881  12FA  00A8               	movwf	??___llmod^(0+128)
  5882  12FB  0828               	movf	??___llmod^(0+128),w
  5883  12FC  07A9               	addwf	___llmod@counter^(0+128),f
  5884  12FD                     l2568:
  5885  12FD  1FA3               	btfss	(___llmod@divisor+3)^(0+128),7
  5886  12FE  2B00               	goto	u3481
  5887  12FF  2B01               	goto	u3480
  5888  1300                     u3481:
  5889  1300  2AF0               	goto	l2566
  5890  1301                     u3480:
  5891  1301                     l2570:
  5892  1301  0823               	movf	(___llmod@divisor+3)^(0+128),w
  5893  1302  0227               	subwf	(___llmod@dividend+3)^(0+128),w
  5894  1303  1D03               	skipz
  5895  1304  2B0F               	goto	u3495
  5896  1305  0822               	movf	(___llmod@divisor+2)^(0+128),w
  5897  1306  0226               	subwf	(___llmod@dividend+2)^(0+128),w
  5898  1307  1D03               	skipz
  5899  1308  2B0F               	goto	u3495
  5900  1309  0821               	movf	(___llmod@divisor+1)^(0+128),w
  5901  130A  0225               	subwf	(___llmod@dividend+1)^(0+128),w
  5902  130B  1D03               	skipz
  5903  130C  2B0F               	goto	u3495
  5904  130D  0820               	movf	___llmod@divisor^(0+128),w
  5905  130E  0224               	subwf	___llmod@dividend^(0+128),w
  5906  130F                     u3495:
  5907  130F  1C03               	skipc
  5908  1310  2B12               	goto	u3491
  5909  1311  2B13               	goto	u3490
  5910  1312                     u3491:
  5911  1312  2B21               	goto	l2574
  5912  1313                     u3490:
  5913  1313                     l2572:
  5914  1313  0820               	movf	___llmod@divisor^(0+128),w
  5915  1314  02A4               	subwf	___llmod@dividend^(0+128),f
  5916  1315  0821               	movf	(___llmod@divisor+1)^(0+128),w
  5917  1316  1C03               	skipc
  5918  1317  0F21               	incfsz	(___llmod@divisor+1)^(0+128),w
  5919  1318  02A5               	subwf	(___llmod@dividend+1)^(0+128),f
  5920  1319  0822               	movf	(___llmod@divisor+2)^(0+128),w
  5921  131A  1C03               	skipc
  5922  131B  0F22               	incfsz	(___llmod@divisor+2)^(0+128),w
  5923  131C  02A6               	subwf	(___llmod@dividend+2)^(0+128),f
  5924  131D  0823               	movf	(___llmod@divisor+3)^(0+128),w
  5925  131E  1C03               	skipc
  5926  131F  0F23               	incfsz	(___llmod@divisor+3)^(0+128),w
  5927  1320  02A7               	subwf	(___llmod@dividend+3)^(0+128),f
  5928  1321                     l2574:
  5929  1321  3001               	movlw	1
  5930  1322                     u3505:
  5931  1322  1003               	clrc
  5932  1323  0CA3               	rrf	(___llmod@divisor+3)^(0+128),f
  5933  1324  0CA2               	rrf	(___llmod@divisor+2)^(0+128),f
  5934  1325  0CA1               	rrf	(___llmod@divisor+1)^(0+128),f
  5935  1326  0CA0               	rrf	___llmod@divisor^(0+128),f
  5936  1327  3EFF               	addlw	-1
  5937  1328  1D03               	skipz
  5938  1329  2B22               	goto	u3505
  5939  132A                     l2576:
  5940  132A  3001               	movlw	1
  5941  132B  02A9               	subwf	___llmod@counter^(0+128),f
  5942  132C  1D03               	btfss	3,2
  5943  132D  2B2F               	goto	u3511
  5944  132E  2B30               	goto	u3510
  5945  132F                     u3511:
  5946  132F  2B01               	goto	l2570
  5947  1330                     u3510:
  5948  1330                     l2578:
  5949  1330  0827               	movf	(___llmod@dividend+3)^(0+128),w
  5950  1331  00A3               	movwf	(?___llmod+3)^(0+128)
  5951  1332  0826               	movf	(___llmod@dividend+2)^(0+128),w
  5952  1333  00A2               	movwf	(?___llmod+2)^(0+128)
  5953  1334  0825               	movf	(___llmod@dividend+1)^(0+128),w
  5954  1335  00A1               	movwf	(?___llmod+1)^(0+128)
  5955  1336  0824               	movf	___llmod@dividend^(0+128),w
  5956  1337  00A0               	movwf	?___llmod^(0+128)
  5957  1338                     l590:
  5958  1338  0008               	return
  5959  1339                     __end_of___llmod:
  5960                           
  5961                           	psect	text21
  5962  13F8                     __ptext21:	
  5963 ;; *************** function ___lldiv *****************
  5964 ;; Defined at:
  5965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  divisor         4    0[BANK1 ] unsigned long 
  5968 ;;  dividend        4    4[BANK1 ] unsigned long 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  quotient        4    9[BANK1 ] unsigned long 
  5971 ;;  counter         1   13[BANK1 ] unsigned char 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  4    0[BANK1 ] unsigned long 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5981 ;;      Params:         0       0       8       0       0
  5982 ;;      Locals:         0       0       5       0       0
  5983 ;;      Temps:          0       0       1       0       0
  5984 ;;      Totals:         0       0      14       0       0
  5985 ;;Total ram usage:       14 bytes
  5986 ;; Hardware stack levels used: 1
  5987 ;; Hardware stack levels required when called: 3
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_ultoa
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function ___lldiv
  5997  13F8                     ___lldiv:
  5998  13F8                     l2538:	
  5999                           ;incstack = 0
  6000 ;; hardware stack exceeded
  6001                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6002                           
  6003  13F8  3000               	movlw	0
  6004  13F9  1683               	bsf	3,5	;RP0=1, select bank1
  6005  13FA  1303               	bcf	3,6	;RP1=0, select bank1
  6006  13FB  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  6007  13FC  3000               	movlw	0
  6008  13FD  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  6009  13FE  3000               	movlw	0
  6010  13FF  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  6011  1400  3000               	movlw	0
  6012  1401  00A9               	movwf	___lldiv@quotient^(0+128)
  6013  1402  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  6014  1403  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  6015  1404  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  6016  1405  0420               	iorwf	___lldiv@divisor^(0+128),w
  6017  1406  1903               	skipnz
  6018  1407  2C09               	goto	u3391
  6019  1408  2C0A               	goto	u3390
  6020  1409                     u3391:
  6021  1409  2C57               	goto	l2558
  6022  140A                     u3390:
  6023  140A                     l2540:
  6024  140A  01AD               	clrf	___lldiv@counter^(0+128)
  6025  140B  0AAD               	incf	___lldiv@counter^(0+128),f
  6026  140C  2C1A               	goto	l2544
  6027  140D                     l2542:
  6028  140D  3001               	movlw	1
  6029  140E  00A8               	movwf	??___lldiv^(0+128)
  6030  140F                     u3405:
  6031  140F  1003               	clrc
  6032  1410  0DA0               	rlf	___lldiv@divisor^(0+128),f
  6033  1411  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  6034  1412  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  6035  1413  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  6036  1414  0BA8               	decfsz	??___lldiv^(0+128),f
  6037  1415  2C0F               	goto	u3405
  6038  1416  3001               	movlw	1
  6039  1417  00A8               	movwf	??___lldiv^(0+128)
  6040  1418  0828               	movf	??___lldiv^(0+128),w
  6041  1419  07AD               	addwf	___lldiv@counter^(0+128),f
  6042  141A                     l2544:
  6043  141A  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  6044  141B  2C1D               	goto	u3411
  6045  141C  2C1E               	goto	u3410
  6046  141D                     u3411:
  6047  141D  2C0D               	goto	l2542
  6048  141E                     u3410:
  6049  141E                     l2546:
  6050  141E  3001               	movlw	1
  6051  141F  00A8               	movwf	??___lldiv^(0+128)
  6052  1420                     u3425:
  6053  1420  1003               	clrc
  6054  1421  0DA9               	rlf	___lldiv@quotient^(0+128),f
  6055  1422  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  6056  1423  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  6057  1424  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  6058  1425  0BA8               	decfsz	??___lldiv^(0+128),f
  6059  1426  2C20               	goto	u3425
  6060  1427                     l2548:
  6061  1427  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  6062  1428  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  6063  1429  1D03               	skipz
  6064  142A  2C35               	goto	u3435
  6065  142B  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  6066  142C  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  6067  142D  1D03               	skipz
  6068  142E  2C35               	goto	u3435
  6069  142F  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  6070  1430  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  6071  1431  1D03               	skipz
  6072  1432  2C35               	goto	u3435
  6073  1433  0820               	movf	___lldiv@divisor^(0+128),w
  6074  1434  0224               	subwf	___lldiv@dividend^(0+128),w
  6075  1435                     u3435:
  6076  1435  1C03               	skipc
  6077  1436  2C38               	goto	u3431
  6078  1437  2C39               	goto	u3430
  6079  1438                     u3431:
  6080  1438  2C48               	goto	l2554
  6081  1439                     u3430:
  6082  1439                     l2550:
  6083  1439  0820               	movf	___lldiv@divisor^(0+128),w
  6084  143A  02A4               	subwf	___lldiv@dividend^(0+128),f
  6085  143B  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  6086  143C  1C03               	skipc
  6087  143D  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  6088  143E  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  6089  143F  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  6090  1440  1C03               	skipc
  6091  1441  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  6092  1442  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  6093  1443  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  6094  1444  1C03               	skipc
  6095  1445  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  6096  1446  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  6097  1447                     l2552:
  6098  1447  1429               	bsf	___lldiv@quotient^(0+128),0
  6099  1448                     l2554:
  6100  1448  3001               	movlw	1
  6101  1449                     u3445:
  6102  1449  1003               	clrc
  6103  144A  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  6104  144B  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  6105  144C  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  6106  144D  0CA0               	rrf	___lldiv@divisor^(0+128),f
  6107  144E  3EFF               	addlw	-1
  6108  144F  1D03               	skipz
  6109  1450  2C49               	goto	u3445
  6110  1451                     l2556:
  6111  1451  3001               	movlw	1
  6112  1452  02AD               	subwf	___lldiv@counter^(0+128),f
  6113  1453  1D03               	btfss	3,2
  6114  1454  2C56               	goto	u3451
  6115  1455  2C57               	goto	u3450
  6116  1456                     u3451:
  6117  1456  2C1E               	goto	l2546
  6118  1457                     u3450:
  6119  1457                     l2558:
  6120  1457  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  6121  1458  00A3               	movwf	(?___lldiv+3)^(0+128)
  6122  1459  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  6123  145A  00A2               	movwf	(?___lldiv+2)^(0+128)
  6124  145B  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  6125  145C  00A1               	movwf	(?___lldiv+1)^(0+128)
  6126  145D  0829               	movf	___lldiv@quotient^(0+128),w
  6127  145E  00A0               	movwf	?___lldiv^(0+128)
  6128  145F                     l404:
  6129  145F  0008               	return
  6130  1460                     __end_of___lldiv:
  6131                           
  6132                           	psect	text22
  6133  11D6                     __ptext22:	
  6134 ;; *************** function _LCD_puts *****************
  6135 ;; Defined at:
  6136 ;;		line 147 in file "LCDdrive.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  s               2   14[BANK1 ] PTR unsigned char 
  6139 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  6140 ;;		 -> STR_3(3), STR_2(3), LCD_display_float@output(7), LCD_display_value@buffer(12), 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  c               1   18[BANK1 ] unsigned char 
  6143 ;;  i               1   17[BANK1 ] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6153 ;;      Params:         0       0       2       0       0
  6154 ;;      Locals:         0       0       2       0       0
  6155 ;;      Temps:          0       0       1       0       0
  6156 ;;      Totals:         0       0       5       0       0
  6157 ;;Total ram usage:        5 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; Hardware stack levels required when called: 5
  6160 ;; This function calls:
  6161 ;;		_LCD_putch
  6162 ;; This function is called by:
  6163 ;;		_LCD_display_value
  6164 ;;		_updateClock
  6165 ;;		_convert_time
  6166 ;;		_LCD_display_float
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _LCD_puts
  6172  11D6                     _LCD_puts:
  6173  11D6                     l2618:	
  6174                           ;incstack = 0
  6175 ;; using string table level
  6176                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6177                           
  6178                           
  6179                           ;LCDdrive.c: 147: void LCD_puts(unsigned char *s);LCDdrive.c: 148: {;LCDdrive.c: 149:   
      +                                unsigned char c = 255;
  6180  11D6  30FF               	movlw	255
  6181  11D7  1683               	bsf	3,5	;RP0=1, select bank1
  6182  11D8  1303               	bcf	3,6	;RP1=0, select bank1
  6183  11D9  00B0               	movwf	??_LCD_puts^(0+128)
  6184  11DA  0830               	movf	??_LCD_puts^(0+128),w
  6185  11DB  00B2               	movwf	LCD_puts@c^(0+128)
  6186  11DC                     l2620:
  6187                           
  6188                           ;LCDdrive.c: 150:         unsigned char i = 0;
  6189  11DC  01B1               	clrf	LCD_puts@i^(0+128)
  6190                           
  6191                           ;LCDdrive.c: 151:         while ((c > 0) && (i < 16))
  6192  11DD  2A02               	goto	l2630
  6193  11DE                     l2622:
  6194                           
  6195                           ;LCDdrive.c: 152:         {;LCDdrive.c: 153:           c = s[i];
  6196  11DE  0831               	movf	LCD_puts@i^(0+128),w
  6197  11DF  072E               	addwf	LCD_puts@s^(0+128),w
  6198  11E0  0084               	movwf	4
  6199  11E1  082F               	movf	(LCD_puts@s+1)^(0+128),w
  6200  11E2  1803               	skipnc
  6201  11E3  0A2F               	incf	(LCD_puts@s+1)^(0+128),w
  6202  11E4  1283               	bcf	3,5	;RP0=0, select bank0
  6203  11E5  1303               	bcf	3,6	;RP1=0, select bank0
  6204  11E6  00FF               	movwf	btemp+1
  6205  11E7  160A  118A  2000  160A  118A  	fcall	stringtab
  6206  11EC  1683               	bsf	3,5	;RP0=1, select bank1
  6207  11ED  1303               	bcf	3,6	;RP1=0, select bank1
  6208  11EE  00B0               	movwf	??_LCD_puts^(0+128)
  6209  11EF  0830               	movf	??_LCD_puts^(0+128),w
  6210  11F0  00B2               	movwf	LCD_puts@c^(0+128)
  6211  11F1                     l2624:
  6212                           
  6213                           ;LCDdrive.c: 154:           if (c != 0) LCD_putch(c);
  6214  11F1  0832               	movf	LCD_puts@c^(0+128),w
  6215  11F2  1903               	btfsc	3,2
  6216  11F3  29F5               	goto	u3561
  6217  11F4  29F6               	goto	u3560
  6218  11F5                     u3561:
  6219  11F5  29FC               	goto	l2628
  6220  11F6                     u3560:
  6221  11F6                     l2626:
  6222  11F6  0832               	movf	LCD_puts@c^(0+128),w
  6223  11F7  160A  118A  2053  160A  118A  	fcall	_LCD_putch
  6224  11FC                     l2628:
  6225                           
  6226                           ;LCDdrive.c: 155:           i++;
  6227  11FC  3001               	movlw	1
  6228  11FD  1683               	bsf	3,5	;RP0=1, select bank1
  6229  11FE  1303               	bcf	3,6	;RP1=0, select bank1
  6230  11FF  00B0               	movwf	??_LCD_puts^(0+128)
  6231  1200  0830               	movf	??_LCD_puts^(0+128),w
  6232  1201  07B1               	addwf	LCD_puts@i^(0+128),f
  6233  1202                     l2630:
  6234                           
  6235                           ;LCDdrive.c: 151:         while ((c > 0) && (i < 16))
  6236  1202  0832               	movf	LCD_puts@c^(0+128),w
  6237  1203  1903               	btfsc	3,2
  6238  1204  2A06               	goto	u3571
  6239  1205  2A07               	goto	u3570
  6240  1206                     u3571:
  6241  1206  2A0D               	goto	l67
  6242  1207                     u3570:
  6243  1207                     l2632:
  6244  1207  3010               	movlw	16
  6245  1208  0231               	subwf	LCD_puts@i^(0+128),w
  6246  1209  1C03               	skipc
  6247  120A  2A0C               	goto	u3581
  6248  120B  2A0D               	goto	u3580
  6249  120C                     u3581:
  6250  120C  29DE               	goto	l2622
  6251  120D                     u3580:
  6252  120D                     l67:
  6253  120D  0008               	return
  6254  120E                     __end_of_LCD_puts:
  6255                           
  6256                           	psect	text23
  6257  1053                     __ptext23:	
  6258 ;; *************** function _LCD_putch *****************
  6259 ;; Defined at:
  6260 ;;		line 129 in file "LCDdrive.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  c               1    wreg     unsigned char 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  c               1   11[BANK1 ] unsigned char 
  6265 ;;  counter         2   12[BANK1 ] unsigned int 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, status,2, status,0, pclath, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6275 ;;      Params:         0       0       0       0       0
  6276 ;;      Locals:         0       0       3       0       0
  6277 ;;      Temps:          0       0       0       0       0
  6278 ;;      Totals:         0       0       3       0       0
  6279 ;;Total ram usage:        3 bytes
  6280 ;; Hardware stack levels used: 1
  6281 ;; Hardware stack levels required when called: 4
  6282 ;; This function calls:
  6283 ;;		_LCD_write
  6284 ;; This function is called by:
  6285 ;;		_LCD_puts
  6286 ;;		_LCD_putsc
  6287 ;;		_updateClock
  6288 ;;		_set_temp
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _LCD_putch
  6294  1053                     _LCD_putch:
  6295                           
  6296                           ;incstack = 0
  6297                           ; Regs used in _LCD_putch: [wreg+status,2+status,0+pclath+cstack]
  6298                           ;LCD_putch@c stored from wreg
  6299  1053  1683               	bsf	3,5	;RP0=1, select bank1
  6300  1054  1303               	bcf	3,6	;RP1=0, select bank1
  6301  1055  00AB               	movwf	LCD_putch@c^(0+128)
  6302  1056                     l2582:
  6303                           
  6304                           ;LCDdrive.c: 129: void LCD_putch(unsigned char c);LCDdrive.c: 130: {;LCDdrive.c: 131:   
      +                                unsigned int counter;;LCDdrive.c: 132:         LCD_write(c, 1);
  6305  1056  01A0               	clrf	LCD_write@rs^(0+128)
  6306  1057  0AA0               	incf	LCD_write@rs^(0+128),f
  6307  1058  082B               	movf	LCD_putch@c^(0+128),w
  6308  1059  120A  158A  2230  160A  118A  	fcall	_LCD_write
  6309  105E                     l2584:
  6310                           
  6311                           ;LCDdrive.c: 133:         for (counter = 0; counter < 200; counter++);
  6312  105E  1683               	bsf	3,5	;RP0=1, select bank1
  6313  105F  1303               	bcf	3,6	;RP1=0, select bank1
  6314  1060  01AC               	clrf	LCD_putch@counter^(0+128)
  6315  1061  01AD               	clrf	(LCD_putch@counter+1)^(0+128)
  6316  1062                     l2590:
  6317  1062  3001               	movlw	1
  6318  1063  07AC               	addwf	LCD_putch@counter^(0+128),f
  6319  1064  1803               	skipnc
  6320  1065  0AAD               	incf	(LCD_putch@counter+1)^(0+128),f
  6321  1066  3000               	movlw	0
  6322  1067  07AD               	addwf	(LCD_putch@counter+1)^(0+128),f
  6323  1068  3000               	movlw	0
  6324  1069  022D               	subwf	(LCD_putch@counter+1)^(0+128),w
  6325  106A  30C8               	movlw	200
  6326  106B  1903               	skipnz
  6327  106C  022C               	subwf	LCD_putch@counter^(0+128),w
  6328  106D  1C03               	skipc
  6329  106E  2870               	goto	u3521
  6330  106F  2871               	goto	u3520
  6331  1070                     u3521:
  6332  1070  2862               	goto	l2590
  6333  1071                     u3520:
  6334  1071                     l51:
  6335  1071  0008               	return
  6336  1072                     __end_of_LCD_putch:
  6337                           
  6338                           	psect	text24
  6339  119F                     __ptext24:	
  6340 ;; *************** function _LCD_clear *****************
  6341 ;; Defined at:
  6342 ;;		line 137 in file "LCDdrive.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  counter         2   11[BANK1 ] unsigned int 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6356 ;;      Params:         0       0       0       0       0
  6357 ;;      Locals:         0       0       2       0       0
  6358 ;;      Temps:          0       0       0       0       0
  6359 ;;      Totals:         0       0       2       0       0
  6360 ;;Total ram usage:        2 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 4
  6363 ;; This function calls:
  6364 ;;		_LCD_write
  6365 ;; This function is called by:
  6366 ;;		_LCD_initialise
  6367 ;;		_set_temp
  6368 ;;		_set_time
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function _LCD_clear
  6374  119F                     _LCD_clear:
  6375  119F                     l2648:	
  6376                           ;incstack = 0
  6377                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  6378                           
  6379                           
  6380                           ;LCDdrive.c: 139:         unsigned int counter;;LCDdrive.c: 140:         LCD_write(1, 0)
      +                          ;
  6381  119F  1683               	bsf	3,5	;RP0=1, select bank1
  6382  11A0  1303               	bcf	3,6	;RP1=0, select bank1
  6383  11A1  01A0               	clrf	LCD_write@rs^(0+128)
  6384  11A2  3001               	movlw	1
  6385  11A3  120A  158A  2230  160A  118A  	fcall	_LCD_write
  6386  11A8                     l2650:
  6387                           
  6388                           ;LCDdrive.c: 141:         for (counter = 0; counter < 1000; counter++);
  6389  11A8  1683               	bsf	3,5	;RP0=1, select bank1
  6390  11A9  1303               	bcf	3,6	;RP1=0, select bank1
  6391  11AA  01AB               	clrf	LCD_clear@counter^(0+128)
  6392  11AB  01AC               	clrf	(LCD_clear@counter+1)^(0+128)
  6393  11AC                     l2656:
  6394  11AC  3001               	movlw	1
  6395  11AD  07AB               	addwf	LCD_clear@counter^(0+128),f
  6396  11AE  1803               	skipnc
  6397  11AF  0AAC               	incf	(LCD_clear@counter+1)^(0+128),f
  6398  11B0  3000               	movlw	0
  6399  11B1  07AC               	addwf	(LCD_clear@counter+1)^(0+128),f
  6400  11B2  3003               	movlw	3
  6401  11B3  022C               	subwf	(LCD_clear@counter+1)^(0+128),w
  6402  11B4  30E8               	movlw	232
  6403  11B5  1903               	skipnz
  6404  11B6  022B               	subwf	LCD_clear@counter^(0+128),w
  6405  11B7  1C03               	skipc
  6406  11B8  29BA               	goto	u3601
  6407  11B9  29BB               	goto	u3600
  6408  11BA                     u3601:
  6409  11BA  29AC               	goto	l2656
  6410  11BB                     u3600:
  6411  11BB                     l2658:
  6412                           
  6413                           ;LCDdrive.c: 142:         LCD_write(2, 0);
  6414  11BB  01A0               	clrf	LCD_write@rs^(0+128)
  6415  11BC  3002               	movlw	2
  6416  11BD  120A  158A  2230  160A  118A  	fcall	_LCD_write
  6417  11C2                     l2660:
  6418                           
  6419                           ;LCDdrive.c: 143:         for (counter = 0; counter < 1000; counter++);
  6420  11C2  1683               	bsf	3,5	;RP0=1, select bank1
  6421  11C3  1303               	bcf	3,6	;RP1=0, select bank1
  6422  11C4  01AB               	clrf	LCD_clear@counter^(0+128)
  6423  11C5  01AC               	clrf	(LCD_clear@counter+1)^(0+128)
  6424  11C6                     l2666:
  6425  11C6  3001               	movlw	1
  6426  11C7  07AB               	addwf	LCD_clear@counter^(0+128),f
  6427  11C8  1803               	skipnc
  6428  11C9  0AAC               	incf	(LCD_clear@counter+1)^(0+128),f
  6429  11CA  3000               	movlw	0
  6430  11CB  07AC               	addwf	(LCD_clear@counter+1)^(0+128),f
  6431  11CC  3003               	movlw	3
  6432  11CD  022C               	subwf	(LCD_clear@counter+1)^(0+128),w
  6433  11CE  30E8               	movlw	232
  6434  11CF  1903               	skipnz
  6435  11D0  022B               	subwf	LCD_clear@counter^(0+128),w
  6436  11D1  1C03               	skipc
  6437  11D2  29D4               	goto	u3611
  6438  11D3  29D5               	goto	u3610
  6439  11D4                     u3611:
  6440  11D4  29C6               	goto	l2666
  6441  11D5                     u3610:
  6442  11D5                     l58:
  6443  11D5  0008               	return
  6444  11D6                     __end_of_LCD_clear:
  6445                           
  6446                           	psect	text25
  6447  0A30                     __ptext25:	
  6448 ;; *************** function _LCD_write *****************
  6449 ;; Defined at:
  6450 ;;		line 67 in file "LCDdrive.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  c               1    wreg     unsigned char 
  6453 ;;  rs              1    0[BANK1 ] unsigned char 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  c               1    7[BANK1 ] unsigned char 
  6456 ;;  counter         2    9[BANK1 ] unsigned int 
  6457 ;;  RSmask          1    8[BANK1 ] unsigned char 
  6458 ;;  temp            1    6[BANK1 ] unsigned char 
  6459 ;;  RB6_BAK         1    5[BANK1 ] unsigned char 
  6460 ;;  RB7_BAK         1    4[BANK1 ] unsigned char 
  6461 ;;  TRISB_BAK       1    3[BANK1 ] unsigned char 
  6462 ;;  intsON          1    2[BANK1 ] unsigned char 
  6463 ;;  INTCON_BAK      1    0        unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6473 ;;      Params:         0       0       1       0       0
  6474 ;;      Locals:         0       0       9       0       0
  6475 ;;      Temps:          0       0       1       0       0
  6476 ;;      Totals:         0       0      11       0       0
  6477 ;;Total ram usage:       11 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 3
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_LCD_initialise
  6484 ;;		_LCD_putch
  6485 ;;		_LCD_clear
  6486 ;;		_LCD_cursor
  6487 ;;		_LCD_cursor_on
  6488 ;;		_LCD_cursor_off
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           
  6493                           ;psect for function _LCD_write
  6494  0A30                     _LCD_write:
  6495                           
  6496                           ;incstack = 0
  6497                           ; Regs used in _LCD_write: [wreg+status,2+status,0]
  6498                           ;LCD_write@c stored from wreg
  6499  0A30  1683               	bsf	3,5	;RP0=1, select bank1
  6500  0A31  1303               	bcf	3,6	;RP1=0, select bank1
  6501  0A32  00A7               	movwf	LCD_write@c^(0+128)
  6502  0A33                     l2468:
  6503                           
  6504                           ;LCDdrive.c: 67: void LCD_write(unsigned char c, unsigned char rs);LCDdrive.c: 68: {;LCD
      +                          drive.c: 69:         unsigned char temp, intsON;;LCDdrive.c: 70:         unsigned char R
      +                          Smask = 0;
  6505  0A33  01A8               	clrf	LCD_write@RSmask^(0+128)
  6506  0A34                     l2470:
  6507                           
  6508                           ;LCDdrive.c: 71:         unsigned char TRISB_BAK;;LCDdrive.c: 72:         unsigned char 
      +                          RB7_BAK, RB6_BAK;;LCDdrive.c: 73:         unsigned char INTCON_BAK;;LCDdrive.c: 74:     
      +                              unsigned int counter;;LCDdrive.c: 78:         intsON = INTCONbits.GIE;
  6509  0A34  3000               	movlw	0
  6510  0A35  1B8B               	btfsc	11,7	;volatile
  6511  0A36  3001               	movlw	1
  6512  0A37  00A2               	movwf	LCD_write@intsON^(0+128)
  6513  0A38                     l2472:
  6514                           
  6515                           ;LCDdrive.c: 79:         INTCONbits.GIE = 0;
  6516  0A38  138B               	bcf	11,7	;volatile
  6517                           
  6518                           ;LCDdrive.c: 80:         TRISB_BAK = TRISB;
  6519  0A39  0806               	movf	6,w	;volatile
  6520  0A3A  00A1               	movwf	??_LCD_write^(0+128)
  6521  0A3B  0821               	movf	??_LCD_write^(0+128),w
  6522  0A3C  00A3               	movwf	LCD_write@TRISB_BAK^(0+128)
  6523  0A3D                     l2474:
  6524                           
  6525                           ;LCDdrive.c: 81:         RB7_BAK = RB7;
  6526  0A3D  3000               	movlw	0
  6527  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  6528  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  6529  0A40  1B86               	btfsc	6,7	;volatile
  6530  0A41  3001               	movlw	1
  6531  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  6532  0A43  1303               	bcf	3,6	;RP1=0, select bank1
  6533  0A44  00A4               	movwf	LCD_write@RB7_BAK^(0+128)
  6534  0A45                     l2476:
  6535                           
  6536                           ;LCDdrive.c: 82:         RB6_BAK = RB6;
  6537  0A45  3000               	movlw	0
  6538  0A46  1283               	bcf	3,5	;RP0=0, select bank0
  6539  0A47  1303               	bcf	3,6	;RP1=0, select bank0
  6540  0A48  1B06               	btfsc	6,6	;volatile
  6541  0A49  3001               	movlw	1
  6542  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  6543  0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  6544  0A4C  00A5               	movwf	LCD_write@RB6_BAK^(0+128)
  6545  0A4D                     l2478:
  6546                           
  6547                           ;LCDdrive.c: 85:         TRISB = 0x00;
  6548  0A4D  0186               	clrf	6	;volatile
  6549  0A4E                     l2480:
  6550                           
  6551                           ;LCDdrive.c: 87:         if (rs == 1) RSmask = 0x10;
  6552  0A4E  0320               	decf	LCD_write@rs^(0+128),w
  6553  0A4F  1D03               	btfss	3,2
  6554  0A50  2A52               	goto	u3281
  6555  0A51  2A53               	goto	u3280
  6556  0A52                     u3281:
  6557  0A52  2A57               	goto	l36
  6558  0A53                     u3280:
  6559  0A53                     l2482:
  6560  0A53  3010               	movlw	16
  6561  0A54  00A1               	movwf	??_LCD_write^(0+128)
  6562  0A55  0821               	movf	??_LCD_write^(0+128),w
  6563  0A56  00A8               	movwf	LCD_write@RSmask^(0+128)
  6564  0A57                     l36:
  6565                           
  6566                           ;LCDdrive.c: 90:         temp = c;
  6567  0A57  0827               	movf	LCD_write@c^(0+128),w
  6568  0A58  00A1               	movwf	??_LCD_write^(0+128)
  6569  0A59  0821               	movf	??_LCD_write^(0+128),w
  6570  0A5A  00A6               	movwf	LCD_write@temp^(0+128)
  6571  0A5B                     l2484:
  6572                           
  6573                           ;LCDdrive.c: 91:         PORTB = (temp >> 4) | RSmask;
  6574  0A5B  0826               	movf	LCD_write@temp^(0+128),w
  6575  0A5C  00A1               	movwf	??_LCD_write^(0+128)
  6576  0A5D  3004               	movlw	4
  6577  0A5E                     u3295:
  6578  0A5E  1003               	clrc
  6579  0A5F  0CA1               	rrf	??_LCD_write^(0+128),f
  6580  0A60  3EFF               	addlw	-1
  6581  0A61  1D03               	skipz
  6582  0A62  2A5E               	goto	u3295
  6583  0A63  0821               	movf	??_LCD_write^(0+128),w
  6584  0A64  0428               	iorwf	LCD_write@RSmask^(0+128),w
  6585  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  6586  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  6587  0A67  0086               	movwf	6	;volatile
  6588  0A68                     l2486:
  6589                           
  6590                           ;LCDdrive.c: 95:         RB5 = 1;
  6591  0A68  1686               	bsf	6,5	;volatile
  6592  0A69                     l2488:
  6593                           
  6594                           ;LCDdrive.c: 96:         for (counter = 0; counter < 2; counter++);
  6595  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  6596  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
  6597  0A6B  01A9               	clrf	LCD_write@counter^(0+128)
  6598  0A6C  01AA               	clrf	(LCD_write@counter+1)^(0+128)
  6599  0A6D                     l2494:
  6600  0A6D  3001               	movlw	1
  6601  0A6E  07A9               	addwf	LCD_write@counter^(0+128),f
  6602  0A6F  1803               	skipnc
  6603  0A70  0AAA               	incf	(LCD_write@counter+1)^(0+128),f
  6604  0A71  3000               	movlw	0
  6605  0A72  07AA               	addwf	(LCD_write@counter+1)^(0+128),f
  6606  0A73  3000               	movlw	0
  6607  0A74  022A               	subwf	(LCD_write@counter+1)^(0+128),w
  6608  0A75  3002               	movlw	2
  6609  0A76  1903               	skipnz
  6610  0A77  0229               	subwf	LCD_write@counter^(0+128),w
  6611  0A78  1C03               	skipc
  6612  0A79  2A7B               	goto	u3301
  6613  0A7A  2A7C               	goto	u3300
  6614  0A7B                     u3301:
  6615  0A7B  2A6D               	goto	l2494
  6616  0A7C                     u3300:
  6617  0A7C                     l38:
  6618                           
  6619                           ;LCDdrive.c: 98:         RB5 = 0;
  6620  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  6621  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  6622  0A7E  1286               	bcf	6,5	;volatile
  6623  0A7F                     l2496:
  6624                           
  6625                           ;LCDdrive.c: 99:         for (counter = 0; counter < 2; counter++);
  6626  0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  6627  0A80  1303               	bcf	3,6	;RP1=0, select bank1
  6628  0A81  01A9               	clrf	LCD_write@counter^(0+128)
  6629  0A82  01AA               	clrf	(LCD_write@counter+1)^(0+128)
  6630  0A83                     l2502:
  6631  0A83  3001               	movlw	1
  6632  0A84  07A9               	addwf	LCD_write@counter^(0+128),f
  6633  0A85  1803               	skipnc
  6634  0A86  0AAA               	incf	(LCD_write@counter+1)^(0+128),f
  6635  0A87  3000               	movlw	0
  6636  0A88  07AA               	addwf	(LCD_write@counter+1)^(0+128),f
  6637  0A89  3000               	movlw	0
  6638  0A8A  022A               	subwf	(LCD_write@counter+1)^(0+128),w
  6639  0A8B  3002               	movlw	2
  6640  0A8C  1903               	skipnz
  6641  0A8D  0229               	subwf	LCD_write@counter^(0+128),w
  6642  0A8E  1C03               	skipc
  6643  0A8F  2A91               	goto	u3311
  6644  0A90  2A92               	goto	u3310
  6645  0A91                     u3311:
  6646  0A91  2A83               	goto	l2502
  6647  0A92                     u3310:
  6648  0A92                     l2504:
  6649                           
  6650                           ;LCDdrive.c: 102:         PORTB = (c & 0x0F) | RSmask;
  6651  0A92  0827               	movf	LCD_write@c^(0+128),w
  6652  0A93  390F               	andlw	15
  6653  0A94  0428               	iorwf	LCD_write@RSmask^(0+128),w
  6654  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  6655  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  6656  0A97  0086               	movwf	6	;volatile
  6657  0A98                     l2506:
  6658                           
  6659                           ;LCDdrive.c: 106:         RB5 = 1;
  6660  0A98  1686               	bsf	6,5	;volatile
  6661  0A99                     l2508:
  6662                           
  6663                           ;LCDdrive.c: 107:         for (counter = 0; counter < 2; counter++);
  6664  0A99  1683               	bsf	3,5	;RP0=1, select bank1
  6665  0A9A  1303               	bcf	3,6	;RP1=0, select bank1
  6666  0A9B  01A9               	clrf	LCD_write@counter^(0+128)
  6667  0A9C  01AA               	clrf	(LCD_write@counter+1)^(0+128)
  6668  0A9D                     l2514:
  6669  0A9D  3001               	movlw	1
  6670  0A9E  07A9               	addwf	LCD_write@counter^(0+128),f
  6671  0A9F  1803               	skipnc
  6672  0AA0  0AAA               	incf	(LCD_write@counter+1)^(0+128),f
  6673  0AA1  3000               	movlw	0
  6674  0AA2  07AA               	addwf	(LCD_write@counter+1)^(0+128),f
  6675  0AA3  3000               	movlw	0
  6676  0AA4  022A               	subwf	(LCD_write@counter+1)^(0+128),w
  6677  0AA5  3002               	movlw	2
  6678  0AA6  1903               	skipnz
  6679  0AA7  0229               	subwf	LCD_write@counter^(0+128),w
  6680  0AA8  1C03               	skipc
  6681  0AA9  2AAB               	goto	u3321
  6682  0AAA  2AAC               	goto	u3320
  6683  0AAB                     u3321:
  6684  0AAB  2A9D               	goto	l2514
  6685  0AAC                     u3320:
  6686  0AAC                     l42:
  6687                           
  6688                           ;LCDdrive.c: 109:         RB5 = 0;
  6689  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  6690  0AAD  1303               	bcf	3,6	;RP1=0, select bank0
  6691  0AAE  1286               	bcf	6,5	;volatile
  6692  0AAF                     l2516:
  6693                           
  6694                           ;LCDdrive.c: 110:         for (counter = 0; counter < 2; counter++);
  6695  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  6696  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  6697  0AB1  01A9               	clrf	LCD_write@counter^(0+128)
  6698  0AB2  01AA               	clrf	(LCD_write@counter+1)^(0+128)
  6699  0AB3                     l2522:
  6700  0AB3  3001               	movlw	1
  6701  0AB4  07A9               	addwf	LCD_write@counter^(0+128),f
  6702  0AB5  1803               	skipnc
  6703  0AB6  0AAA               	incf	(LCD_write@counter+1)^(0+128),f
  6704  0AB7  3000               	movlw	0
  6705  0AB8  07AA               	addwf	(LCD_write@counter+1)^(0+128),f
  6706  0AB9  3000               	movlw	0
  6707  0ABA  022A               	subwf	(LCD_write@counter+1)^(0+128),w
  6708  0ABB  3002               	movlw	2
  6709  0ABC  1903               	skipnz
  6710  0ABD  0229               	subwf	LCD_write@counter^(0+128),w
  6711  0ABE  1C03               	skipc
  6712  0ABF  2AC1               	goto	u3331
  6713  0AC0  2AC2               	goto	u3330
  6714  0AC1                     u3331:
  6715  0AC1  2AB3               	goto	l2522
  6716  0AC2                     u3330:
  6717  0AC2                     l2524:
  6718                           
  6719                           ;LCDdrive.c: 112:         PORTB = 0x10;
  6720  0AC2  3010               	movlw	16
  6721  0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  6723  0AC5  0086               	movwf	6	;volatile
  6724  0AC6                     l2526:
  6725                           
  6726                           ;LCDdrive.c: 114:         RB7 = RB7_BAK;
  6727  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  6728  0AC7  1303               	bcf	3,6	;RP1=0, select bank1
  6729  0AC8  1824               	btfsc	LCD_write@RB7_BAK^(0+128),0
  6730  0AC9  2ACB               	goto	u3341
  6731  0ACA  2ACF               	goto	u3340
  6732  0ACB                     u3341:
  6733  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  6735  0ACD  1786               	bsf	6,7	;volatile
  6736  0ACE  2AD2               	goto	u3354
  6737  0ACF                     u3340:
  6738  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  6739  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  6740  0AD1  1386               	bcf	6,7	;volatile
  6741  0AD2                     u3354:
  6742  0AD2                     l2528:
  6743                           
  6744                           ;LCDdrive.c: 115:         RB6 = RB6_BAK;
  6745  0AD2  1683               	bsf	3,5	;RP0=1, select bank1
  6746  0AD3  1303               	bcf	3,6	;RP1=0, select bank1
  6747  0AD4  1825               	btfsc	LCD_write@RB6_BAK^(0+128),0
  6748  0AD5  2AD7               	goto	u3361
  6749  0AD6  2ADB               	goto	u3360
  6750  0AD7                     u3361:
  6751  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  6753  0AD9  1706               	bsf	6,6	;volatile
  6754  0ADA  2ADE               	goto	u3374
  6755  0ADB                     u3360:
  6756  0ADB  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0ADC  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0ADD  1306               	bcf	6,6	;volatile
  6759  0ADE                     u3374:
  6760                           
  6761                           ;LCDdrive.c: 117:         TRISB = TRISB_BAK;
  6762  0ADE  1683               	bsf	3,5	;RP0=1, select bank1
  6763  0ADF  1303               	bcf	3,6	;RP1=0, select bank1
  6764  0AE0  0823               	movf	LCD_write@TRISB_BAK^(0+128),w
  6765  0AE1  0086               	movwf	6	;volatile
  6766  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  6767  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  6768  0AE4  0806               	movf	6,w	;volatile
  6769  0AE5                     l2530:
  6770                           
  6771                           ;LCDdrive.c: 120:         INTCONbits.RBIF=0;
  6772  0AE5  100B               	bcf	11,0	;volatile
  6773  0AE6                     l2532:
  6774                           
  6775                           ;LCDdrive.c: 121:         INTCONbits.INTF=0;
  6776  0AE6  108B               	bcf	11,1	;volatile
  6777  0AE7                     l2534:
  6778                           
  6779                           ;LCDdrive.c: 123:         if(intsON) GIE = 1;
  6780  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  6781  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  6782  0AE9  0822               	movf	LCD_write@intsON^(0+128),w
  6783  0AEA  1903               	btfsc	3,2
  6784  0AEB  2AED               	goto	u3381
  6785  0AEC  2AEE               	goto	u3380
  6786  0AED                     u3381:
  6787  0AED  2AEF               	goto	l46
  6788  0AEE                     u3380:
  6789  0AEE                     l2536:
  6790  0AEE  178B               	bsf	11,7	;volatile
  6791  0AEF                     l46:
  6792  0AEF  0008               	return
  6793  0AF0                     __end_of_LCD_write:
  6794                           
  6795                           	psect	text26
  6796  1FE7                     __ptext26:	
  6797 ;; *************** function _ADC_read *****************
  6798 ;; Defined at:
  6799 ;;		line 69 in file "Clock_ws.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  result          2    3[BANK1 ] int 
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  2    0[BANK1 ] int 
  6806 ;; Registers used:
  6807 ;;		wreg
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6813 ;;      Params:         0       0       2       0       0
  6814 ;;      Locals:         0       0       2       0       0
  6815 ;;      Temps:          0       0       1       0       0
  6816 ;;      Totals:         0       0       5       0       0
  6817 ;;Total ram usage:        5 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 3
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_set_temp
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           
  6828                           ;psect for function _ADC_read
  6829  1FE7                     _ADC_read:
  6830  1FE7                     l2804:	
  6831                           ;incstack = 0
  6832                           ; Regs used in _ADC_read: [wreg]
  6833                           
  6834                           
  6835                           ;Clock_ws.c: 71:     signed int result;;Clock_ws.c: 72:     _delay((unsigned long)((20)*
      +                          (3276800/4000000.0)));
  6836  1FE7  3004               	movlw	4
  6837  1FE8  1683               	bsf	3,5	;RP0=1, select bank1
  6838  1FE9  1303               	bcf	3,6	;RP1=0, select bank1
  6839  1FEA  00A2               	movwf	??_ADC_read^(0+128)
  6840  1FEB                     u6557:
  6841  1FEB  0BA2               	decfsz	??_ADC_read^(0+128),f
  6842  1FEC  2FEB               	goto	u6557
  6843  1FED  0000               	nop
  6844  1FEE                     l2806:
  6845                           
  6846                           ;Clock_ws.c: 73:     ADCON0bits.GO =1;
  6847  1FEE  1283               	bcf	3,5	;RP0=0, select bank0
  6848  1FEF  1303               	bcf	3,6	;RP1=0, select bank0
  6849  1FF0  151F               	bsf	31,2	;volatile
  6850  1FF1                     l201:	
  6851                           ;Clock_ws.c: 74:     while (ADCON0bits.GO ==1);
  6852                           
  6853  1FF1  191F               	btfsc	31,2	;volatile
  6854  1FF2  2FF4               	goto	u3831
  6855  1FF3  2FF5               	goto	u3830
  6856  1FF4                     u3831:
  6857  1FF4  2FF1               	goto	l201
  6858  1FF5                     u3830:
  6859  1FF5                     l2808:
  6860                           
  6861                           ;Clock_ws.c: 75:     result = (ADRESH<<8)+ ADRESL;
  6862  1FF5  081E               	movf	30,w	;volatile
  6863  1FF6  1683               	bsf	3,5	;RP0=1, select bank1
  6864  1FF7  1303               	bcf	3,6	;RP1=0, select bank1
  6865  1FF8  00A4               	movwf	(ADC_read@result+1)^(0+128)
  6866  1FF9  081E               	movf	30,w	;volatile
  6867  1FFA  00A3               	movwf	ADC_read@result^(0+128)
  6868                           
  6869                           ;Clock_ws.c: 76:     return(result);
  6870  1FFB  0824               	movf	(ADC_read@result+1)^(0+128),w
  6871  1FFC  00A1               	movwf	(?_ADC_read+1)^(0+128)
  6872  1FFD  0823               	movf	ADC_read@result^(0+128),w
  6873  1FFE  00A0               	movwf	?_ADC_read^(0+128)
  6874  1FFF                     l204:
  6875  1FFF  0008               	return
  6876  2000                     __end_of_ADC_read:
  6877                           
  6878                           	psect	text27
  6879  1FD3                     __ptext27:	
  6880 ;; *************** function _ADC_channel_select *****************
  6881 ;; Defined at:
  6882 ;;		line 83 in file "Clock_ws.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  channel         1    wreg     unsigned char 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  channel         1    1[BANK1 ] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      void 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6896 ;;      Params:         0       0       0       0       0
  6897 ;;      Locals:         0       0       1       0       0
  6898 ;;      Temps:          0       0       1       0       0
  6899 ;;      Totals:         0       0       2       0       0
  6900 ;;Total ram usage:        2 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; Hardware stack levels required when called: 3
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_set_temp
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           
  6911                           ;psect for function _ADC_channel_select
  6912  1FD3                     _ADC_channel_select:
  6913                           
  6914                           ;incstack = 0
  6915                           ; Regs used in _ADC_channel_select: [wreg+status,2+status,0]
  6916                           ;ADC_channel_select@channel stored from wreg
  6917  1FD3  1683               	bsf	3,5	;RP0=1, select bank1
  6918  1FD4  1303               	bcf	3,6	;RP1=0, select bank1
  6919  1FD5  00A1               	movwf	ADC_channel_select@channel^(0+128)
  6920  1FD6                     l2812:
  6921                           
  6922                           ;Clock_ws.c: 84:     ADCON0bits.CHS = channel;
  6923  1FD6  0821               	movf	ADC_channel_select@channel^(0+128),w
  6924  1FD7  00A0               	movwf	??_ADC_channel_select^(0+128)
  6925  1FD8  0DA0               	rlf	??_ADC_channel_select^(0+128),f
  6926  1FD9  0DA0               	rlf	??_ADC_channel_select^(0+128),f
  6927  1FDA  0DA0               	rlf	??_ADC_channel_select^(0+128),f
  6928  1FDB  1283               	bcf	3,5	;RP0=0, select bank0
  6929  1FDC  1303               	bcf	3,6	;RP1=0, select bank0
  6930  1FDD  081F               	movf	31,w	;volatile
  6931  1FDE  1683               	bsf	3,5	;RP0=1, select bank1
  6932  1FDF  1303               	bcf	3,6	;RP1=0, select bank1
  6933  1FE0  0620               	xorwf	??_ADC_channel_select^(0+128),w
  6934  1FE1  39C7               	andlw	-57
  6935  1FE2  0620               	xorwf	??_ADC_channel_select^(0+128),w
  6936  1FE3  1283               	bcf	3,5	;RP0=0, select bank0
  6937  1FE4  1303               	bcf	3,6	;RP1=0, select bank0
  6938  1FE5  009F               	movwf	31	;volatile
  6939  1FE6                     l207:
  6940  1FE6  0008               	return
  6941  1FE7                     __end_of_ADC_channel_select:
  6942                           
  6943                           	psect	text28
  6944  10DE                     __ptext28:	
  6945 ;; *************** function _delay *****************
  6946 ;; Defined at:
  6947 ;;		line 147 in file "Clock_ws.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  delay           2    0[BANK1 ] unsigned int 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  x               2    4[BANK1 ] unsigned int 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6961 ;;      Params:         0       0       2       0       0
  6962 ;;      Locals:         0       0       2       0       0
  6963 ;;      Temps:          0       0       2       0       0
  6964 ;;      Totals:         0       0       6       0       0
  6965 ;;Total ram usage:        6 bytes
  6966 ;; Hardware stack levels used: 1
  6967 ;; Hardware stack levels required when called: 3
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_main
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           
  6976                           ;psect for function _delay
  6977  10DE                     _delay:
  6978  10DE                     l3394:	
  6979                           ;incstack = 0
  6980                           ; Regs used in _delay: [wreg+status,2+status,0]
  6981                           
  6982                           
  6983                           ;Clock_ws.c: 147: void delay (unsigned delay);Clock_ws.c: 148:  {;Clock_ws.c: 149:     u
      +                          nsigned int x;;Clock_ws.c: 151:     T1CON =0x30;
  6984  10DE  3030               	movlw	48
  6985  10DF  1283               	bcf	3,5	;RP0=0, select bank0
  6986  10E0  1303               	bcf	3,6	;RP1=0, select bank0
  6987  10E1  0090               	movwf	16	;volatile
  6988  10E2                     l3396:
  6989                           
  6990                           ;Clock_ws.c: 152:     for (x = 0; x<2*delay; x++)
  6991  10E2  1683               	bsf	3,5	;RP0=1, select bank1
  6992  10E3  1303               	bcf	3,6	;RP1=0, select bank1
  6993  10E4  01A4               	clrf	delay@x^(0+128)
  6994  10E5  01A5               	clrf	(delay@x+1)^(0+128)
  6995  10E6  28FB               	goto	l3406
  6996  10E7                     l223:
  6997                           
  6998                           ;Clock_ws.c: 153:     {;Clock_ws.c: 154:      PIR1bits.TMR1IF = 0;
  6999  10E7  1283               	bcf	3,5	;RP0=0, select bank0
  7000  10E8  1303               	bcf	3,6	;RP1=0, select bank0
  7001  10E9  100C               	bcf	12,0	;volatile
  7002                           
  7003                           ;Clock_ws.c: 155:      T1CONbits.TMR1ON =0;
  7004  10EA  1010               	bcf	16,0	;volatile
  7005  10EB                     l3398:
  7006                           
  7007                           ;Clock_ws.c: 156:      TMR1H = 0x38;
  7008  10EB  3038               	movlw	56
  7009  10EC  008F               	movwf	15	;volatile
  7010  10ED                     l3400:
  7011                           
  7012                           ;Clock_ws.c: 157:      TMR1L = 0x00;
  7013  10ED  018E               	clrf	14	;volatile
  7014  10EE                     l3402:
  7015                           
  7016                           ;Clock_ws.c: 158:      T1CONbits.TMR1ON =1;
  7017  10EE  1410               	bsf	16,0	;volatile
  7018  10EF                     l224:	
  7019                           ;Clock_ws.c: 159:      while(!PIR1bits.TMR1IF);
  7020                           
  7021  10EF  1C0C               	btfss	12,0	;volatile
  7022  10F0  28F2               	goto	u5141
  7023  10F1  28F3               	goto	u5140
  7024  10F2                     u5141:
  7025  10F2  28EF               	goto	l224
  7026  10F3                     u5140:
  7027  10F3                     l3404:
  7028                           
  7029                           ;Clock_ws.c: 161:     }
  7030  10F3  3001               	movlw	1
  7031  10F4  1683               	bsf	3,5	;RP0=1, select bank1
  7032  10F5  1303               	bcf	3,6	;RP1=0, select bank1
  7033  10F6  07A4               	addwf	delay@x^(0+128),f
  7034  10F7  1803               	skipnc
  7035  10F8  0AA5               	incf	(delay@x+1)^(0+128),f
  7036  10F9  3000               	movlw	0
  7037  10FA  07A5               	addwf	(delay@x+1)^(0+128),f
  7038  10FB                     l3406:
  7039  10FB  0821               	movf	(delay@delay+1)^(0+128),w
  7040  10FC  00A3               	movwf	(??_delay^(0+128)+1)
  7041  10FD  0820               	movf	delay@delay^(0+128),w
  7042  10FE  00A2               	movwf	??_delay^(0+128)
  7043  10FF  1003               	clrc
  7044  1100  0DA2               	rlf	??_delay^(0+128),f
  7045  1101  0DA3               	rlf	(??_delay^(0+128)+1),f
  7046  1102  0823               	movf	(??_delay+1)^(0+128),w
  7047  1103  0225               	subwf	(delay@x+1)^(0+128),w
  7048  1104  1D03               	skipz
  7049  1105  2908               	goto	u5155
  7050  1106  0822               	movf	??_delay^(0+128),w
  7051  1107  0224               	subwf	delay@x^(0+128),w
  7052  1108                     u5155:
  7053  1108  1C03               	skipc
  7054  1109  290B               	goto	u5151
  7055  110A  290C               	goto	u5150
  7056  110B                     u5151:
  7057  110B  28E7               	goto	l223
  7058  110C                     u5150:
  7059  110C                     l228:
  7060  110C  0008               	return
  7061  110D                     __end_of_delay:
  7062                           
  7063                           	psect	text29
  7064  174F                     __ptext29:	
  7065 ;; *************** function _alarmISR *****************
  7066 ;; Defined at:
  7067 ;;		line 278 in file "Clock_ws.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  x               2   55[BANK0 ] int 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7081 ;;      Params:         0       0       0       0       0
  7082 ;;      Locals:         0       2       0       0       0
  7083 ;;      Temps:          0       3       0       0       0
  7084 ;;      Totals:         0       5       0       0       0
  7085 ;;Total ram usage:        5 bytes
  7086 ;; Hardware stack levels used: 1
  7087 ;; Hardware stack levels required when called: 2
  7088 ;; This function calls:
  7089 ;;		___flge
  7090 ;;		i1_ADC_read
  7091 ;;		i1_LCD_clear
  7092 ;;		i1___fladd
  7093 ;;		i1___flmul
  7094 ;;		i1___xxtofl
  7095 ;; This function is called by:
  7096 ;;		Interrupt level 1
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _alarmISR
  7102  174F                     _alarmISR:
  7103  174F                     i1l4008:
  7104                           
  7105                           ;Clock_ws.c: 281:     if(TMR0IF){
  7106  174F  1D0B               	btfss	11,2	;volatile
  7107  1750  2F52               	goto	u651_21
  7108  1751  2F53               	goto	u651_20
  7109  1752                     u651_21:
  7110  1752  2FF7               	goto	i1l282
  7111  1753                     u651_20:
  7112  1753  2FD8               	goto	i1l4030
  7113  1754                     i1l4012:
  7114                           
  7115                           ;Clock_ws.c: 283:             LCD_clear();
  7116  1754  160A  118A  213D  160A  118A  	fcall	i1_LCD_clear
  7117  1759                     i1l4014:
  7118                           
  7119                           ;Clock_ws.c: 284:             temp_c = (ADC_read()*0.088) -40;
  7120  1759  30C2               	movlw	194
  7121  175A  1283               	bcf	3,5	;RP0=0, select bank0
  7122  175B  1303               	bcf	3,6	;RP1=0, select bank0
  7123  175C  00C3               	movwf	i1___fladd@b+3
  7124  175D  3020               	movlw	32
  7125  175E  00C2               	movwf	i1___fladd@b+2
  7126  175F  3000               	movlw	0
  7127  1760  00C1               	movwf	i1___fladd@b+1
  7128  1761  3000               	movlw	0
  7129  1762  00C0               	movwf	i1___fladd@b
  7130  1763  303D               	movlw	61
  7131  1764  00A9               	movwf	i1___flmul@b+3
  7132  1765  30B4               	movlw	180
  7133  1766  00A8               	movwf	i1___flmul@b+2
  7134  1767  3039               	movlw	57
  7135  1768  00A7               	movwf	i1___flmul@b+1
  7136  1769  3058               	movlw	88
  7137  176A  00A6               	movwf	i1___flmul@b
  7138  176B  160A  118A  2023  160A  118A  	fcall	i1_ADC_read
  7139  1770  0870               	movf	?i1_ADC_read,w
  7140  1771  00F5               	movwf	i1___xxtofl@val
  7141  1772  0871               	movf	?i1_ADC_read+1,w
  7142  1773  00F6               	movwf	i1___xxtofl@val+1
  7143  1774  3000               	movlw	0
  7144  1775  1BF6               	btfsc	i1___xxtofl@val+1,7
  7145  1776  30FF               	movlw	255
  7146  1777  00F7               	movwf	i1___xxtofl@val+2
  7147  1778  00F8               	movwf	i1___xxtofl@val+3
  7148  1779  3001               	movlw	1
  7149  177A  120A  158A  20B8  160A  118A  	fcall	i1___xxtofl
  7150  177F  0878               	movf	?i1___xxtofl+3,w
  7151  1780  1283               	bcf	3,5	;RP0=0, select bank0
  7152  1781  1303               	bcf	3,6	;RP1=0, select bank0
  7153  1782  00AD               	movwf	i1___flmul@a+3
  7154  1783  0877               	movf	?i1___xxtofl+2,w
  7155  1784  00AC               	movwf	i1___flmul@a+2
  7156  1785  0876               	movf	?i1___xxtofl+1,w
  7157  1786  00AB               	movwf	i1___flmul@a+1
  7158  1787  0875               	movf	?i1___xxtofl,w
  7159  1788  00AA               	movwf	i1___flmul@a
  7160  1789  120A  118A  238A  160A  118A  	fcall	i1___flmul
  7161  178E  1283               	bcf	3,5	;RP0=0, select bank0
  7162  178F  1303               	bcf	3,6	;RP1=0, select bank0
  7163  1790  0829               	movf	?i1___flmul+3,w
  7164  1791  00C7               	movwf	i1___fladd@a+3
  7165  1792  0828               	movf	?i1___flmul+2,w
  7166  1793  00C6               	movwf	i1___fladd@a+2
  7167  1794  0827               	movf	?i1___flmul+1,w
  7168  1795  00C5               	movwf	i1___fladd@a+1
  7169  1796  0826               	movf	?i1___flmul,w
  7170  1797  00C4               	movwf	i1___fladd@a
  7171  1798  120A  158A  22F0  160A  118A  	fcall	i1___fladd
  7172  179D  1283               	bcf	3,5	;RP0=0, select bank0
  7173  179E  1303               	bcf	3,6	;RP1=0, select bank0
  7174  179F  0843               	movf	?i1___fladd+3,w
  7175  17A0  1683               	bsf	3,5	;RP0=1, select bank1
  7176  17A1  1303               	bcf	3,6	;RP1=0, select bank1
  7177  17A2  00E9               	movwf	(_temp_c+3)^(0+128)
  7178  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  7179  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  7180  17A5  0842               	movf	?i1___fladd+2,w
  7181  17A6  1683               	bsf	3,5	;RP0=1, select bank1
  7182  17A7  1303               	bcf	3,6	;RP1=0, select bank1
  7183  17A8  00E8               	movwf	(_temp_c+2)^(0+128)
  7184  17A9  1283               	bcf	3,5	;RP0=0, select bank0
  7185  17AA  1303               	bcf	3,6	;RP1=0, select bank0
  7186  17AB  0841               	movf	?i1___fladd+1,w
  7187  17AC  1683               	bsf	3,5	;RP0=1, select bank1
  7188  17AD  1303               	bcf	3,6	;RP1=0, select bank1
  7189  17AE  00E7               	movwf	(_temp_c+1)^(0+128)
  7190  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  7191  17B0  1303               	bcf	3,6	;RP1=0, select bank0
  7192  17B1  0840               	movf	?i1___fladd,w
  7193  17B2  1683               	bsf	3,5	;RP0=1, select bank1
  7194  17B3  1303               	bcf	3,6	;RP1=0, select bank1
  7195  17B4  00E6               	movwf	_temp_c^(0+128)
  7196  17B5                     i1l4016:
  7197                           
  7198                           ;Clock_ws.c: 285:             TMR0IF = 0;
  7199  17B5  110B               	bcf	11,2	;volatile
  7200  17B6                     i1l4018:
  7201                           
  7202                           ;Clock_ws.c: 286:             for( int x = 0; x <3; x ++){
  7203  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  7204  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  7205  17B8  01D7               	clrf	alarmISR@x
  7206  17B9  01D8               	clrf	alarmISR@x+1
  7207  17BA                     i1l278:
  7208  17BA  1D0B               	btfss	11,2	;volatile
  7209  17BB  2FBD               	goto	u652_21
  7210  17BC  2FBE               	goto	u652_20
  7211  17BD                     u652_21:
  7212  17BD  2FBA               	goto	i1l278
  7213  17BE                     u652_20:
  7214  17BE                     i1l280:
  7215                           
  7216                           ;Clock_ws.c: 288:               TMR0IF = 0;
  7217  17BE  110B               	bcf	11,2	;volatile
  7218  17BF                     i1l4024:
  7219                           
  7220                           ;Clock_ws.c: 289:             }
  7221  17BF  3001               	movlw	1
  7222  17C0  1283               	bcf	3,5	;RP0=0, select bank0
  7223  17C1  1303               	bcf	3,6	;RP1=0, select bank0
  7224  17C2  07D7               	addwf	alarmISR@x,f
  7225  17C3  1803               	skipnc
  7226  17C4  0AD8               	incf	alarmISR@x+1,f
  7227  17C5  3000               	movlw	0
  7228  17C6  07D8               	addwf	alarmISR@x+1,f
  7229  17C7                     i1l4026:
  7230  17C7  0858               	movf	alarmISR@x+1,w
  7231  17C8  3A80               	xorlw	128
  7232  17C9  00FF               	movwf	btemp+1
  7233  17CA  3080               	movlw	128
  7234  17CB  027F               	subwf	btemp+1,w
  7235  17CC  1D03               	skipz
  7236  17CD  2FD0               	goto	u653_25
  7237  17CE  3003               	movlw	3
  7238  17CF  0257               	subwf	alarmISR@x,w
  7239  17D0                     u653_25:
  7240  17D0  1C03               	skipc
  7241  17D1  2FD3               	goto	u653_21
  7242  17D2  2FD4               	goto	u653_20
  7243  17D3                     u653_21:
  7244  17D3  2FBA               	goto	i1l278
  7245  17D4                     u653_20:
  7246  17D4                     i1l4028:
  7247                           
  7248                           ;Clock_ws.c: 290:             RB7 =!RB7;
  7249  17D4  3080               	movlw	128
  7250  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  7251  17D6  1303               	bcf	3,6	;RP1=0, select bank0
  7252  17D7  0686               	xorwf	6,f
  7253  17D8                     i1l4030:
  7254                           
  7255                           ;Clock_ws.c: 282:         while(temp_c <4){
  7256  17D8  1683               	bsf	3,5	;RP0=1, select bank1
  7257  17D9  1303               	bcf	3,6	;RP1=0, select bank1
  7258  17DA  0869               	movf	(_temp_c+3)^(0+128),w
  7259  17DB  00F3               	movwf	___flge@ff1+3
  7260  17DC  0868               	movf	(_temp_c+2)^(0+128),w
  7261  17DD  00F2               	movwf	___flge@ff1+2
  7262  17DE  0867               	movf	(_temp_c+1)^(0+128),w
  7263  17DF  00F1               	movwf	___flge@ff1+1
  7264  17E0  0866               	movf	_temp_c^(0+128),w
  7265  17E1  00F0               	movwf	___flge@ff1
  7266  17E2  3040               	movlw	64
  7267  17E3  00F7               	movwf	___flge@ff2+3
  7268  17E4  3080               	movlw	128
  7269  17E5  00F6               	movwf	___flge@ff2+2
  7270  17E6  3000               	movlw	0
  7271  17E7  00F5               	movwf	___flge@ff2+1
  7272  17E8  3000               	movlw	0
  7273  17E9  00F4               	movwf	___flge@ff2
  7274  17EA  160A  118A  25FF  160A  118A  	fcall	___flge
  7275  17EF  1C03               	btfss	3,0
  7276  17F0  2FF2               	goto	u654_21
  7277  17F1  2FF3               	goto	u654_20
  7278  17F2                     u654_21:
  7279  17F2  2F54               	goto	i1l4012
  7280  17F3                     u654_20:
  7281  17F3                     i1l281:
  7282                           
  7283                           ;Clock_ws.c: 292:         RB7 = 0;
  7284  17F3  1283               	bcf	3,5	;RP0=0, select bank0
  7285  17F4  1303               	bcf	3,6	;RP1=0, select bank0
  7286  17F5  1386               	bcf	6,7	;volatile
  7287                           
  7288                           ;Clock_ws.c: 293:         TMR0IF = 0;
  7289  17F6  110B               	bcf	11,2	;volatile
  7290  17F7                     i1l282:
  7291  17F7  0856               	movf	??_alarmISR+2,w
  7292  17F8  00FF               	movwf	btemp+1
  7293  17F9  0855               	movf	??_alarmISR+1,w
  7294  17FA  008A               	movwf	10
  7295  17FB  0E54               	swapf	??_alarmISR,w
  7296  17FC  0083               	movwf	3
  7297  17FD  0EFE               	swapf	btemp,f
  7298  17FE  0E7E               	swapf	btemp,w
  7299  17FF  0009               	retfie
  7300  1800                     __end_of_alarmISR:
  7301                           
  7302                           	psect	intentry
  7303  0004                     __pintentry:	
  7304                           ;incstack = 0
  7305 ;; hardware stack exceeded
  7306                           ; Regs used in _alarmISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7307                           
  7308  0004                     interrupt_function:
  7309  007E                     saved_w	set	btemp
  7310  0004  00FE               	movwf	btemp
  7311  0005  0E03               	swapf	3,w
  7312  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7313  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7314  0008  00D4               	movwf	??_alarmISR
  7315  0009  080A               	movf	10,w
  7316  000A  00D5               	movwf	??_alarmISR+1
  7317  000B  087F               	movf	btemp+1,w
  7318  000C  00D6               	movwf	??_alarmISR+2
  7319  000D  160A  118A  2F4F   	ljmp	_alarmISR
  7320                           
  7321                           	psect	text30
  7322  08B8                     __ptext30:	
  7323 ;; *************** function i1___xxtofl *****************
  7324 ;; Defined at:
  7325 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  sign            1    wreg     unsigned char 
  7328 ;;  val             4    5[COMMON] long 
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;  sign            1    0[BANK0 ] unsigned char 
  7331 ;;  arg             4    2[BANK0 ] unsigned long 
  7332 ;;  exp             1    1[BANK0 ] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  4    5[COMMON] unsigned char 
  7335 ;; Registers used:
  7336 ;;		wreg, status,2, status,0
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7342 ;;      Params:         4       0       0       0       0
  7343 ;;      Locals:         0       6       0       0       0
  7344 ;;      Temps:          4       0       0       0       0
  7345 ;;      Totals:         8       6       0       0       0
  7346 ;;Total ram usage:       14 bytes
  7347 ;; Hardware stack levels used: 1
  7348 ;; This function calls:
  7349 ;;		Nothing
  7350 ;; This function is called by:
  7351 ;;		_alarmISR
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           
  7356                           ;psect for function i1___xxtofl
  7357  08B8                     i1___xxtofl:
  7358                           
  7359                           ;incstack = 0
  7360                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
  7361                           ;i1___xxtofl@sign stored from wreg
  7362  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  7363  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  7364  08BA  00A0               	movwf	i1___xxtofl@sign
  7365  08BB                     i1l3856:
  7366  08BB  0820               	movf	i1___xxtofl@sign,w
  7367  08BC  1903               	btfsc	3,2
  7368  08BD  28BF               	goto	u624_21
  7369  08BE  28C0               	goto	u624_20
  7370  08BF                     u624_21:
  7371  08BF  28D4               	goto	i1l3862
  7372  08C0                     u624_20:
  7373  08C0                     i1l3858:
  7374  08C0  1FF8               	btfss	i1___xxtofl@val+3,7
  7375  08C1  28C3               	goto	u625_21
  7376  08C2  28C4               	goto	u625_20
  7377  08C3                     u625_21:
  7378  08C3  28D4               	goto	i1l3862
  7379  08C4                     u625_20:
  7380  08C4                     i1l3860:
  7381  08C4  0975               	comf	i1___xxtofl@val,w
  7382  08C5  00A2               	movwf	i1___xxtofl@arg
  7383  08C6  0976               	comf	i1___xxtofl@val+1,w
  7384  08C7  00A3               	movwf	i1___xxtofl@arg+1
  7385  08C8  0977               	comf	i1___xxtofl@val+2,w
  7386  08C9  00A4               	movwf	i1___xxtofl@arg+2
  7387  08CA  0978               	comf	i1___xxtofl@val+3,w
  7388  08CB  00A5               	movwf	i1___xxtofl@arg+3
  7389  08CC  0AA2               	incf	i1___xxtofl@arg,f
  7390  08CD  1903               	skipnz
  7391  08CE  0AA3               	incf	i1___xxtofl@arg+1,f
  7392  08CF  1903               	skipnz
  7393  08D0  0AA4               	incf	i1___xxtofl@arg+2,f
  7394  08D1  1903               	skipnz
  7395  08D2  0AA5               	incf	i1___xxtofl@arg+3,f
  7396  08D3  28DC               	goto	i1l801
  7397  08D4                     i1l3862:
  7398  08D4  0878               	movf	i1___xxtofl@val+3,w
  7399  08D5  00A5               	movwf	i1___xxtofl@arg+3
  7400  08D6  0877               	movf	i1___xxtofl@val+2,w
  7401  08D7  00A4               	movwf	i1___xxtofl@arg+2
  7402  08D8  0876               	movf	i1___xxtofl@val+1,w
  7403  08D9  00A3               	movwf	i1___xxtofl@arg+1
  7404  08DA  0875               	movf	i1___xxtofl@val,w
  7405  08DB  00A2               	movwf	i1___xxtofl@arg
  7406  08DC                     i1l801:
  7407  08DC  0878               	movf	i1___xxtofl@val+3,w
  7408  08DD  0477               	iorwf	i1___xxtofl@val+2,w
  7409  08DE  0476               	iorwf	i1___xxtofl@val+1,w
  7410  08DF  0475               	iorwf	i1___xxtofl@val,w
  7411  08E0  1D03               	skipz
  7412  08E1  28E3               	goto	u626_21
  7413  08E2  28E4               	goto	u626_20
  7414  08E3                     u626_21:
  7415  08E3  28ED               	goto	i1l3868
  7416  08E4                     u626_20:
  7417  08E4                     i1l3864:
  7418  08E4  3000               	movlw	0
  7419  08E5  00F8               	movwf	?i1___xxtofl+3
  7420  08E6  3000               	movlw	0
  7421  08E7  00F7               	movwf	?i1___xxtofl+2
  7422  08E8  3000               	movlw	0
  7423  08E9  00F6               	movwf	?i1___xxtofl+1
  7424  08EA  3000               	movlw	0
  7425  08EB  00F5               	movwf	?i1___xxtofl
  7426  08EC  2973               	goto	i1l803
  7427  08ED                     i1l3868:
  7428  08ED  3096               	movlw	150
  7429  08EE  00F9               	movwf	??i1___xxtofl
  7430  08EF  0879               	movf	??i1___xxtofl,w
  7431  08F0  00A1               	movwf	i1___xxtofl@exp
  7432  08F1  28FF               	goto	i1l3872
  7433  08F2                     i1l3870:
  7434  08F2  3001               	movlw	1
  7435  08F3  00F9               	movwf	??i1___xxtofl
  7436  08F4  0879               	movf	??i1___xxtofl,w
  7437  08F5  07A1               	addwf	i1___xxtofl@exp,f
  7438  08F6  3001               	movlw	1
  7439  08F7                     u627_25:
  7440  08F7  1003               	clrc
  7441  08F8  0CA5               	rrf	i1___xxtofl@arg+3,f
  7442  08F9  0CA4               	rrf	i1___xxtofl@arg+2,f
  7443  08FA  0CA3               	rrf	i1___xxtofl@arg+1,f
  7444  08FB  0CA2               	rrf	i1___xxtofl@arg,f
  7445  08FC  3EFF               	addlw	-1
  7446  08FD  1D03               	skipz
  7447  08FE  28F7               	goto	u627_25
  7448  08FF                     i1l3872:
  7449  08FF  30FE               	movlw	254
  7450  0900  0525               	andwf	i1___xxtofl@arg+3,w
  7451  0901  1D03               	btfss	3,2
  7452  0902  2904               	goto	u628_21
  7453  0903  2905               	goto	u628_20
  7454  0904                     u628_21:
  7455  0904  28F2               	goto	i1l3870
  7456  0905                     u628_20:
  7457  0905  2921               	goto	i1l807
  7458  0906                     i1l3874:
  7459  0906  3001               	movlw	1
  7460  0907  00F9               	movwf	??i1___xxtofl
  7461  0908  0879               	movf	??i1___xxtofl,w
  7462  0909  07A1               	addwf	i1___xxtofl@exp,f
  7463  090A                     i1l3876:
  7464  090A  3001               	movlw	1
  7465  090B  07A2               	addwf	i1___xxtofl@arg,f
  7466  090C  3000               	movlw	0
  7467  090D  1803               	skipnc
  7468  090E  3001               	movlw	1
  7469  090F  07A3               	addwf	i1___xxtofl@arg+1,f
  7470  0910  3000               	movlw	0
  7471  0911  1803               	skipnc
  7472  0912  3001               	movlw	1
  7473  0913  07A4               	addwf	i1___xxtofl@arg+2,f
  7474  0914  3000               	movlw	0
  7475  0915  1803               	skipnc
  7476  0916  3001               	movlw	1
  7477  0917  07A5               	addwf	i1___xxtofl@arg+3,f
  7478  0918                     i1l3878:
  7479  0918  3001               	movlw	1
  7480  0919                     u629_25:
  7481  0919  1003               	clrc
  7482  091A  0CA5               	rrf	i1___xxtofl@arg+3,f
  7483  091B  0CA4               	rrf	i1___xxtofl@arg+2,f
  7484  091C  0CA3               	rrf	i1___xxtofl@arg+1,f
  7485  091D  0CA2               	rrf	i1___xxtofl@arg,f
  7486  091E  3EFF               	addlw	-1
  7487  091F  1D03               	skipz
  7488  0920  2919               	goto	u629_25
  7489  0921                     i1l807:
  7490  0921  30FF               	movlw	255
  7491  0922  0525               	andwf	i1___xxtofl@arg+3,w
  7492  0923  1D03               	btfss	3,2
  7493  0924  2926               	goto	u630_21
  7494  0925  2927               	goto	u630_20
  7495  0926                     u630_21:
  7496  0926  2906               	goto	i1l3874
  7497  0927                     u630_20:
  7498  0927  2933               	goto	i1l3882
  7499  0928                     i1l3880:
  7500  0928  3001               	movlw	1
  7501  0929  02A1               	subwf	i1___xxtofl@exp,f
  7502  092A  3001               	movlw	1
  7503  092B  00F9               	movwf	??i1___xxtofl
  7504  092C                     u631_25:
  7505  092C  1003               	clrc
  7506  092D  0DA2               	rlf	i1___xxtofl@arg,f
  7507  092E  0DA3               	rlf	i1___xxtofl@arg+1,f
  7508  092F  0DA4               	rlf	i1___xxtofl@arg+2,f
  7509  0930  0DA5               	rlf	i1___xxtofl@arg+3,f
  7510  0931  0BF9               	decfsz	??i1___xxtofl,f
  7511  0932  292C               	goto	u631_25
  7512  0933                     i1l3882:
  7513  0933  1BA4               	btfsc	i1___xxtofl@arg+2,7
  7514  0934  2936               	goto	u632_21
  7515  0935  2937               	goto	u632_20
  7516  0936                     u632_21:
  7517  0936  293D               	goto	i1l814
  7518  0937                     u632_20:
  7519  0937                     i1l3884:
  7520  0937  3002               	movlw	2
  7521  0938  0221               	subwf	i1___xxtofl@exp,w
  7522  0939  1803               	skipnc
  7523  093A  293C               	goto	u633_21
  7524  093B  293D               	goto	u633_20
  7525  093C                     u633_21:
  7526  093C  2928               	goto	i1l3880
  7527  093D                     u633_20:
  7528  093D                     i1l814:
  7529  093D  1821               	btfsc	i1___xxtofl@exp,0
  7530  093E  2940               	goto	u634_21
  7531  093F  2941               	goto	u634_20
  7532  0940                     u634_21:
  7533  0940  2949               	goto	i1l815
  7534  0941                     u634_20:
  7535  0941                     i1l3886:
  7536  0941  30FF               	movlw	255
  7537  0942  05A2               	andwf	i1___xxtofl@arg,f
  7538  0943  30FF               	movlw	255
  7539  0944  05A3               	andwf	i1___xxtofl@arg+1,f
  7540  0945  307F               	movlw	127
  7541  0946  05A4               	andwf	i1___xxtofl@arg+2,f
  7542  0947  30FF               	movlw	255
  7543  0948  05A5               	andwf	i1___xxtofl@arg+3,f
  7544  0949                     i1l815:
  7545  0949  1003               	clrc
  7546  094A  0CA1               	rrf	i1___xxtofl@exp,f
  7547  094B                     i1l3888:
  7548  094B  0821               	movf	i1___xxtofl@exp,w
  7549  094C  00F9               	movwf	??i1___xxtofl
  7550  094D  01FA               	clrf	??i1___xxtofl+1
  7551  094E  01FB               	clrf	??i1___xxtofl+2
  7552  094F  01FC               	clrf	??i1___xxtofl+3
  7553  0950  3018               	movlw	24
  7554  0951                     u635_25:
  7555  0951  1003               	clrc
  7556  0952  0DF9               	rlf	??i1___xxtofl,f
  7557  0953  0DFA               	rlf	??i1___xxtofl+1,f
  7558  0954  0DFB               	rlf	??i1___xxtofl+2,f
  7559  0955  0DFC               	rlf	??i1___xxtofl+3,f
  7560  0956                     u635_20:
  7561  0956  3EFF               	addlw	-1
  7562  0957  1D03               	skipz
  7563  0958  2951               	goto	u635_25
  7564  0959  0879               	movf	??i1___xxtofl,w
  7565  095A  04A2               	iorwf	i1___xxtofl@arg,f
  7566  095B  087A               	movf	??i1___xxtofl+1,w
  7567  095C  04A3               	iorwf	i1___xxtofl@arg+1,f
  7568  095D  087B               	movf	??i1___xxtofl+2,w
  7569  095E  04A4               	iorwf	i1___xxtofl@arg+2,f
  7570  095F  087C               	movf	??i1___xxtofl+3,w
  7571  0960  04A5               	iorwf	i1___xxtofl@arg+3,f
  7572  0961                     i1l3890:
  7573  0961  0820               	movf	i1___xxtofl@sign,w
  7574  0962  1903               	btfsc	3,2
  7575  0963  2965               	goto	u636_21
  7576  0964  2966               	goto	u636_20
  7577  0965                     u636_21:
  7578  0965  296B               	goto	i1l3896
  7579  0966                     u636_20:
  7580  0966                     i1l3892:
  7581  0966  1FF8               	btfss	i1___xxtofl@val+3,7
  7582  0967  2969               	goto	u637_21
  7583  0968  296A               	goto	u637_20
  7584  0969                     u637_21:
  7585  0969  296B               	goto	i1l3896
  7586  096A                     u637_20:
  7587  096A                     i1l3894:
  7588  096A  17A5               	bsf	i1___xxtofl@arg+3,7
  7589  096B                     i1l3896:
  7590  096B  0825               	movf	i1___xxtofl@arg+3,w
  7591  096C  00F8               	movwf	?i1___xxtofl+3
  7592  096D  0824               	movf	i1___xxtofl@arg+2,w
  7593  096E  00F7               	movwf	?i1___xxtofl+2
  7594  096F  0823               	movf	i1___xxtofl@arg+1,w
  7595  0970  00F6               	movwf	?i1___xxtofl+1
  7596  0971  0822               	movf	i1___xxtofl@arg,w
  7597  0972  00F5               	movwf	?i1___xxtofl
  7598  0973                     i1l803:
  7599  0973  0008               	return
  7600  0974                     __end_ofi1___xxtofl:
  7601                           
  7602                           	psect	text31
  7603  038A                     __ptext31:	
  7604 ;; *************** function i1___flmul *****************
  7605 ;; Defined at:
  7606 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  b               4    6[BANK0 ] unsigned char 
  7609 ;;  a               4   10[BANK0 ] unsigned char 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;  prod            4   26[BANK0 ] struct .
  7612 ;;  grs             4   20[BANK0 ] unsigned long 
  7613 ;;  temp            2   30[BANK0 ] struct .
  7614 ;;  bexp            1   25[BANK0 ] unsigned char 
  7615 ;;  aexp            1   24[BANK0 ] unsigned char 
  7616 ;;  sign            1   19[BANK0 ] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  4    6[BANK0 ] unsigned char 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7626 ;;      Params:         0       8       0       0       0
  7627 ;;      Locals:         0      13       0       0       0
  7628 ;;      Temps:          0       5       0       0       0
  7629 ;;      Totals:         0      26       0       0       0
  7630 ;;Total ram usage:       26 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 1
  7633 ;; This function calls:
  7634 ;;		i1__Umul8_16
  7635 ;; This function is called by:
  7636 ;;		_alarmISR
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           
  7641                           ;psect for function i1___flmul
  7642  038A                     i1___flmul:
  7643  038A                     i1l3716:	
  7644                           ;incstack = 0
  7645 ;; hardware stack exceeded
  7646                           ; Regs used in i1___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7647                           
  7648  038A  1283               	bcf	3,5	;RP0=0, select bank0
  7649  038B  1303               	bcf	3,6	;RP1=0, select bank0
  7650  038C  0829               	movf	i1___flmul@b+3,w
  7651  038D  3980               	andlw	128
  7652  038E  00AE               	movwf	??i1___flmul
  7653  038F  082E               	movf	??i1___flmul,w
  7654  0390  00B3               	movwf	i1___flmul@sign
  7655  0391                     i1l3718:
  7656  0391  0829               	movf	i1___flmul@b+3,w
  7657  0392  00AE               	movwf	??i1___flmul
  7658  0393  072E               	addwf	??i1___flmul,w
  7659  0394  00AF               	movwf	??i1___flmul+1
  7660  0395  082F               	movf	??i1___flmul+1,w
  7661  0396  00B9               	movwf	i1___flmul@bexp
  7662  0397                     i1l3720:
  7663  0397  1FA8               	btfss	i1___flmul@b+2,7
  7664  0398  2B9A               	goto	u587_21
  7665  0399  2B9B               	goto	u587_20
  7666  039A                     u587_21:
  7667  039A  2B9C               	goto	i1l3724
  7668  039B                     u587_20:
  7669  039B                     i1l3722:
  7670  039B  1439               	bsf	i1___flmul@bexp,0
  7671  039C                     i1l3724:
  7672  039C  0839               	movf	i1___flmul@bexp,w
  7673  039D  1903               	btfsc	3,2
  7674  039E  2BA0               	goto	u588_21
  7675  039F  2BA1               	goto	u588_20
  7676  03A0                     u588_21:
  7677  03A0  2BB0               	goto	i1l3732
  7678  03A1                     u588_20:
  7679  03A1                     i1l3726:
  7680  03A1  0A39               	incf	i1___flmul@bexp,w
  7681  03A2  1D03               	btfss	3,2
  7682  03A3  2BA5               	goto	u589_21
  7683  03A4  2BA6               	goto	u589_20
  7684  03A5                     u589_21:
  7685  03A5  2BAE               	goto	i1l3730
  7686  03A6                     u589_20:
  7687  03A6                     i1l3728:
  7688  03A6  3000               	movlw	0
  7689  03A7  00A9               	movwf	i1___flmul@b+3
  7690  03A8  3000               	movlw	0
  7691  03A9  00A8               	movwf	i1___flmul@b+2
  7692  03AA  3000               	movlw	0
  7693  03AB  00A7               	movwf	i1___flmul@b+1
  7694  03AC  3000               	movlw	0
  7695  03AD  00A6               	movwf	i1___flmul@b
  7696  03AE                     i1l3730:
  7697  03AE  17A8               	bsf	i1___flmul@b+2,7
  7698  03AF  2BB8               	goto	i1l3734
  7699  03B0                     i1l3732:
  7700  03B0  3000               	movlw	0
  7701  03B1  00A9               	movwf	i1___flmul@b+3
  7702  03B2  3000               	movlw	0
  7703  03B3  00A8               	movwf	i1___flmul@b+2
  7704  03B4  3000               	movlw	0
  7705  03B5  00A7               	movwf	i1___flmul@b+1
  7706  03B6  3000               	movlw	0
  7707  03B7  00A6               	movwf	i1___flmul@b
  7708  03B8                     i1l3734:
  7709  03B8  082D               	movf	i1___flmul@a+3,w
  7710  03B9  3980               	andlw	128
  7711  03BA  00AE               	movwf	??i1___flmul
  7712  03BB  082E               	movf	??i1___flmul,w
  7713  03BC  06B3               	xorwf	i1___flmul@sign,f
  7714  03BD                     i1l3736:
  7715  03BD  082D               	movf	i1___flmul@a+3,w
  7716  03BE  00AE               	movwf	??i1___flmul
  7717  03BF  072E               	addwf	??i1___flmul,w
  7718  03C0  00AF               	movwf	??i1___flmul+1
  7719  03C1  082F               	movf	??i1___flmul+1,w
  7720  03C2  00B8               	movwf	i1___flmul@aexp
  7721  03C3                     i1l3738:
  7722  03C3  1FAC               	btfss	i1___flmul@a+2,7
  7723  03C4  2BC6               	goto	u590_21
  7724  03C5  2BC7               	goto	u590_20
  7725  03C6                     u590_21:
  7726  03C6  2BC8               	goto	i1l3742
  7727  03C7                     u590_20:
  7728  03C7                     i1l3740:
  7729  03C7  1438               	bsf	i1___flmul@aexp,0
  7730  03C8                     i1l3742:
  7731  03C8  0838               	movf	i1___flmul@aexp,w
  7732  03C9  1903               	btfsc	3,2
  7733  03CA  2BCC               	goto	u591_21
  7734  03CB  2BCD               	goto	u591_20
  7735  03CC                     u591_21:
  7736  03CC  2BDC               	goto	i1l3750
  7737  03CD                     u591_20:
  7738  03CD                     i1l3744:
  7739  03CD  0A38               	incf	i1___flmul@aexp,w
  7740  03CE  1D03               	btfss	3,2
  7741  03CF  2BD1               	goto	u592_21
  7742  03D0  2BD2               	goto	u592_20
  7743  03D1                     u592_21:
  7744  03D1  2BDA               	goto	i1l3748
  7745  03D2                     u592_20:
  7746  03D2                     i1l3746:
  7747  03D2  3000               	movlw	0
  7748  03D3  00AD               	movwf	i1___flmul@a+3
  7749  03D4  3000               	movlw	0
  7750  03D5  00AC               	movwf	i1___flmul@a+2
  7751  03D6  3000               	movlw	0
  7752  03D7  00AB               	movwf	i1___flmul@a+1
  7753  03D8  3000               	movlw	0
  7754  03D9  00AA               	movwf	i1___flmul@a
  7755  03DA                     i1l3748:
  7756  03DA  17AC               	bsf	i1___flmul@a+2,7
  7757  03DB  2BE4               	goto	i1l3752
  7758  03DC                     i1l3750:
  7759  03DC  3000               	movlw	0
  7760  03DD  00AD               	movwf	i1___flmul@a+3
  7761  03DE  3000               	movlw	0
  7762  03DF  00AC               	movwf	i1___flmul@a+2
  7763  03E0  3000               	movlw	0
  7764  03E1  00AB               	movwf	i1___flmul@a+1
  7765  03E2  3000               	movlw	0
  7766  03E3  00AA               	movwf	i1___flmul@a
  7767  03E4                     i1l3752:
  7768  03E4  0838               	movf	i1___flmul@aexp,w
  7769  03E5  1903               	btfsc	3,2
  7770  03E6  2BE8               	goto	u593_21
  7771  03E7  2BE9               	goto	u593_20
  7772  03E8                     u593_21:
  7773  03E8  2BEE               	goto	i1l3756
  7774  03E9                     u593_20:
  7775  03E9                     i1l3754:
  7776  03E9  0839               	movf	i1___flmul@bexp,w
  7777  03EA  1D03               	btfss	3,2
  7778  03EB  2BED               	goto	u594_21
  7779  03EC  2BEE               	goto	u594_20
  7780  03ED                     u594_21:
  7781  03ED  2BF7               	goto	i1l3760
  7782  03EE                     u594_20:
  7783  03EE                     i1l3756:
  7784  03EE  3000               	movlw	0
  7785  03EF  00A9               	movwf	?i1___flmul+3
  7786  03F0  3000               	movlw	0
  7787  03F1  00A8               	movwf	?i1___flmul+2
  7788  03F2  3000               	movlw	0
  7789  03F3  00A7               	movwf	?i1___flmul+1
  7790  03F4  3000               	movlw	0
  7791  03F5  00A6               	movwf	?i1___flmul
  7792  03F6  2EEA               	goto	i1l757
  7793  03F7                     i1l3760:
  7794  03F7  0826               	movf	i1___flmul@b,w
  7795  03F8  00AE               	movwf	??i1___flmul
  7796  03F9  082E               	movf	??i1___flmul,w
  7797  03FA  00F0               	movwf	i1__Umul8_16@multiplicand
  7798  03FB  082C               	movf	i1___flmul@a+2,w
  7799  03FC  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  7800  0401  0871               	movf	?i1__Umul8_16+1,w
  7801  0402  1283               	bcf	3,5	;RP0=0, select bank0
  7802  0403  1303               	bcf	3,6	;RP1=0, select bank0
  7803  0404  00BF               	movwf	i1___flmul@temp+1
  7804  0405  0870               	movf	?i1__Umul8_16,w
  7805  0406  00BE               	movwf	i1___flmul@temp
  7806  0407                     i1l3762:
  7807  0407  083E               	movf	i1___flmul@temp,w
  7808  0408  00AE               	movwf	??i1___flmul
  7809  0409  01AF               	clrf	??i1___flmul+1
  7810  040A  01B0               	clrf	??i1___flmul+2
  7811  040B  01B1               	clrf	??i1___flmul+3
  7812  040C  0831               	movf	??i1___flmul+3,w
  7813  040D  00B7               	movwf	i1___flmul@grs+3
  7814  040E  0830               	movf	??i1___flmul+2,w
  7815  040F  00B6               	movwf	i1___flmul@grs+2
  7816  0410  082F               	movf	??i1___flmul+1,w
  7817  0411  00B5               	movwf	i1___flmul@grs+1
  7818  0412  082E               	movf	??i1___flmul,w
  7819  0413  00B4               	movwf	i1___flmul@grs
  7820  0414                     i1l3764:
  7821  0414  083F               	movf	i1___flmul@temp+1,w
  7822  0415  00AE               	movwf	??i1___flmul
  7823  0416  01AF               	clrf	??i1___flmul+1
  7824  0417  01B0               	clrf	??i1___flmul+2
  7825  0418  01B1               	clrf	??i1___flmul+3
  7826  0419  0831               	movf	??i1___flmul+3,w
  7827  041A  00BD               	movwf	i1___flmul@prod+3
  7828  041B  0830               	movf	??i1___flmul+2,w
  7829  041C  00BC               	movwf	i1___flmul@prod+2
  7830  041D  082F               	movf	??i1___flmul+1,w
  7831  041E  00BB               	movwf	i1___flmul@prod+1
  7832  041F  082E               	movf	??i1___flmul,w
  7833  0420  00BA               	movwf	i1___flmul@prod
  7834  0421  0827               	movf	i1___flmul@b+1,w
  7835  0422  00AE               	movwf	??i1___flmul
  7836  0423  082E               	movf	??i1___flmul,w
  7837  0424  00F0               	movwf	i1__Umul8_16@multiplicand
  7838  0425  082B               	movf	i1___flmul@a+1,w
  7839  0426  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  7840  042B  0871               	movf	?i1__Umul8_16+1,w
  7841  042C  1283               	bcf	3,5	;RP0=0, select bank0
  7842  042D  1303               	bcf	3,6	;RP1=0, select bank0
  7843  042E  00BF               	movwf	i1___flmul@temp+1
  7844  042F  0870               	movf	?i1__Umul8_16,w
  7845  0430  00BE               	movwf	i1___flmul@temp
  7846  0431                     i1l3766:
  7847  0431  083E               	movf	i1___flmul@temp,w
  7848  0432  00AE               	movwf	??i1___flmul
  7849  0433  01AF               	clrf	??i1___flmul+1
  7850  0434  01B0               	clrf	??i1___flmul+2
  7851  0435  01B1               	clrf	??i1___flmul+3
  7852  0436  082E               	movf	??i1___flmul,w
  7853  0437  07B4               	addwf	i1___flmul@grs,f
  7854  0438  082F               	movf	??i1___flmul+1,w
  7855  0439  1103               	clrz
  7856  043A  1803               	skipnc
  7857  043B  3E01               	addlw	1
  7858  043C  1903               	skipnz
  7859  043D  2C3F               	goto	u595_21
  7860  043E  07B5               	addwf	i1___flmul@grs+1,f
  7861  043F                     u595_21:
  7862  043F  0830               	movf	??i1___flmul+2,w
  7863  0440  1103               	clrz
  7864  0441  1803               	skipnc
  7865  0442  3E01               	addlw	1
  7866  0443  1903               	skipnz
  7867  0444  2C46               	goto	u595_22
  7868  0445  07B6               	addwf	i1___flmul@grs+2,f
  7869  0446                     u595_22:
  7870  0446  0831               	movf	??i1___flmul+3,w
  7871  0447  1103               	clrz
  7872  0448  1803               	skipnc
  7873  0449  3E01               	addlw	1
  7874  044A  1903               	skipnz
  7875  044B  2C4D               	goto	u595_23
  7876  044C  07B7               	addwf	i1___flmul@grs+3,f
  7877  044D                     u595_23:
  7878  044D                     i1l3768:
  7879  044D  083F               	movf	i1___flmul@temp+1,w
  7880  044E  00AE               	movwf	??i1___flmul
  7881  044F  01AF               	clrf	??i1___flmul+1
  7882  0450  01B0               	clrf	??i1___flmul+2
  7883  0451  01B1               	clrf	??i1___flmul+3
  7884  0452  082E               	movf	??i1___flmul,w
  7885  0453  07BA               	addwf	i1___flmul@prod,f
  7886  0454  082F               	movf	??i1___flmul+1,w
  7887  0455  1103               	clrz
  7888  0456  1803               	skipnc
  7889  0457  3E01               	addlw	1
  7890  0458  1903               	skipnz
  7891  0459  2C5B               	goto	u596_21
  7892  045A  07BB               	addwf	i1___flmul@prod+1,f
  7893  045B                     u596_21:
  7894  045B  0830               	movf	??i1___flmul+2,w
  7895  045C  1103               	clrz
  7896  045D  1803               	skipnc
  7897  045E  3E01               	addlw	1
  7898  045F  1903               	skipnz
  7899  0460  2C62               	goto	u596_22
  7900  0461  07BC               	addwf	i1___flmul@prod+2,f
  7901  0462                     u596_22:
  7902  0462  0831               	movf	??i1___flmul+3,w
  7903  0463  1103               	clrz
  7904  0464  1803               	skipnc
  7905  0465  3E01               	addlw	1
  7906  0466  1903               	skipnz
  7907  0467  2C69               	goto	u596_23
  7908  0468  07BD               	addwf	i1___flmul@prod+3,f
  7909  0469                     u596_23:
  7910  0469  0828               	movf	i1___flmul@b+2,w
  7911  046A  00AE               	movwf	??i1___flmul
  7912  046B  082E               	movf	??i1___flmul,w
  7913  046C  00F0               	movwf	i1__Umul8_16@multiplicand
  7914  046D  082A               	movf	i1___flmul@a,w
  7915  046E  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  7916  0473  0871               	movf	?i1__Umul8_16+1,w
  7917  0474  1283               	bcf	3,5	;RP0=0, select bank0
  7918  0475  1303               	bcf	3,6	;RP1=0, select bank0
  7919  0476  00BF               	movwf	i1___flmul@temp+1
  7920  0477  0870               	movf	?i1__Umul8_16,w
  7921  0478  00BE               	movwf	i1___flmul@temp
  7922  0479                     i1l3770:
  7923  0479  083E               	movf	i1___flmul@temp,w
  7924  047A  00AE               	movwf	??i1___flmul
  7925  047B  01AF               	clrf	??i1___flmul+1
  7926  047C  01B0               	clrf	??i1___flmul+2
  7927  047D  01B1               	clrf	??i1___flmul+3
  7928  047E  082E               	movf	??i1___flmul,w
  7929  047F  07B4               	addwf	i1___flmul@grs,f
  7930  0480  082F               	movf	??i1___flmul+1,w
  7931  0481  1103               	clrz
  7932  0482  1803               	skipnc
  7933  0483  3E01               	addlw	1
  7934  0484  1903               	skipnz
  7935  0485  2C87               	goto	u597_21
  7936  0486  07B5               	addwf	i1___flmul@grs+1,f
  7937  0487                     u597_21:
  7938  0487  0830               	movf	??i1___flmul+2,w
  7939  0488  1103               	clrz
  7940  0489  1803               	skipnc
  7941  048A  3E01               	addlw	1
  7942  048B  1903               	skipnz
  7943  048C  2C8E               	goto	u597_22
  7944  048D  07B6               	addwf	i1___flmul@grs+2,f
  7945  048E                     u597_22:
  7946  048E  0831               	movf	??i1___flmul+3,w
  7947  048F  1103               	clrz
  7948  0490  1803               	skipnc
  7949  0491  3E01               	addlw	1
  7950  0492  1903               	skipnz
  7951  0493  2C95               	goto	u597_23
  7952  0494  07B7               	addwf	i1___flmul@grs+3,f
  7953  0495                     u597_23:
  7954  0495                     i1l3772:
  7955  0495  083F               	movf	i1___flmul@temp+1,w
  7956  0496  00AE               	movwf	??i1___flmul
  7957  0497  01AF               	clrf	??i1___flmul+1
  7958  0498  01B0               	clrf	??i1___flmul+2
  7959  0499  01B1               	clrf	??i1___flmul+3
  7960  049A  082E               	movf	??i1___flmul,w
  7961  049B  07BA               	addwf	i1___flmul@prod,f
  7962  049C  082F               	movf	??i1___flmul+1,w
  7963  049D  1103               	clrz
  7964  049E  1803               	skipnc
  7965  049F  3E01               	addlw	1
  7966  04A0  1903               	skipnz
  7967  04A1  2CA3               	goto	u598_21
  7968  04A2  07BB               	addwf	i1___flmul@prod+1,f
  7969  04A3                     u598_21:
  7970  04A3  0830               	movf	??i1___flmul+2,w
  7971  04A4  1103               	clrz
  7972  04A5  1803               	skipnc
  7973  04A6  3E01               	addlw	1
  7974  04A7  1903               	skipnz
  7975  04A8  2CAA               	goto	u598_22
  7976  04A9  07BC               	addwf	i1___flmul@prod+2,f
  7977  04AA                     u598_22:
  7978  04AA  0831               	movf	??i1___flmul+3,w
  7979  04AB  1103               	clrz
  7980  04AC  1803               	skipnc
  7981  04AD  3E01               	addlw	1
  7982  04AE  1903               	skipnz
  7983  04AF  2CB1               	goto	u598_23
  7984  04B0  07BD               	addwf	i1___flmul@prod+3,f
  7985  04B1                     u598_23:
  7986  04B1                     i1l3774:
  7987  04B1  3008               	movlw	8
  7988  04B2  00AE               	movwf	??i1___flmul
  7989  04B3                     u599_25:
  7990  04B3  1003               	clrc
  7991  04B4  0DB4               	rlf	i1___flmul@grs,f
  7992  04B5  0DB5               	rlf	i1___flmul@grs+1,f
  7993  04B6  0DB6               	rlf	i1___flmul@grs+2,f
  7994  04B7  0DB7               	rlf	i1___flmul@grs+3,f
  7995  04B8  0BAE               	decfsz	??i1___flmul,f
  7996  04B9  2CB3               	goto	u599_25
  7997  04BA                     i1l3776:
  7998  04BA  0827               	movf	i1___flmul@b+1,w
  7999  04BB  00AE               	movwf	??i1___flmul
  8000  04BC  082E               	movf	??i1___flmul,w
  8001  04BD  00F0               	movwf	i1__Umul8_16@multiplicand
  8002  04BE  082A               	movf	i1___flmul@a,w
  8003  04BF  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  8004  04C4  0871               	movf	?i1__Umul8_16+1,w
  8005  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  8006  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  8007  04C7  00BF               	movwf	i1___flmul@temp+1
  8008  04C8  0870               	movf	?i1__Umul8_16,w
  8009  04C9  00BE               	movwf	i1___flmul@temp
  8010  04CA                     i1l3778:
  8011  04CA  083E               	movf	i1___flmul@temp,w
  8012  04CB  00AE               	movwf	??i1___flmul
  8013  04CC  083F               	movf	i1___flmul@temp+1,w
  8014  04CD  00AF               	movwf	??i1___flmul+1
  8015  04CE  01B0               	clrf	??i1___flmul+2
  8016  04CF  01B1               	clrf	??i1___flmul+3
  8017  04D0  082E               	movf	??i1___flmul,w
  8018  04D1  07B4               	addwf	i1___flmul@grs,f
  8019  04D2  082F               	movf	??i1___flmul+1,w
  8020  04D3  1103               	clrz
  8021  04D4  1803               	skipnc
  8022  04D5  3E01               	addlw	1
  8023  04D6  1903               	skipnz
  8024  04D7  2CD9               	goto	u600_21
  8025  04D8  07B5               	addwf	i1___flmul@grs+1,f
  8026  04D9                     u600_21:
  8027  04D9  0830               	movf	??i1___flmul+2,w
  8028  04DA  1103               	clrz
  8029  04DB  1803               	skipnc
  8030  04DC  3E01               	addlw	1
  8031  04DD  1903               	skipnz
  8032  04DE  2CE0               	goto	u600_22
  8033  04DF  07B6               	addwf	i1___flmul@grs+2,f
  8034  04E0                     u600_22:
  8035  04E0  0831               	movf	??i1___flmul+3,w
  8036  04E1  1103               	clrz
  8037  04E2  1803               	skipnc
  8038  04E3  3E01               	addlw	1
  8039  04E4  1903               	skipnz
  8040  04E5  2CE7               	goto	u600_23
  8041  04E6  07B7               	addwf	i1___flmul@grs+3,f
  8042  04E7                     u600_23:
  8043  04E7                     i1l3780:
  8044  04E7  0826               	movf	i1___flmul@b,w
  8045  04E8  00AE               	movwf	??i1___flmul
  8046  04E9  082E               	movf	??i1___flmul,w
  8047  04EA  00F0               	movwf	i1__Umul8_16@multiplicand
  8048  04EB  082B               	movf	i1___flmul@a+1,w
  8049  04EC  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  8050  04F1  0871               	movf	?i1__Umul8_16+1,w
  8051  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  8052  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  8053  04F4  00BF               	movwf	i1___flmul@temp+1
  8054  04F5  0870               	movf	?i1__Umul8_16,w
  8055  04F6  00BE               	movwf	i1___flmul@temp
  8056  04F7                     i1l3782:
  8057  04F7  083E               	movf	i1___flmul@temp,w
  8058  04F8  00AE               	movwf	??i1___flmul
  8059  04F9  083F               	movf	i1___flmul@temp+1,w
  8060  04FA  00AF               	movwf	??i1___flmul+1
  8061  04FB  01B0               	clrf	??i1___flmul+2
  8062  04FC  01B1               	clrf	??i1___flmul+3
  8063  04FD  082E               	movf	??i1___flmul,w
  8064  04FE  07B4               	addwf	i1___flmul@grs,f
  8065  04FF  082F               	movf	??i1___flmul+1,w
  8066  0500  1103               	clrz
  8067  0501  1803               	skipnc
  8068  0502  3E01               	addlw	1
  8069  0503  1903               	skipnz
  8070  0504  2D06               	goto	u601_21
  8071  0505  07B5               	addwf	i1___flmul@grs+1,f
  8072  0506                     u601_21:
  8073  0506  0830               	movf	??i1___flmul+2,w
  8074  0507  1103               	clrz
  8075  0508  1803               	skipnc
  8076  0509  3E01               	addlw	1
  8077  050A  1903               	skipnz
  8078  050B  2D0D               	goto	u601_22
  8079  050C  07B6               	addwf	i1___flmul@grs+2,f
  8080  050D                     u601_22:
  8081  050D  0831               	movf	??i1___flmul+3,w
  8082  050E  1103               	clrz
  8083  050F  1803               	skipnc
  8084  0510  3E01               	addlw	1
  8085  0511  1903               	skipnz
  8086  0512  2D14               	goto	u601_23
  8087  0513  07B7               	addwf	i1___flmul@grs+3,f
  8088  0514                     u601_23:
  8089  0514                     i1l3784:
  8090  0514  3008               	movlw	8
  8091  0515  00AE               	movwf	??i1___flmul
  8092  0516                     u602_25:
  8093  0516  1003               	clrc
  8094  0517  0DB4               	rlf	i1___flmul@grs,f
  8095  0518  0DB5               	rlf	i1___flmul@grs+1,f
  8096  0519  0DB6               	rlf	i1___flmul@grs+2,f
  8097  051A  0DB7               	rlf	i1___flmul@grs+3,f
  8098  051B  0BAE               	decfsz	??i1___flmul,f
  8099  051C  2D16               	goto	u602_25
  8100  051D  0826               	movf	i1___flmul@b,w
  8101  051E  00AE               	movwf	??i1___flmul
  8102  051F  082E               	movf	??i1___flmul,w
  8103  0520  00F0               	movwf	i1__Umul8_16@multiplicand
  8104  0521  082A               	movf	i1___flmul@a,w
  8105  0522  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  8106  0527  0871               	movf	?i1__Umul8_16+1,w
  8107  0528  1283               	bcf	3,5	;RP0=0, select bank0
  8108  0529  1303               	bcf	3,6	;RP1=0, select bank0
  8109  052A  00BF               	movwf	i1___flmul@temp+1
  8110  052B  0870               	movf	?i1__Umul8_16,w
  8111  052C  00BE               	movwf	i1___flmul@temp
  8112  052D                     i1l3786:
  8113  052D  083E               	movf	i1___flmul@temp,w
  8114  052E  00AE               	movwf	??i1___flmul
  8115  052F  083F               	movf	i1___flmul@temp+1,w
  8116  0530  00AF               	movwf	??i1___flmul+1
  8117  0531  01B0               	clrf	??i1___flmul+2
  8118  0532  01B1               	clrf	??i1___flmul+3
  8119  0533  082E               	movf	??i1___flmul,w
  8120  0534  07B4               	addwf	i1___flmul@grs,f
  8121  0535  082F               	movf	??i1___flmul+1,w
  8122  0536  1103               	clrz
  8123  0537  1803               	skipnc
  8124  0538  3E01               	addlw	1
  8125  0539  1903               	skipnz
  8126  053A  2D3C               	goto	u603_21
  8127  053B  07B5               	addwf	i1___flmul@grs+1,f
  8128  053C                     u603_21:
  8129  053C  0830               	movf	??i1___flmul+2,w
  8130  053D  1103               	clrz
  8131  053E  1803               	skipnc
  8132  053F  3E01               	addlw	1
  8133  0540  1903               	skipnz
  8134  0541  2D43               	goto	u603_22
  8135  0542  07B6               	addwf	i1___flmul@grs+2,f
  8136  0543                     u603_22:
  8137  0543  0831               	movf	??i1___flmul+3,w
  8138  0544  1103               	clrz
  8139  0545  1803               	skipnc
  8140  0546  3E01               	addlw	1
  8141  0547  1903               	skipnz
  8142  0548  2D4A               	goto	u603_23
  8143  0549  07B7               	addwf	i1___flmul@grs+3,f
  8144  054A                     u603_23:
  8145  054A                     i1l3788:
  8146  054A  0827               	movf	i1___flmul@b+1,w
  8147  054B  00AE               	movwf	??i1___flmul
  8148  054C  082E               	movf	??i1___flmul,w
  8149  054D  00F0               	movwf	i1__Umul8_16@multiplicand
  8150  054E  082C               	movf	i1___flmul@a+2,w
  8151  054F  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  8152  0554  0871               	movf	?i1__Umul8_16+1,w
  8153  0555  1283               	bcf	3,5	;RP0=0, select bank0
  8154  0556  1303               	bcf	3,6	;RP1=0, select bank0
  8155  0557  00BF               	movwf	i1___flmul@temp+1
  8156  0558  0870               	movf	?i1__Umul8_16,w
  8157  0559  00BE               	movwf	i1___flmul@temp
  8158  055A  083E               	movf	i1___flmul@temp,w
  8159  055B  00AE               	movwf	??i1___flmul
  8160  055C  083F               	movf	i1___flmul@temp+1,w
  8161  055D  00AF               	movwf	??i1___flmul+1
  8162  055E  01B0               	clrf	??i1___flmul+2
  8163  055F  01B1               	clrf	??i1___flmul+3
  8164  0560  082E               	movf	??i1___flmul,w
  8165  0561  07BA               	addwf	i1___flmul@prod,f
  8166  0562  082F               	movf	??i1___flmul+1,w
  8167  0563  1103               	clrz
  8168  0564  1803               	skipnc
  8169  0565  3E01               	addlw	1
  8170  0566  1903               	skipnz
  8171  0567  2D69               	goto	u604_21
  8172  0568  07BB               	addwf	i1___flmul@prod+1,f
  8173  0569                     u604_21:
  8174  0569  0830               	movf	??i1___flmul+2,w
  8175  056A  1103               	clrz
  8176  056B  1803               	skipnc
  8177  056C  3E01               	addlw	1
  8178  056D  1903               	skipnz
  8179  056E  2D70               	goto	u604_22
  8180  056F  07BC               	addwf	i1___flmul@prod+2,f
  8181  0570                     u604_22:
  8182  0570  0831               	movf	??i1___flmul+3,w
  8183  0571  1103               	clrz
  8184  0572  1803               	skipnc
  8185  0573  3E01               	addlw	1
  8186  0574  1903               	skipnz
  8187  0575  2D77               	goto	u604_23
  8188  0576  07BD               	addwf	i1___flmul@prod+3,f
  8189  0577                     u604_23:
  8190  0577                     i1l3790:
  8191  0577  0828               	movf	i1___flmul@b+2,w
  8192  0578  00AE               	movwf	??i1___flmul
  8193  0579  082E               	movf	??i1___flmul,w
  8194  057A  00F0               	movwf	i1__Umul8_16@multiplicand
  8195  057B  082B               	movf	i1___flmul@a+1,w
  8196  057C  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  8197  0581  0871               	movf	?i1__Umul8_16+1,w
  8198  0582  1283               	bcf	3,5	;RP0=0, select bank0
  8199  0583  1303               	bcf	3,6	;RP1=0, select bank0
  8200  0584  00BF               	movwf	i1___flmul@temp+1
  8201  0585  0870               	movf	?i1__Umul8_16,w
  8202  0586  00BE               	movwf	i1___flmul@temp
  8203  0587                     i1l3792:
  8204  0587  083E               	movf	i1___flmul@temp,w
  8205  0588  00AE               	movwf	??i1___flmul
  8206  0589  083F               	movf	i1___flmul@temp+1,w
  8207  058A  00AF               	movwf	??i1___flmul+1
  8208  058B  01B0               	clrf	??i1___flmul+2
  8209  058C  01B1               	clrf	??i1___flmul+3
  8210  058D  082E               	movf	??i1___flmul,w
  8211  058E  07BA               	addwf	i1___flmul@prod,f
  8212  058F  082F               	movf	??i1___flmul+1,w
  8213  0590  1103               	clrz
  8214  0591  1803               	skipnc
  8215  0592  3E01               	addlw	1
  8216  0593  1903               	skipnz
  8217  0594  2D96               	goto	u605_21
  8218  0595  07BB               	addwf	i1___flmul@prod+1,f
  8219  0596                     u605_21:
  8220  0596  0830               	movf	??i1___flmul+2,w
  8221  0597  1103               	clrz
  8222  0598  1803               	skipnc
  8223  0599  3E01               	addlw	1
  8224  059A  1903               	skipnz
  8225  059B  2D9D               	goto	u605_22
  8226  059C  07BC               	addwf	i1___flmul@prod+2,f
  8227  059D                     u605_22:
  8228  059D  0831               	movf	??i1___flmul+3,w
  8229  059E  1103               	clrz
  8230  059F  1803               	skipnc
  8231  05A0  3E01               	addlw	1
  8232  05A1  1903               	skipnz
  8233  05A2  2DA4               	goto	u605_23
  8234  05A3  07BD               	addwf	i1___flmul@prod+3,f
  8235  05A4                     u605_23:
  8236  05A4  0828               	movf	i1___flmul@b+2,w
  8237  05A5  00AE               	movwf	??i1___flmul
  8238  05A6  082E               	movf	??i1___flmul,w
  8239  05A7  00F0               	movwf	i1__Umul8_16@multiplicand
  8240  05A8  082C               	movf	i1___flmul@a+2,w
  8241  05A9  120A  118A  27D8  120A  118A  	fcall	i1__Umul8_16
  8242  05AE  0871               	movf	?i1__Umul8_16+1,w
  8243  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  8244  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  8245  05B1  00BF               	movwf	i1___flmul@temp+1
  8246  05B2  0870               	movf	?i1__Umul8_16,w
  8247  05B3  00BE               	movwf	i1___flmul@temp
  8248  05B4                     i1l3794:
  8249  05B4  083E               	movf	i1___flmul@temp,w
  8250  05B5  00AE               	movwf	??i1___flmul
  8251  05B6  083F               	movf	i1___flmul@temp+1,w
  8252  05B7  00AF               	movwf	??i1___flmul+1
  8253  05B8  01B0               	clrf	??i1___flmul+2
  8254  05B9  01B1               	clrf	??i1___flmul+3
  8255  05BA  3008               	movlw	8
  8256  05BB                     u606_25:
  8257  05BB  1003               	clrc
  8258  05BC  0DAE               	rlf	??i1___flmul,f
  8259  05BD  0DAF               	rlf	??i1___flmul+1,f
  8260  05BE  0DB0               	rlf	??i1___flmul+2,f
  8261  05BF  0DB1               	rlf	??i1___flmul+3,f
  8262  05C0                     u606_20:
  8263  05C0  3EFF               	addlw	-1
  8264  05C1  1D03               	skipz
  8265  05C2  2DBB               	goto	u606_25
  8266  05C3  082E               	movf	??i1___flmul,w
  8267  05C4  07BA               	addwf	i1___flmul@prod,f
  8268  05C5  082F               	movf	??i1___flmul+1,w
  8269  05C6  1103               	clrz
  8270  05C7  1803               	skipnc
  8271  05C8  3E01               	addlw	1
  8272  05C9  1903               	skipnz
  8273  05CA  2DCC               	goto	u607_21
  8274  05CB  07BB               	addwf	i1___flmul@prod+1,f
  8275  05CC                     u607_21:
  8276  05CC  0830               	movf	??i1___flmul+2,w
  8277  05CD  1103               	clrz
  8278  05CE  1803               	skipnc
  8279  05CF  3E01               	addlw	1
  8280  05D0  1903               	skipnz
  8281  05D1  2DD3               	goto	u607_22
  8282  05D2  07BC               	addwf	i1___flmul@prod+2,f
  8283  05D3                     u607_22:
  8284  05D3  0831               	movf	??i1___flmul+3,w
  8285  05D4  1103               	clrz
  8286  05D5  1803               	skipnc
  8287  05D6  3E01               	addlw	1
  8288  05D7  1903               	skipnz
  8289  05D8  2DDA               	goto	u607_23
  8290  05D9  07BD               	addwf	i1___flmul@prod+3,f
  8291  05DA                     u607_23:
  8292  05DA                     i1l3796:
  8293  05DA  0834               	movf	i1___flmul@grs,w
  8294  05DB  00AE               	movwf	??i1___flmul
  8295  05DC  0835               	movf	i1___flmul@grs+1,w
  8296  05DD  00AF               	movwf	??i1___flmul+1
  8297  05DE  0836               	movf	i1___flmul@grs+2,w
  8298  05DF  00B0               	movwf	??i1___flmul+2
  8299  05E0  0837               	movf	i1___flmul@grs+3,w
  8300  05E1  00B1               	movwf	??i1___flmul+3
  8301  05E2  3018               	movlw	24
  8302  05E3                     u608_25:
  8303  05E3  1003               	clrc
  8304  05E4  0CB1               	rrf	??i1___flmul+3,f
  8305  05E5  0CB0               	rrf	??i1___flmul+2,f
  8306  05E6  0CAF               	rrf	??i1___flmul+1,f
  8307  05E7  0CAE               	rrf	??i1___flmul,f
  8308  05E8                     u608_20:
  8309  05E8  3EFF               	addlw	-1
  8310  05E9  1D03               	skipz
  8311  05EA  2DE3               	goto	u608_25
  8312  05EB  082E               	movf	??i1___flmul,w
  8313  05EC  07BA               	addwf	i1___flmul@prod,f
  8314  05ED  082F               	movf	??i1___flmul+1,w
  8315  05EE  1103               	clrz
  8316  05EF  1803               	skipnc
  8317  05F0  3E01               	addlw	1
  8318  05F1  1903               	skipnz
  8319  05F2  2DF4               	goto	u609_21
  8320  05F3  07BB               	addwf	i1___flmul@prod+1,f
  8321  05F4                     u609_21:
  8322  05F4  0830               	movf	??i1___flmul+2,w
  8323  05F5  1103               	clrz
  8324  05F6  1803               	skipnc
  8325  05F7  3E01               	addlw	1
  8326  05F8  1903               	skipnz
  8327  05F9  2DFB               	goto	u609_22
  8328  05FA  07BC               	addwf	i1___flmul@prod+2,f
  8329  05FB                     u609_22:
  8330  05FB  0831               	movf	??i1___flmul+3,w
  8331  05FC  1103               	clrz
  8332  05FD  1803               	skipnc
  8333  05FE  3E01               	addlw	1
  8334  05FF  1903               	skipnz
  8335  0600  2E02               	goto	u609_23
  8336  0601  07BD               	addwf	i1___flmul@prod+3,f
  8337  0602                     u609_23:
  8338  0602                     i1l3798:
  8339  0602  3008               	movlw	8
  8340  0603  00AE               	movwf	??i1___flmul
  8341  0604                     u610_25:
  8342  0604  1003               	clrc
  8343  0605  0DB4               	rlf	i1___flmul@grs,f
  8344  0606  0DB5               	rlf	i1___flmul@grs+1,f
  8345  0607  0DB6               	rlf	i1___flmul@grs+2,f
  8346  0608  0DB7               	rlf	i1___flmul@grs+3,f
  8347  0609  0BAE               	decfsz	??i1___flmul,f
  8348  060A  2E04               	goto	u610_25
  8349  060B                     i1l3800:
  8350  060B  0839               	movf	i1___flmul@bexp,w
  8351  060C  0738               	addwf	i1___flmul@aexp,w
  8352  060D  00AE               	movwf	??i1___flmul
  8353  060E  01AF               	clrf	??i1___flmul+1
  8354  060F  0DAF               	rlf	??i1___flmul+1,f
  8355  0610  082E               	movf	??i1___flmul,w
  8356  0611  3E82               	addlw	130
  8357  0612  00BE               	movwf	i1___flmul@temp
  8358  0613  082F               	movf	??i1___flmul+1,w
  8359  0614  1803               	skipnc
  8360  0615  3E01               	addlw	1
  8361  0616  3EFF               	addlw	255
  8362  0617  00BF               	movwf	i1___flmul@temp+1
  8363  0618  2E36               	goto	i1l3812
  8364  0619                     i1l3802:
  8365  0619  3001               	movlw	1
  8366  061A  00AE               	movwf	??i1___flmul
  8367  061B                     u611_25:
  8368  061B  1003               	clrc
  8369  061C  0DBA               	rlf	i1___flmul@prod,f
  8370  061D  0DBB               	rlf	i1___flmul@prod+1,f
  8371  061E  0DBC               	rlf	i1___flmul@prod+2,f
  8372  061F  0DBD               	rlf	i1___flmul@prod+3,f
  8373  0620  0BAE               	decfsz	??i1___flmul,f
  8374  0621  2E1B               	goto	u611_25
  8375  0622                     i1l3804:
  8376  0622  1FB7               	btfss	i1___flmul@grs+3,7
  8377  0623  2E25               	goto	u612_21
  8378  0624  2E26               	goto	u612_20
  8379  0625                     u612_21:
  8380  0625  2E27               	goto	i1l3808
  8381  0626                     u612_20:
  8382  0626                     i1l3806:
  8383  0626  143A               	bsf	i1___flmul@prod,0
  8384  0627                     i1l3808:
  8385  0627  3001               	movlw	1
  8386  0628  00AE               	movwf	??i1___flmul
  8387  0629                     u613_25:
  8388  0629  1003               	clrc
  8389  062A  0DB4               	rlf	i1___flmul@grs,f
  8390  062B  0DB5               	rlf	i1___flmul@grs+1,f
  8391  062C  0DB6               	rlf	i1___flmul@grs+2,f
  8392  062D  0DB7               	rlf	i1___flmul@grs+3,f
  8393  062E  0BAE               	decfsz	??i1___flmul,f
  8394  062F  2E29               	goto	u613_25
  8395  0630                     i1l3810:
  8396  0630  30FF               	movlw	255
  8397  0631  07BE               	addwf	i1___flmul@temp,f
  8398  0632  1803               	skipnc
  8399  0633  0ABF               	incf	i1___flmul@temp+1,f
  8400  0634  30FF               	movlw	255
  8401  0635  07BF               	addwf	i1___flmul@temp+1,f
  8402  0636                     i1l3812:
  8403  0636  1FBC               	btfss	i1___flmul@prod+2,7
  8404  0637  2E39               	goto	u614_21
  8405  0638  2E3A               	goto	u614_20
  8406  0639                     u614_21:
  8407  0639  2E19               	goto	i1l3802
  8408  063A                     u614_20:
  8409  063A                     i1l3814:
  8410  063A  01B8               	clrf	i1___flmul@aexp
  8411  063B                     i1l3816:
  8412  063B  1FB7               	btfss	i1___flmul@grs+3,7
  8413  063C  2E3E               	goto	u615_21
  8414  063D  2E3F               	goto	u615_20
  8415  063E                     u615_21:
  8416  063E  2E5B               	goto	i1l3824
  8417  063F                     u615_20:
  8418  063F                     i1l3818:
  8419  063F  30FF               	movlw	255
  8420  0640  0534               	andwf	i1___flmul@grs,w
  8421  0641  00AE               	movwf	??i1___flmul
  8422  0642  30FF               	movlw	255
  8423  0643  0535               	andwf	i1___flmul@grs+1,w
  8424  0644  00AF               	movwf	??i1___flmul+1
  8425  0645  30FF               	movlw	255
  8426  0646  0536               	andwf	i1___flmul@grs+2,w
  8427  0647  00B0               	movwf	??i1___flmul+2
  8428  0648  307F               	movlw	127
  8429  0649  0537               	andwf	i1___flmul@grs+3,w
  8430  064A  00B1               	movwf	??i1___flmul+3
  8431  064B  0831               	movf	??i1___flmul+3,w
  8432  064C  0430               	iorwf	??i1___flmul+2,w
  8433  064D  042F               	iorwf	??i1___flmul+1,w
  8434  064E  042E               	iorwf	??i1___flmul,w
  8435  064F  1903               	skipnz
  8436  0650  2E52               	goto	u616_21
  8437  0651  2E53               	goto	u616_20
  8438  0652                     u616_21:
  8439  0652  2E56               	goto	i1l763
  8440  0653                     u616_20:
  8441  0653                     i1l3820:
  8442  0653  01B8               	clrf	i1___flmul@aexp
  8443  0654  0AB8               	incf	i1___flmul@aexp,f
  8444  0655  2E5B               	goto	i1l3824
  8445  0656                     i1l763:
  8446  0656  1C3A               	btfss	i1___flmul@prod,0
  8447  0657  2E59               	goto	u617_21
  8448  0658  2E5A               	goto	u617_20
  8449  0659                     u617_21:
  8450  0659  2E5B               	goto	i1l3824
  8451  065A                     u617_20:
  8452  065A  2E53               	goto	i1l3820
  8453  065B                     i1l3824:
  8454  065B  0838               	movf	i1___flmul@aexp,w
  8455  065C  1903               	btfsc	3,2
  8456  065D  2E5F               	goto	u618_21
  8457  065E  2E60               	goto	u618_20
  8458  065F                     u618_21:
  8459  065F  2E91               	goto	i1l3834
  8460  0660                     u618_20:
  8461  0660                     i1l3826:
  8462  0660  3001               	movlw	1
  8463  0661  07BA               	addwf	i1___flmul@prod,f
  8464  0662  3000               	movlw	0
  8465  0663  1803               	skipnc
  8466  0664  3001               	movlw	1
  8467  0665  07BB               	addwf	i1___flmul@prod+1,f
  8468  0666  3000               	movlw	0
  8469  0667  1803               	skipnc
  8470  0668  3001               	movlw	1
  8471  0669  07BC               	addwf	i1___flmul@prod+2,f
  8472  066A  3000               	movlw	0
  8473  066B  1803               	skipnc
  8474  066C  3001               	movlw	1
  8475  066D  07BD               	addwf	i1___flmul@prod+3,f
  8476  066E                     i1l3828:
  8477  066E  1C3D               	btfss	i1___flmul@prod+3,0
  8478  066F  2E71               	goto	u619_21
  8479  0670  2E72               	goto	u619_20
  8480  0671                     u619_21:
  8481  0671  2E91               	goto	i1l3834
  8482  0672                     u619_20:
  8483  0672                     i1l3830:
  8484  0672  083A               	movf	i1___flmul@prod,w
  8485  0673  00AE               	movwf	??i1___flmul
  8486  0674  083B               	movf	i1___flmul@prod+1,w
  8487  0675  00AF               	movwf	??i1___flmul+1
  8488  0676  083C               	movf	i1___flmul@prod+2,w
  8489  0677  00B0               	movwf	??i1___flmul+2
  8490  0678  083D               	movf	i1___flmul@prod+3,w
  8491  0679  00B1               	movwf	??i1___flmul+3
  8492  067A  3001               	movlw	1
  8493  067B  00B2               	movwf	??i1___flmul+4
  8494  067C                     u620_25:
  8495  067C  0D31               	rlf	??i1___flmul+3,w
  8496  067D  0CB1               	rrf	??i1___flmul+3,f
  8497  067E  0CB0               	rrf	??i1___flmul+2,f
  8498  067F  0CAF               	rrf	??i1___flmul+1,f
  8499  0680  0CAE               	rrf	??i1___flmul,f
  8500  0681                     u620_20:
  8501  0681  0BB2               	decfsz	??i1___flmul+4,f
  8502  0682  2E7C               	goto	u620_25
  8503  0683  0831               	movf	??i1___flmul+3,w
  8504  0684  00BD               	movwf	i1___flmul@prod+3
  8505  0685  0830               	movf	??i1___flmul+2,w
  8506  0686  00BC               	movwf	i1___flmul@prod+2
  8507  0687  082F               	movf	??i1___flmul+1,w
  8508  0688  00BB               	movwf	i1___flmul@prod+1
  8509  0689  082E               	movf	??i1___flmul,w
  8510  068A  00BA               	movwf	i1___flmul@prod
  8511  068B                     i1l3832:
  8512  068B  3001               	movlw	1
  8513  068C  07BE               	addwf	i1___flmul@temp,f
  8514  068D  1803               	skipnc
  8515  068E  0ABF               	incf	i1___flmul@temp+1,f
  8516  068F  3000               	movlw	0
  8517  0690  07BF               	addwf	i1___flmul@temp+1,f
  8518  0691                     i1l3834:
  8519  0691  083F               	movf	i1___flmul@temp+1,w
  8520  0692  3A80               	xorlw	128
  8521  0693  00FF               	movwf	btemp+1
  8522  0694  3080               	movlw	128
  8523  0695  027F               	subwf	btemp+1,w
  8524  0696  1D03               	skipz
  8525  0697  2E9A               	goto	u621_25
  8526  0698  30FF               	movlw	255
  8527  0699  023E               	subwf	i1___flmul@temp,w
  8528  069A                     u621_25:
  8529  069A  1C03               	skipc
  8530  069B  2E9D               	goto	u621_21
  8531  069C  2E9E               	goto	u621_20
  8532  069D                     u621_21:
  8533  069D  2EA9               	goto	i1l3838
  8534  069E                     u621_20:
  8535  069E                     i1l3836:
  8536  069E  307F               	movlw	127
  8537  069F  1283               	bcf	3,5	;RP0=0, select bank0
  8538  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  8539  06A1  00BD               	movwf	i1___flmul@prod+3
  8540  06A2  3080               	movlw	128
  8541  06A3  00BC               	movwf	i1___flmul@prod+2
  8542  06A4  3000               	movlw	0
  8543  06A5  00BB               	movwf	i1___flmul@prod+1
  8544  06A6  3000               	movlw	0
  8545  06A7  00BA               	movwf	i1___flmul@prod
  8546  06A8  2EDE               	goto	i1l769
  8547  06A9                     i1l3838:
  8548  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  8549  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  8550  06AB  083F               	movf	i1___flmul@temp+1,w
  8551  06AC  3A80               	xorlw	128
  8552  06AD  00FF               	movwf	btemp+1
  8553  06AE  3080               	movlw	128
  8554  06AF  027F               	subwf	btemp+1,w
  8555  06B0  1D03               	skipz
  8556  06B1  2EB4               	goto	u622_25
  8557  06B2  3001               	movlw	1
  8558  06B3  023E               	subwf	i1___flmul@temp,w
  8559  06B4                     u622_25:
  8560  06B4  1803               	skipnc
  8561  06B5  2EB7               	goto	u622_21
  8562  06B6  2EB8               	goto	u622_20
  8563  06B7                     u622_21:
  8564  06B7  2EC4               	goto	i1l3844
  8565  06B8                     u622_20:
  8566  06B8                     i1l3840:
  8567  06B8  3000               	movlw	0
  8568  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  8569  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  8570  06BB  00BD               	movwf	i1___flmul@prod+3
  8571  06BC  3000               	movlw	0
  8572  06BD  00BC               	movwf	i1___flmul@prod+2
  8573  06BE  3000               	movlw	0
  8574  06BF  00BB               	movwf	i1___flmul@prod+1
  8575  06C0  3000               	movlw	0
  8576  06C1  00BA               	movwf	i1___flmul@prod
  8577  06C2                     i1l3842:
  8578  06C2  01B3               	clrf	i1___flmul@sign
  8579  06C3  2EDE               	goto	i1l769
  8580  06C4                     i1l3844:
  8581  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  8582  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  8583  06C6  083E               	movf	i1___flmul@temp,w
  8584  06C7  00AE               	movwf	??i1___flmul
  8585  06C8  082E               	movf	??i1___flmul,w
  8586  06C9  00B9               	movwf	i1___flmul@bexp
  8587  06CA  30FF               	movlw	255
  8588  06CB  05BA               	andwf	i1___flmul@prod,f
  8589  06CC  30FF               	movlw	255
  8590  06CD  05BB               	andwf	i1___flmul@prod+1,f
  8591  06CE  307F               	movlw	127
  8592  06CF  05BC               	andwf	i1___flmul@prod+2,f
  8593  06D0  3000               	movlw	0
  8594  06D1  05BD               	andwf	i1___flmul@prod+3,f
  8595  06D2                     i1l3846:
  8596  06D2  1C39               	btfss	i1___flmul@bexp,0
  8597  06D3  2ED5               	goto	u623_21
  8598  06D4  2ED6               	goto	u623_20
  8599  06D5                     u623_21:
  8600  06D5  2ED7               	goto	i1l3850
  8601  06D6                     u623_20:
  8602  06D6                     i1l3848:
  8603  06D6  17BC               	bsf	i1___flmul@prod+2,7
  8604  06D7                     i1l3850:
  8605  06D7  0839               	movf	i1___flmul@bexp,w
  8606  06D8  00AE               	movwf	??i1___flmul
  8607  06D9  1003               	clrc
  8608  06DA  0C2E               	rrf	??i1___flmul,w
  8609  06DB  00AF               	movwf	??i1___flmul+1
  8610  06DC  082F               	movf	??i1___flmul+1,w
  8611  06DD  00BD               	movwf	i1___flmul@prod+3
  8612  06DE                     i1l769:
  8613  06DE  0833               	movf	i1___flmul@sign,w
  8614  06DF  00AE               	movwf	??i1___flmul
  8615  06E0  082E               	movf	??i1___flmul,w
  8616  06E1  04BD               	iorwf	i1___flmul@prod+3,f
  8617  06E2                     i1l3852:
  8618  06E2  083D               	movf	i1___flmul@prod+3,w
  8619  06E3  00A9               	movwf	?i1___flmul+3
  8620  06E4  083C               	movf	i1___flmul@prod+2,w
  8621  06E5  00A8               	movwf	?i1___flmul+2
  8622  06E6  083B               	movf	i1___flmul@prod+1,w
  8623  06E7  00A7               	movwf	?i1___flmul+1
  8624  06E8  083A               	movf	i1___flmul@prod,w
  8625  06E9  00A6               	movwf	?i1___flmul
  8626  06EA                     i1l757:
  8627  06EA  0008               	return
  8628  06EB                     __end_ofi1___flmul:
  8629                           
  8630                           	psect	text32
  8631  07D8                     __ptext32:	
  8632 ;; *************** function i1__Umul8_16 *****************
  8633 ;; Defined at:
  8634 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  multiplier      1    wreg     unsigned char 
  8637 ;;  multiplicand    1    0[COMMON] unsigned char 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  multiplier      1    8[COMMON] unsigned char 
  8640 ;;  word_mpld       2    6[COMMON] unsigned int 
  8641 ;;  product         2    4[COMMON] unsigned int 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  2    0[COMMON] unsigned int 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8651 ;;      Params:         2       0       0       0       0
  8652 ;;      Locals:         5       0       0       0       0
  8653 ;;      Temps:          2       0       0       0       0
  8654 ;;      Totals:         9       0       0       0       0
  8655 ;;Total ram usage:        9 bytes
  8656 ;; Hardware stack levels used: 1
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		i1___flmul
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           
  8665                           ;psect for function i1__Umul8_16
  8666  07D8                     i1__Umul8_16:
  8667                           
  8668                           ;incstack = 0
  8669 ;; hardware stack exceeded
  8670                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
  8671                           ;i1__Umul8_16@multiplier stored from wreg
  8672  07D8  00F8               	movwf	i1__Umul8_16@multiplier
  8673  07D9                     i1l3358:
  8674  07D9  01F4               	clrf	i1__Umul8_16@product
  8675  07DA  01F5               	clrf	i1__Umul8_16@product+1
  8676  07DB                     i1l3360:
  8677  07DB  0870               	movf	i1__Umul8_16@multiplicand,w
  8678  07DC  00F2               	movwf	??i1__Umul8_16
  8679  07DD  01F3               	clrf	??i1__Umul8_16+1
  8680  07DE  0872               	movf	??i1__Umul8_16,w
  8681  07DF  00F6               	movwf	i1__Umul8_16@word_mpld
  8682  07E0  0873               	movf	??i1__Umul8_16+1,w
  8683  07E1  00F7               	movwf	i1__Umul8_16@word_mpld+1
  8684  07E2                     i1l3362:
  8685  07E2  1C78               	btfss	i1__Umul8_16@multiplier,0
  8686  07E3  2FE5               	goto	u511_21
  8687  07E4  2FE6               	goto	u511_20
  8688  07E5                     u511_21:
  8689  07E5  2FEC               	goto	i1l776
  8690  07E6                     u511_20:
  8691  07E6                     i1l3364:
  8692  07E6  0876               	movf	i1__Umul8_16@word_mpld,w
  8693  07E7  07F4               	addwf	i1__Umul8_16@product,f
  8694  07E8  1803               	skipnc
  8695  07E9  0AF5               	incf	i1__Umul8_16@product+1,f
  8696  07EA  0877               	movf	i1__Umul8_16@word_mpld+1,w
  8697  07EB  07F5               	addwf	i1__Umul8_16@product+1,f
  8698  07EC                     i1l776:
  8699  07EC  3001               	movlw	1
  8700  07ED                     u512_25:
  8701  07ED  1003               	clrc
  8702  07EE  0DF6               	rlf	i1__Umul8_16@word_mpld,f
  8703  07EF  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
  8704  07F0  3EFF               	addlw	-1
  8705  07F1  1D03               	skipz
  8706  07F2  2FED               	goto	u512_25
  8707  07F3  1003               	clrc
  8708  07F4  0CF8               	rrf	i1__Umul8_16@multiplier,f
  8709  07F5                     i1l3366:
  8710  07F5  0878               	movf	i1__Umul8_16@multiplier,w
  8711  07F6  1D03               	btfss	3,2
  8712  07F7  2FF9               	goto	u513_21
  8713  07F8  2FFA               	goto	u513_20
  8714  07F9                     u513_21:
  8715  07F9  2FE2               	goto	i1l3362
  8716  07FA                     u513_20:
  8717  07FA                     i1l3368:
  8718  07FA  0875               	movf	i1__Umul8_16@product+1,w
  8719  07FB  00F1               	movwf	?i1__Umul8_16+1
  8720  07FC  0874               	movf	i1__Umul8_16@product,w
  8721  07FD  00F0               	movwf	?i1__Umul8_16
  8722  07FE                     i1l778:
  8723  07FE  0008               	return
  8724  07FF                     __end_ofi1__Umul8_16:
  8725                           
  8726                           	psect	text33
  8727  0AF0                     __ptext33:	
  8728 ;; *************** function i1___fladd *****************
  8729 ;; Defined at:
  8730 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  b               4   32[BANK0 ] unsigned int 
  8733 ;;  a               4   36[BANK0 ] unsigned int 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;  grs             1   51[BANK0 ] unsigned char 
  8736 ;;  bexp            1   50[BANK0 ] unsigned char 
  8737 ;;  aexp            1   49[BANK0 ] unsigned char 
  8738 ;;  signs           1   48[BANK0 ] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  4   32[BANK0 ] unsigned char 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, btemp+1
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8748 ;;      Params:         0       8       0       0       0
  8749 ;;      Locals:         0       4       0       0       0
  8750 ;;      Temps:          0       8       0       0       0
  8751 ;;      Totals:         0      20       0       0       0
  8752 ;;Total ram usage:       20 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; This function calls:
  8755 ;;		Nothing
  8756 ;; This function is called by:
  8757 ;;		_alarmISR
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           
  8762                           ;psect for function i1___fladd
  8763  0AF0                     i1___fladd:
  8764  0AF0                     i1l3522:	
  8765                           ;incstack = 0
  8766                           ; Regs used in i1___fladd: [wreg+status,2+status,0+btemp+1]
  8767                           
  8768  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  8769  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  8770  0AF2  0843               	movf	i1___fladd@b+3,w
  8771  0AF3  3980               	andlw	128
  8772  0AF4  00C8               	movwf	??i1___fladd
  8773  0AF5  0848               	movf	??i1___fladd,w
  8774  0AF6  00D0               	movwf	i1___fladd@signs
  8775  0AF7                     i1l3524:
  8776  0AF7  0843               	movf	i1___fladd@b+3,w
  8777  0AF8  00C8               	movwf	??i1___fladd
  8778  0AF9  0748               	addwf	??i1___fladd,w
  8779  0AFA  00C9               	movwf	??i1___fladd+1
  8780  0AFB  0849               	movf	??i1___fladd+1,w
  8781  0AFC  00D2               	movwf	i1___fladd@bexp
  8782  0AFD                     i1l3526:
  8783  0AFD  1FC2               	btfss	i1___fladd@b+2,7
  8784  0AFE  2B00               	goto	u541_21
  8785  0AFF  2B01               	goto	u541_20
  8786  0B00                     u541_21:
  8787  0B00  2B02               	goto	i1l3530
  8788  0B01                     u541_20:
  8789  0B01                     i1l3528:
  8790  0B01  1452               	bsf	i1___fladd@bexp,0
  8791  0B02                     i1l3530:
  8792  0B02  0852               	movf	i1___fladd@bexp,w
  8793  0B03  1903               	btfsc	3,2
  8794  0B04  2B06               	goto	u542_21
  8795  0B05  2B07               	goto	u542_20
  8796  0B06                     u542_21:
  8797  0B06  2B17               	goto	i1l3540
  8798  0B07                     u542_20:
  8799  0B07                     i1l3532:
  8800  0B07  0A52               	incf	i1___fladd@bexp,w
  8801  0B08  1D03               	btfss	3,2
  8802  0B09  2B0B               	goto	u543_21
  8803  0B0A  2B0C               	goto	u543_20
  8804  0B0B                     u543_21:
  8805  0B0B  2B14               	goto	i1l3536
  8806  0B0C                     u543_20:
  8807  0B0C                     i1l3534:
  8808  0B0C  3000               	movlw	0
  8809  0B0D  00C3               	movwf	i1___fladd@b+3
  8810  0B0E  3000               	movlw	0
  8811  0B0F  00C2               	movwf	i1___fladd@b+2
  8812  0B10  3000               	movlw	0
  8813  0B11  00C1               	movwf	i1___fladd@b+1
  8814  0B12  3000               	movlw	0
  8815  0B13  00C0               	movwf	i1___fladd@b
  8816  0B14                     i1l3536:
  8817  0B14  17C2               	bsf	i1___fladd@b+2,7
  8818  0B15                     i1l3538:
  8819  0B15  01C3               	clrf	i1___fladd@b+3
  8820  0B16  2B1F               	goto	i1l3542
  8821  0B17                     i1l3540:
  8822  0B17  3000               	movlw	0
  8823  0B18  00C3               	movwf	i1___fladd@b+3
  8824  0B19  3000               	movlw	0
  8825  0B1A  00C2               	movwf	i1___fladd@b+2
  8826  0B1B  3000               	movlw	0
  8827  0B1C  00C1               	movwf	i1___fladd@b+1
  8828  0B1D  3000               	movlw	0
  8829  0B1E  00C0               	movwf	i1___fladd@b
  8830  0B1F                     i1l3542:
  8831  0B1F  0847               	movf	i1___fladd@a+3,w
  8832  0B20  3980               	andlw	128
  8833  0B21  00C8               	movwf	??i1___fladd
  8834  0B22  0848               	movf	??i1___fladd,w
  8835  0B23  00D1               	movwf	i1___fladd@aexp
  8836  0B24                     i1l3544:
  8837  0B24  0851               	movf	i1___fladd@aexp,w
  8838  0B25  0650               	xorwf	i1___fladd@signs,w
  8839  0B26  1903               	skipnz
  8840  0B27  2B29               	goto	u544_21
  8841  0B28  2B2A               	goto	u544_20
  8842  0B29                     u544_21:
  8843  0B29  2B2B               	goto	i1l3548
  8844  0B2A                     u544_20:
  8845  0B2A                     i1l3546:
  8846  0B2A  1750               	bsf	i1___fladd@signs,6
  8847  0B2B                     i1l3548:
  8848  0B2B  0847               	movf	i1___fladd@a+3,w
  8849  0B2C  00C8               	movwf	??i1___fladd
  8850  0B2D  0748               	addwf	??i1___fladd,w
  8851  0B2E  00C9               	movwf	??i1___fladd+1
  8852  0B2F  0849               	movf	??i1___fladd+1,w
  8853  0B30  00D1               	movwf	i1___fladd@aexp
  8854  0B31                     i1l3550:
  8855  0B31  1FC6               	btfss	i1___fladd@a+2,7
  8856  0B32  2B34               	goto	u545_21
  8857  0B33  2B35               	goto	u545_20
  8858  0B34                     u545_21:
  8859  0B34  2B36               	goto	i1l3554
  8860  0B35                     u545_20:
  8861  0B35                     i1l3552:
  8862  0B35  1451               	bsf	i1___fladd@aexp,0
  8863  0B36                     i1l3554:
  8864  0B36  0851               	movf	i1___fladd@aexp,w
  8865  0B37  1903               	btfsc	3,2
  8866  0B38  2B3A               	goto	u546_21
  8867  0B39  2B3B               	goto	u546_20
  8868  0B3A                     u546_21:
  8869  0B3A  2B4B               	goto	i1l3564
  8870  0B3B                     u546_20:
  8871  0B3B                     i1l3556:
  8872  0B3B  0A51               	incf	i1___fladd@aexp,w
  8873  0B3C  1D03               	btfss	3,2
  8874  0B3D  2B3F               	goto	u547_21
  8875  0B3E  2B40               	goto	u547_20
  8876  0B3F                     u547_21:
  8877  0B3F  2B48               	goto	i1l3560
  8878  0B40                     u547_20:
  8879  0B40                     i1l3558:
  8880  0B40  3000               	movlw	0
  8881  0B41  00C7               	movwf	i1___fladd@a+3
  8882  0B42  3000               	movlw	0
  8883  0B43  00C6               	movwf	i1___fladd@a+2
  8884  0B44  3000               	movlw	0
  8885  0B45  00C5               	movwf	i1___fladd@a+1
  8886  0B46  3000               	movlw	0
  8887  0B47  00C4               	movwf	i1___fladd@a
  8888  0B48                     i1l3560:
  8889  0B48  17C6               	bsf	i1___fladd@a+2,7
  8890  0B49                     i1l3562:
  8891  0B49  01C7               	clrf	i1___fladd@a+3
  8892  0B4A  2B53               	goto	i1l661
  8893  0B4B                     i1l3564:
  8894  0B4B  3000               	movlw	0
  8895  0B4C  00C7               	movwf	i1___fladd@a+3
  8896  0B4D  3000               	movlw	0
  8897  0B4E  00C6               	movwf	i1___fladd@a+2
  8898  0B4F  3000               	movlw	0
  8899  0B50  00C5               	movwf	i1___fladd@a+1
  8900  0B51  3000               	movlw	0
  8901  0B52  00C4               	movwf	i1___fladd@a
  8902  0B53                     i1l661:
  8903  0B53  0852               	movf	i1___fladd@bexp,w
  8904  0B54  0251               	subwf	i1___fladd@aexp,w
  8905  0B55  1803               	skipnc
  8906  0B56  2B58               	goto	u548_21
  8907  0B57  2B59               	goto	u548_20
  8908  0B58                     u548_21:
  8909  0B58  2B9D               	goto	i1l3600
  8910  0B59                     u548_20:
  8911  0B59                     i1l3566:
  8912  0B59  1F50               	btfss	i1___fladd@signs,6
  8913  0B5A  2B5C               	goto	u549_21
  8914  0B5B  2B5D               	goto	u549_20
  8915  0B5C                     u549_21:
  8916  0B5C  2B61               	goto	i1l3570
  8917  0B5D                     u549_20:
  8918  0B5D                     i1l3568:
  8919  0B5D  3080               	movlw	128
  8920  0B5E  00C8               	movwf	??i1___fladd
  8921  0B5F  0848               	movf	??i1___fladd,w
  8922  0B60  06D0               	xorwf	i1___fladd@signs,f
  8923  0B61                     i1l3570:
  8924  0B61  0852               	movf	i1___fladd@bexp,w
  8925  0B62  00C8               	movwf	??i1___fladd
  8926  0B63  0848               	movf	??i1___fladd,w
  8927  0B64  00D3               	movwf	i1___fladd@grs
  8928  0B65                     i1l3572:
  8929  0B65  0851               	movf	i1___fladd@aexp,w
  8930  0B66  00C8               	movwf	??i1___fladd
  8931  0B67  0848               	movf	??i1___fladd,w
  8932  0B68  00D2               	movwf	i1___fladd@bexp
  8933  0B69                     i1l3574:
  8934  0B69  0853               	movf	i1___fladd@grs,w
  8935  0B6A  00C8               	movwf	??i1___fladd
  8936  0B6B  0848               	movf	??i1___fladd,w
  8937  0B6C  00D1               	movwf	i1___fladd@aexp
  8938  0B6D                     i1l3576:
  8939  0B6D  0840               	movf	i1___fladd@b,w
  8940  0B6E  00C8               	movwf	??i1___fladd
  8941  0B6F  0848               	movf	??i1___fladd,w
  8942  0B70  00D3               	movwf	i1___fladd@grs
  8943  0B71                     i1l3578:
  8944  0B71  0844               	movf	i1___fladd@a,w
  8945  0B72  00C8               	movwf	??i1___fladd
  8946  0B73  0848               	movf	??i1___fladd,w
  8947  0B74  00C0               	movwf	i1___fladd@b
  8948  0B75                     i1l3580:
  8949  0B75  0853               	movf	i1___fladd@grs,w
  8950  0B76  00C8               	movwf	??i1___fladd
  8951  0B77  0848               	movf	??i1___fladd,w
  8952  0B78  00C4               	movwf	i1___fladd@a
  8953  0B79                     i1l3582:
  8954  0B79  0841               	movf	i1___fladd@b+1,w
  8955  0B7A  00C8               	movwf	??i1___fladd
  8956  0B7B  0848               	movf	??i1___fladd,w
  8957  0B7C  00D3               	movwf	i1___fladd@grs
  8958  0B7D                     i1l3584:
  8959  0B7D  0845               	movf	i1___fladd@a+1,w
  8960  0B7E  00C8               	movwf	??i1___fladd
  8961  0B7F  0848               	movf	??i1___fladd,w
  8962  0B80  00C1               	movwf	i1___fladd@b+1
  8963  0B81                     i1l3586:
  8964  0B81  0853               	movf	i1___fladd@grs,w
  8965  0B82  00C8               	movwf	??i1___fladd
  8966  0B83  0848               	movf	??i1___fladd,w
  8967  0B84  00C5               	movwf	i1___fladd@a+1
  8968  0B85                     i1l3588:
  8969  0B85  0842               	movf	i1___fladd@b+2,w
  8970  0B86  00C8               	movwf	??i1___fladd
  8971  0B87  0848               	movf	??i1___fladd,w
  8972  0B88  00D3               	movwf	i1___fladd@grs
  8973  0B89                     i1l3590:
  8974  0B89  0846               	movf	i1___fladd@a+2,w
  8975  0B8A  00C8               	movwf	??i1___fladd
  8976  0B8B  0848               	movf	??i1___fladd,w
  8977  0B8C  00C2               	movwf	i1___fladd@b+2
  8978  0B8D                     i1l3592:
  8979  0B8D  0853               	movf	i1___fladd@grs,w
  8980  0B8E  00C8               	movwf	??i1___fladd
  8981  0B8F  0848               	movf	??i1___fladd,w
  8982  0B90  00C6               	movwf	i1___fladd@a+2
  8983  0B91                     i1l3594:
  8984  0B91  0843               	movf	i1___fladd@b+3,w
  8985  0B92  00C8               	movwf	??i1___fladd
  8986  0B93  0848               	movf	??i1___fladd,w
  8987  0B94  00D3               	movwf	i1___fladd@grs
  8988  0B95                     i1l3596:
  8989  0B95  0847               	movf	i1___fladd@a+3,w
  8990  0B96  00C8               	movwf	??i1___fladd
  8991  0B97  0848               	movf	??i1___fladd,w
  8992  0B98  00C3               	movwf	i1___fladd@b+3
  8993  0B99                     i1l3598:
  8994  0B99  0853               	movf	i1___fladd@grs,w
  8995  0B9A  00C8               	movwf	??i1___fladd
  8996  0B9B  0848               	movf	??i1___fladd,w
  8997  0B9C  00C7               	movwf	i1___fladd@a+3
  8998  0B9D                     i1l3600:
  8999  0B9D  01D3               	clrf	i1___fladd@grs
  9000  0B9E                     i1l3602:
  9001  0B9E  0851               	movf	i1___fladd@aexp,w
  9002  0B9F  00C8               	movwf	??i1___fladd
  9003  0BA0  01C9               	clrf	??i1___fladd+1
  9004  0BA1  0849               	movf	??i1___fladd+1,w
  9005  0BA2  00CB               	movwf	??i1___fladd+3
  9006  0BA3  0852               	movf	i1___fladd@bexp,w
  9007  0BA4  0248               	subwf	??i1___fladd,w
  9008  0BA5  00CA               	movwf	??i1___fladd+2
  9009  0BA6  1C03               	skipc
  9010  0BA7  03CB               	decf	??i1___fladd+3,f
  9011  0BA8  084B               	movf	??i1___fladd+3,w
  9012  0BA9  3A80               	xorlw	128
  9013  0BAA  00FF               	movwf	btemp+1
  9014  0BAB  3080               	movlw	128
  9015  0BAC  027F               	subwf	btemp+1,w
  9016  0BAD  1D03               	skipz
  9017  0BAE  2BB1               	goto	u550_25
  9018  0BAF  301A               	movlw	26
  9019  0BB0  024A               	subwf	??i1___fladd+2,w
  9020  0BB1                     u550_25:
  9021  0BB1  1C03               	skipc
  9022  0BB2  2BB4               	goto	u550_21
  9023  0BB3  2BB5               	goto	u550_20
  9024  0BB4                     u550_21:
  9025  0BB4  2BF2               	goto	i1l3618
  9026  0BB5                     u550_20:
  9027  0BB5                     i1l3604:
  9028  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  9029  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  9030  0BB7  0843               	movf	i1___fladd@b+3,w
  9031  0BB8  0442               	iorwf	i1___fladd@b+2,w
  9032  0BB9  0441               	iorwf	i1___fladd@b+1,w
  9033  0BBA  0440               	iorwf	i1___fladd@b,w
  9034  0BBB  1D03               	skipz
  9035  0BBC  2BBE               	goto	u551_21
  9036  0BBD  2BC0               	goto	u551_20
  9037  0BBE                     u551_21:
  9038  0BBE  3001               	movlw	1
  9039  0BBF  2BC1               	goto	u552_20
  9040  0BC0                     u551_20:
  9041  0BC0  3000               	movlw	0
  9042  0BC1                     u552_20:
  9043  0BC1  00C8               	movwf	??i1___fladd
  9044  0BC2  0848               	movf	??i1___fladd,w
  9045  0BC3  00D3               	movwf	i1___fladd@grs
  9046  0BC4  3000               	movlw	0
  9047  0BC5  00C3               	movwf	i1___fladd@b+3
  9048  0BC6  3000               	movlw	0
  9049  0BC7  00C2               	movwf	i1___fladd@b+2
  9050  0BC8  3000               	movlw	0
  9051  0BC9  00C1               	movwf	i1___fladd@b+1
  9052  0BCA  3000               	movlw	0
  9053  0BCB  00C0               	movwf	i1___fladd@b
  9054  0BCC  0851               	movf	i1___fladd@aexp,w
  9055  0BCD  00C8               	movwf	??i1___fladd
  9056  0BCE  0848               	movf	??i1___fladd,w
  9057  0BCF  00D2               	movwf	i1___fladd@bexp
  9058  0BD0  2BFA               	goto	i1l665
  9059  0BD1                     i1l667:
  9060  0BD1  1C53               	btfss	i1___fladd@grs,0
  9061  0BD2  2BD4               	goto	u553_21
  9062  0BD3  2BD5               	goto	u553_20
  9063  0BD4                     u553_21:
  9064  0BD4  2BDE               	goto	i1l3608
  9065  0BD5                     u553_20:
  9066  0BD5                     i1l3606:
  9067  0BD5  0853               	movf	i1___fladd@grs,w
  9068  0BD6  00C8               	movwf	??i1___fladd
  9069  0BD7  1003               	clrc
  9070  0BD8  0C48               	rrf	??i1___fladd,w
  9071  0BD9  3801               	iorlw	1
  9072  0BDA  00C9               	movwf	??i1___fladd+1
  9073  0BDB  0849               	movf	??i1___fladd+1,w
  9074  0BDC  00D3               	movwf	i1___fladd@grs
  9075  0BDD  2BE0               	goto	i1l3610
  9076  0BDE                     i1l3608:
  9077  0BDE  1003               	clrc
  9078  0BDF  0CD3               	rrf	i1___fladd@grs,f
  9079  0BE0                     i1l3610:
  9080  0BE0  1C40               	btfss	i1___fladd@b,0
  9081  0BE1  2BE3               	goto	u554_21
  9082  0BE2  2BE4               	goto	u554_20
  9083  0BE3                     u554_21:
  9084  0BE3  2BE5               	goto	i1l3614
  9085  0BE4                     u554_20:
  9086  0BE4                     i1l3612:
  9087  0BE4  17D3               	bsf	i1___fladd@grs,7
  9088  0BE5                     i1l3614:
  9089  0BE5  3001               	movlw	1
  9090  0BE6  00C8               	movwf	??i1___fladd
  9091  0BE7                     u555_25:
  9092  0BE7  0D43               	rlf	i1___fladd@b+3,w
  9093  0BE8  0CC3               	rrf	i1___fladd@b+3,f
  9094  0BE9  0CC2               	rrf	i1___fladd@b+2,f
  9095  0BEA  0CC1               	rrf	i1___fladd@b+1,f
  9096  0BEB  0CC0               	rrf	i1___fladd@b,f
  9097  0BEC  0BC8               	decfsz	??i1___fladd& (0+127),f
  9098  0BED  2BE7               	goto	u555_25
  9099  0BEE                     i1l3616:
  9100  0BEE  3001               	movlw	1
  9101  0BEF  00C8               	movwf	??i1___fladd
  9102  0BF0  0848               	movf	??i1___fladd,w
  9103  0BF1  07D2               	addwf	i1___fladd@bexp,f
  9104  0BF2                     i1l3618:
  9105  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  9106  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  9107  0BF4  0851               	movf	i1___fladd@aexp,w
  9108  0BF5  0252               	subwf	i1___fladd@bexp,w
  9109  0BF6  1C03               	skipc
  9110  0BF7  2BF9               	goto	u556_21
  9111  0BF8  2BFA               	goto	u556_20
  9112  0BF9                     u556_21:
  9113  0BF9  2BD1               	goto	i1l667
  9114  0BFA                     u556_20:
  9115  0BFA                     i1l665:
  9116  0BFA  1B50               	btfsc	i1___fladd@signs,6
  9117  0BFB  2BFD               	goto	u557_21
  9118  0BFC  2BFE               	goto	u557_20
  9119  0BFD                     u557_21:
  9120  0BFD  2C49               	goto	i1l3644
  9121  0BFE                     u557_20:
  9122  0BFE                     i1l3620:
  9123  0BFE  0852               	movf	i1___fladd@bexp,w
  9124  0BFF  1D03               	btfss	3,2
  9125  0C00  2C02               	goto	u558_21
  9126  0C01  2C03               	goto	u558_20
  9127  0C02                     u558_21:
  9128  0C02  2C0C               	goto	i1l3626
  9129  0C03                     u558_20:
  9130  0C03                     i1l3622:
  9131  0C03  3000               	movlw	0
  9132  0C04  00C3               	movwf	?i1___fladd+3
  9133  0C05  3000               	movlw	0
  9134  0C06  00C2               	movwf	?i1___fladd+2
  9135  0C07  3000               	movlw	0
  9136  0C08  00C1               	movwf	?i1___fladd+1
  9137  0C09  3000               	movlw	0
  9138  0C0A  00C0               	movwf	?i1___fladd
  9139  0C0B  2D77               	goto	i1l674
  9140  0C0C                     i1l3626:
  9141  0C0C  0844               	movf	i1___fladd@a,w
  9142  0C0D  07C0               	addwf	i1___fladd@b,f
  9143  0C0E  0845               	movf	i1___fladd@a+1,w
  9144  0C0F  1103               	clrz
  9145  0C10  1803               	skipnc
  9146  0C11  3E01               	addlw	1
  9147  0C12  1903               	skipnz
  9148  0C13  2C15               	goto	u559_21
  9149  0C14  07C1               	addwf	i1___fladd@b+1,f
  9150  0C15                     u559_21:
  9151  0C15  0846               	movf	i1___fladd@a+2,w
  9152  0C16  1103               	clrz
  9153  0C17  1803               	skipnc
  9154  0C18  3E01               	addlw	1
  9155  0C19  1903               	skipnz
  9156  0C1A  2C1C               	goto	u559_22
  9157  0C1B  07C2               	addwf	i1___fladd@b+2,f
  9158  0C1C                     u559_22:
  9159  0C1C  0847               	movf	i1___fladd@a+3,w
  9160  0C1D  1103               	clrz
  9161  0C1E  1803               	skipnc
  9162  0C1F  3E01               	addlw	1
  9163  0C20  1903               	skipnz
  9164  0C21  2C23               	goto	u559_23
  9165  0C22  07C3               	addwf	i1___fladd@b+3,f
  9166  0C23                     u559_23:
  9167  0C23                     i1l3628:
  9168  0C23  1C43               	btfss	i1___fladd@b+3,0
  9169  0C24  2C26               	goto	u560_21
  9170  0C25  2C27               	goto	u560_20
  9171  0C26                     u560_21:
  9172  0C26  2CFD               	goto	i1l3678
  9173  0C27                     u560_20:
  9174  0C27                     i1l3630:
  9175  0C27  1C53               	btfss	i1___fladd@grs,0
  9176  0C28  2C2A               	goto	u561_21
  9177  0C29  2C2B               	goto	u561_20
  9178  0C2A                     u561_21:
  9179  0C2A  2C34               	goto	i1l3634
  9180  0C2B                     u561_20:
  9181  0C2B                     i1l3632:
  9182  0C2B  0853               	movf	i1___fladd@grs,w
  9183  0C2C  00C8               	movwf	??i1___fladd
  9184  0C2D  1003               	clrc
  9185  0C2E  0C48               	rrf	??i1___fladd,w
  9186  0C2F  3801               	iorlw	1
  9187  0C30  00C9               	movwf	??i1___fladd+1
  9188  0C31  0849               	movf	??i1___fladd+1,w
  9189  0C32  00D3               	movwf	i1___fladd@grs
  9190  0C33  2C36               	goto	i1l3636
  9191  0C34                     i1l3634:
  9192  0C34  1003               	clrc
  9193  0C35  0CD3               	rrf	i1___fladd@grs,f
  9194  0C36                     i1l3636:
  9195  0C36  1C40               	btfss	i1___fladd@b,0
  9196  0C37  2C39               	goto	u562_21
  9197  0C38  2C3A               	goto	u562_20
  9198  0C39                     u562_21:
  9199  0C39  2C3B               	goto	i1l3640
  9200  0C3A                     u562_20:
  9201  0C3A                     i1l3638:
  9202  0C3A  17D3               	bsf	i1___fladd@grs,7
  9203  0C3B                     i1l3640:
  9204  0C3B  3001               	movlw	1
  9205  0C3C  00C8               	movwf	??i1___fladd
  9206  0C3D                     u563_25:
  9207  0C3D  0D43               	rlf	i1___fladd@b+3,w
  9208  0C3E  0CC3               	rrf	i1___fladd@b+3,f
  9209  0C3F  0CC2               	rrf	i1___fladd@b+2,f
  9210  0C40  0CC1               	rrf	i1___fladd@b+1,f
  9211  0C41  0CC0               	rrf	i1___fladd@b,f
  9212  0C42  0BC8               	decfsz	??i1___fladd& (0+127),f
  9213  0C43  2C3D               	goto	u563_25
  9214  0C44                     i1l3642:
  9215  0C44  3001               	movlw	1
  9216  0C45  00C8               	movwf	??i1___fladd
  9217  0C46  0848               	movf	??i1___fladd,w
  9218  0C47  07D2               	addwf	i1___fladd@bexp,f
  9219  0C48  2CFD               	goto	i1l3678
  9220  0C49                     i1l3644:
  9221  0C49  0843               	movf	i1___fladd@b+3,w
  9222  0C4A  3A80               	xorlw	128
  9223  0C4B  00FF               	movwf	btemp+1
  9224  0C4C  0847               	movf	i1___fladd@a+3,w
  9225  0C4D  3A80               	xorlw	128
  9226  0C4E  027F               	subwf	btemp+1,w
  9227  0C4F  1D03               	skipz
  9228  0C50  2C5B               	goto	u564_23
  9229  0C51  0846               	movf	i1___fladd@a+2,w
  9230  0C52  0242               	subwf	i1___fladd@b+2,w
  9231  0C53  1D03               	skipz
  9232  0C54  2C5B               	goto	u564_23
  9233  0C55  0845               	movf	i1___fladd@a+1,w
  9234  0C56  0241               	subwf	i1___fladd@b+1,w
  9235  0C57  1D03               	skipz
  9236  0C58  2C5B               	goto	u564_23
  9237  0C59  0844               	movf	i1___fladd@a,w
  9238  0C5A  0240               	subwf	i1___fladd@b,w
  9239  0C5B                     u564_23:
  9240  0C5B  1803               	skipnc
  9241  0C5C  2C5E               	goto	u564_21
  9242  0C5D  2C5F               	goto	u564_20
  9243  0C5E                     u564_21:
  9244  0C5E  2CB7               	goto	i1l3654
  9245  0C5F                     u564_20:
  9246  0C5F                     i1l3646:
  9247  0C5F  30FF               	movlw	255
  9248  0C60  00C8               	movwf	??i1___fladd
  9249  0C61  30FF               	movlw	255
  9250  0C62  00C9               	movwf	??i1___fladd+1
  9251  0C63  30FF               	movlw	255
  9252  0C64  00CA               	movwf	??i1___fladd+2
  9253  0C65  30FF               	movlw	255
  9254  0C66  00CB               	movwf	??i1___fladd+3
  9255  0C67  0844               	movf	i1___fladd@a,w
  9256  0C68  00CC               	movwf	??i1___fladd+4
  9257  0C69  0845               	movf	i1___fladd@a+1,w
  9258  0C6A  00CD               	movwf	??i1___fladd+5
  9259  0C6B  0846               	movf	i1___fladd@a+2,w
  9260  0C6C  00CE               	movwf	??i1___fladd+6
  9261  0C6D  0847               	movf	i1___fladd@a+3,w
  9262  0C6E  00CF               	movwf	??i1___fladd+7
  9263  0C6F  0840               	movf	i1___fladd@b,w
  9264  0C70  02CC               	subwf	??i1___fladd+4,f
  9265  0C71  0841               	movf	i1___fladd@b+1,w
  9266  0C72  1C03               	skipc
  9267  0C73  0F41               	incfsz	i1___fladd@b+1,w
  9268  0C74  2C76               	goto	u565_21
  9269  0C75  2C77               	goto	u565_22
  9270  0C76                     u565_21:
  9271  0C76  02CD               	subwf	??i1___fladd+5,f
  9272  0C77                     u565_22:
  9273  0C77  0842               	movf	i1___fladd@b+2,w
  9274  0C78  1C03               	skipc
  9275  0C79  0F42               	incfsz	i1___fladd@b+2,w
  9276  0C7A  2C7C               	goto	u565_23
  9277  0C7B  2C7D               	goto	u565_24
  9278  0C7C                     u565_23:
  9279  0C7C  02CE               	subwf	??i1___fladd+6,f
  9280  0C7D                     u565_24:
  9281  0C7D  0843               	movf	i1___fladd@b+3,w
  9282  0C7E  1C03               	skipc
  9283  0C7F  0F43               	incfsz	i1___fladd@b+3,w
  9284  0C80  2C82               	goto	u565_25
  9285  0C81  2C83               	goto	u565_26
  9286  0C82                     u565_25:
  9287  0C82  02CF               	subwf	??i1___fladd+7,f
  9288  0C83                     u565_26:
  9289  0C83  084C               	movf	??i1___fladd+4,w
  9290  0C84  07C8               	addwf	??i1___fladd,f
  9291  0C85  084D               	movf	??i1___fladd+5,w
  9292  0C86  1803               	skipnc
  9293  0C87  0F4D               	incfsz	??i1___fladd+5,w
  9294  0C88  2C8A               	goto	u566_20
  9295  0C89  2C8B               	goto	u566_21
  9296  0C8A                     u566_20:
  9297  0C8A  07C9               	addwf	??i1___fladd+1,f
  9298  0C8B                     u566_21:
  9299  0C8B  084E               	movf	??i1___fladd+6,w
  9300  0C8C  1803               	skipnc
  9301  0C8D  0F4E               	incfsz	??i1___fladd+6,w
  9302  0C8E  2C90               	goto	u566_22
  9303  0C8F  2C91               	goto	u566_23
  9304  0C90                     u566_22:
  9305  0C90  07CA               	addwf	??i1___fladd+2,f
  9306  0C91                     u566_23:
  9307  0C91  084F               	movf	??i1___fladd+7,w
  9308  0C92  1803               	skipnc
  9309  0C93  0A4F               	incf	??i1___fladd+7,w
  9310  0C94  07CB               	addwf	??i1___fladd+3,f
  9311  0C95  084B               	movf	??i1___fladd+3,w
  9312  0C96  00C3               	movwf	i1___fladd@b+3
  9313  0C97  084A               	movf	??i1___fladd+2,w
  9314  0C98  00C2               	movwf	i1___fladd@b+2
  9315  0C99  0849               	movf	??i1___fladd+1,w
  9316  0C9A  00C1               	movwf	i1___fladd@b+1
  9317  0C9B  0848               	movf	??i1___fladd,w
  9318  0C9C  00C0               	movwf	i1___fladd@b
  9319  0C9D                     i1l3648:
  9320  0C9D  3080               	movlw	128
  9321  0C9E  00C8               	movwf	??i1___fladd
  9322  0C9F  0848               	movf	??i1___fladd,w
  9323  0CA0  06D0               	xorwf	i1___fladd@signs,f
  9324  0CA1  09D3               	comf	i1___fladd@grs,f
  9325  0CA2  0AD3               	incf	i1___fladd@grs,f
  9326  0CA3                     i1l3650:
  9327  0CA3  0853               	movf	i1___fladd@grs,w
  9328  0CA4  1D03               	btfss	3,2
  9329  0CA5  2CA7               	goto	u567_21
  9330  0CA6  2CA8               	goto	u567_20
  9331  0CA7                     u567_21:
  9332  0CA7  2CC5               	goto	i1l682
  9333  0CA8                     u567_20:
  9334  0CA8                     i1l3652:
  9335  0CA8  3001               	movlw	1
  9336  0CA9  07C0               	addwf	i1___fladd@b,f
  9337  0CAA  3000               	movlw	0
  9338  0CAB  1803               	skipnc
  9339  0CAC  3001               	movlw	1
  9340  0CAD  07C1               	addwf	i1___fladd@b+1,f
  9341  0CAE  3000               	movlw	0
  9342  0CAF  1803               	skipnc
  9343  0CB0  3001               	movlw	1
  9344  0CB1  07C2               	addwf	i1___fladd@b+2,f
  9345  0CB2  3000               	movlw	0
  9346  0CB3  1803               	skipnc
  9347  0CB4  3001               	movlw	1
  9348  0CB5  07C3               	addwf	i1___fladd@b+3,f
  9349  0CB6  2CC5               	goto	i1l682
  9350  0CB7                     i1l3654:
  9351  0CB7  0844               	movf	i1___fladd@a,w
  9352  0CB8  02C0               	subwf	i1___fladd@b,f
  9353  0CB9  0845               	movf	i1___fladd@a+1,w
  9354  0CBA  1C03               	skipc
  9355  0CBB  0F45               	incfsz	i1___fladd@a+1,w
  9356  0CBC  02C1               	subwf	i1___fladd@b+1,f
  9357  0CBD  0846               	movf	i1___fladd@a+2,w
  9358  0CBE  1C03               	skipc
  9359  0CBF  0F46               	incfsz	i1___fladd@a+2,w
  9360  0CC0  02C2               	subwf	i1___fladd@b+2,f
  9361  0CC1  0847               	movf	i1___fladd@a+3,w
  9362  0CC2  1C03               	skipc
  9363  0CC3  0F47               	incfsz	i1___fladd@a+3,w
  9364  0CC4  02C3               	subwf	i1___fladd@b+3,f
  9365  0CC5                     i1l682:
  9366  0CC5  0843               	movf	i1___fladd@b+3,w
  9367  0CC6  0442               	iorwf	i1___fladd@b+2,w
  9368  0CC7  0441               	iorwf	i1___fladd@b+1,w
  9369  0CC8  0440               	iorwf	i1___fladd@b,w
  9370  0CC9  1D03               	skipz
  9371  0CCA  2CCC               	goto	u568_21
  9372  0CCB  2CCD               	goto	u568_20
  9373  0CCC                     u568_21:
  9374  0CCC  2CF9               	goto	i1l3676
  9375  0CCD                     u568_20:
  9376  0CCD                     i1l3656:
  9377  0CCD  0853               	movf	i1___fladd@grs,w
  9378  0CCE  1D03               	btfss	3,2
  9379  0CCF  2CD1               	goto	u569_21
  9380  0CD0  2CD2               	goto	u569_20
  9381  0CD1                     u569_21:
  9382  0CD1  2CF9               	goto	i1l3676
  9383  0CD2                     u569_20:
  9384  0CD2                     i1l3658:
  9385  0CD2  3000               	movlw	0
  9386  0CD3  00C3               	movwf	?i1___fladd+3
  9387  0CD4  3000               	movlw	0
  9388  0CD5  00C2               	movwf	?i1___fladd+2
  9389  0CD6  3000               	movlw	0
  9390  0CD7  00C1               	movwf	?i1___fladd+1
  9391  0CD8  3000               	movlw	0
  9392  0CD9  00C0               	movwf	?i1___fladd
  9393  0CDA  2D77               	goto	i1l674
  9394  0CDB                     i1l3662:
  9395  0CDB  3001               	movlw	1
  9396  0CDC  00C8               	movwf	??i1___fladd
  9397  0CDD                     u570_25:
  9398  0CDD  1003               	clrc
  9399  0CDE  0DC0               	rlf	i1___fladd@b,f
  9400  0CDF  0DC1               	rlf	i1___fladd@b+1,f
  9401  0CE0  0DC2               	rlf	i1___fladd@b+2,f
  9402  0CE1  0DC3               	rlf	i1___fladd@b+3,f
  9403  0CE2  0BC8               	decfsz	??i1___fladd,f
  9404  0CE3  2CDD               	goto	u570_25
  9405  0CE4                     i1l3664:
  9406  0CE4  1FD3               	btfss	i1___fladd@grs,7
  9407  0CE5  2CE7               	goto	u571_21
  9408  0CE6  2CE8               	goto	u571_20
  9409  0CE7                     u571_21:
  9410  0CE7  2CE9               	goto	i1l686
  9411  0CE8                     u571_20:
  9412  0CE8                     i1l3666:
  9413  0CE8  1440               	bsf	i1___fladd@b,0
  9414  0CE9                     i1l686:
  9415  0CE9  1C53               	btfss	i1___fladd@grs,0
  9416  0CEA  2CEC               	goto	u572_21
  9417  0CEB  2CED               	goto	u572_20
  9418  0CEC                     u572_21:
  9419  0CEC  2CF0               	goto	i1l3670
  9420  0CED                     u572_20:
  9421  0CED                     i1l3668:
  9422  0CED  1403               	setc
  9423  0CEE  0DD3               	rlf	i1___fladd@grs,f
  9424  0CEF  2CF2               	goto	i1l3672
  9425  0CF0                     i1l3670:
  9426  0CF0  1003               	clrc
  9427  0CF1  0DD3               	rlf	i1___fladd@grs,f
  9428  0CF2                     i1l3672:
  9429  0CF2  0852               	movf	i1___fladd@bexp,w
  9430  0CF3  1903               	btfsc	3,2
  9431  0CF4  2CF6               	goto	u573_21
  9432  0CF5  2CF7               	goto	u573_20
  9433  0CF6                     u573_21:
  9434  0CF6  2CF9               	goto	i1l3676
  9435  0CF7                     u573_20:
  9436  0CF7                     i1l3674:
  9437  0CF7  3001               	movlw	1
  9438  0CF8  02D2               	subwf	i1___fladd@bexp,f
  9439  0CF9                     i1l3676:
  9440  0CF9  1FC2               	btfss	i1___fladd@b+2,7
  9441  0CFA  2CFC               	goto	u574_21
  9442  0CFB  2CFD               	goto	u574_20
  9443  0CFC                     u574_21:
  9444  0CFC  2CDB               	goto	i1l3662
  9445  0CFD                     u574_20:
  9446  0CFD                     i1l3678:
  9447  0CFD  01D1               	clrf	i1___fladd@aexp
  9448  0CFE                     i1l3680:
  9449  0CFE  1FD3               	btfss	i1___fladd@grs,7
  9450  0CFF  2D01               	goto	u575_21
  9451  0D00  2D02               	goto	u575_20
  9452  0D01                     u575_21:
  9453  0D01  2D10               	goto	i1l3688
  9454  0D02                     u575_20:
  9455  0D02                     i1l3682:
  9456  0D02  0853               	movf	i1___fladd@grs,w
  9457  0D03  397F               	andlw	127
  9458  0D04  1903               	btfsc	3,2
  9459  0D05  2D07               	goto	u576_21
  9460  0D06  2D08               	goto	u576_20
  9461  0D07                     u576_21:
  9462  0D07  2D0B               	goto	i1l692
  9463  0D08                     u576_20:
  9464  0D08                     i1l3684:
  9465  0D08  01D1               	clrf	i1___fladd@aexp
  9466  0D09  0AD1               	incf	i1___fladd@aexp,f
  9467  0D0A  2D10               	goto	i1l3688
  9468  0D0B                     i1l692:
  9469  0D0B  1C40               	btfss	i1___fladd@b,0
  9470  0D0C  2D0E               	goto	u577_21
  9471  0D0D  2D0F               	goto	u577_20
  9472  0D0E                     u577_21:
  9473  0D0E  2D10               	goto	i1l3688
  9474  0D0F                     u577_20:
  9475  0D0F  2D08               	goto	i1l3684
  9476  0D10                     i1l3688:
  9477  0D10  0851               	movf	i1___fladd@aexp,w
  9478  0D11  1903               	btfsc	3,2
  9479  0D12  2D14               	goto	u578_21
  9480  0D13  2D15               	goto	u578_20
  9481  0D14                     u578_21:
  9482  0D14  2D49               	goto	i1l695
  9483  0D15                     u578_20:
  9484  0D15                     i1l3690:
  9485  0D15  3001               	movlw	1
  9486  0D16  07C0               	addwf	i1___fladd@b,f
  9487  0D17  3000               	movlw	0
  9488  0D18  1803               	skipnc
  9489  0D19  3001               	movlw	1
  9490  0D1A  07C1               	addwf	i1___fladd@b+1,f
  9491  0D1B  3000               	movlw	0
  9492  0D1C  1803               	skipnc
  9493  0D1D  3001               	movlw	1
  9494  0D1E  07C2               	addwf	i1___fladd@b+2,f
  9495  0D1F  3000               	movlw	0
  9496  0D20  1803               	skipnc
  9497  0D21  3001               	movlw	1
  9498  0D22  07C3               	addwf	i1___fladd@b+3,f
  9499  0D23                     i1l3692:
  9500  0D23  1C43               	btfss	i1___fladd@b+3,0
  9501  0D24  2D26               	goto	u579_21
  9502  0D25  2D27               	goto	u579_20
  9503  0D26                     u579_21:
  9504  0D26  2D49               	goto	i1l695
  9505  0D27                     u579_20:
  9506  0D27                     i1l3694:
  9507  0D27  0840               	movf	i1___fladd@b,w
  9508  0D28  00C8               	movwf	??i1___fladd
  9509  0D29  0841               	movf	i1___fladd@b+1,w
  9510  0D2A  00C9               	movwf	??i1___fladd+1
  9511  0D2B  0842               	movf	i1___fladd@b+2,w
  9512  0D2C  00CA               	movwf	??i1___fladd+2
  9513  0D2D  0843               	movf	i1___fladd@b+3,w
  9514  0D2E  00CB               	movwf	??i1___fladd+3
  9515  0D2F  3001               	movlw	1
  9516  0D30  00CC               	movwf	??i1___fladd+4
  9517  0D31                     u580_25:
  9518  0D31  0D4B               	rlf	??i1___fladd+3,w
  9519  0D32  0CCB               	rrf	??i1___fladd+3,f
  9520  0D33  0CCA               	rrf	??i1___fladd+2,f
  9521  0D34  0CC9               	rrf	??i1___fladd+1,f
  9522  0D35  0CC8               	rrf	??i1___fladd,f
  9523  0D36                     u580_20:
  9524  0D36  0BCC               	decfsz	??i1___fladd+4,f
  9525  0D37  2D31               	goto	u580_25
  9526  0D38  084B               	movf	??i1___fladd+3,w
  9527  0D39  00C3               	movwf	i1___fladd@b+3
  9528  0D3A  084A               	movf	??i1___fladd+2,w
  9529  0D3B  00C2               	movwf	i1___fladd@b+2
  9530  0D3C  0849               	movf	??i1___fladd+1,w
  9531  0D3D  00C1               	movwf	i1___fladd@b+1
  9532  0D3E  0848               	movf	??i1___fladd,w
  9533  0D3F  00C0               	movwf	i1___fladd@b
  9534  0D40  0A52               	incf	i1___fladd@bexp,w
  9535  0D41  1903               	btfsc	3,2
  9536  0D42  2D44               	goto	u581_21
  9537  0D43  2D45               	goto	u581_20
  9538  0D44                     u581_21:
  9539  0D44  2D49               	goto	i1l695
  9540  0D45                     u581_20:
  9541  0D45                     i1l3696:
  9542  0D45  3001               	movlw	1
  9543  0D46  00C8               	movwf	??i1___fladd
  9544  0D47  0848               	movf	??i1___fladd,w
  9545  0D48  07D2               	addwf	i1___fladd@bexp,f
  9546  0D49                     i1l695:
  9547  0D49  0A52               	incf	i1___fladd@bexp,w
  9548  0D4A  1903               	btfsc	3,2
  9549  0D4B  2D4D               	goto	u582_21
  9550  0D4C  2D4E               	goto	u582_20
  9551  0D4D                     u582_21:
  9552  0D4D  2D53               	goto	i1l3700
  9553  0D4E                     u582_20:
  9554  0D4E                     i1l3698:
  9555  0D4E  0852               	movf	i1___fladd@bexp,w
  9556  0D4F  1D03               	btfss	3,2
  9557  0D50  2D52               	goto	u583_21
  9558  0D51  2D53               	goto	u583_20
  9559  0D52                     u583_21:
  9560  0D52  2D61               	goto	i1l3706
  9561  0D53                     u583_20:
  9562  0D53                     i1l3700:
  9563  0D53  3000               	movlw	0
  9564  0D54  00C3               	movwf	i1___fladd@b+3
  9565  0D55  3000               	movlw	0
  9566  0D56  00C2               	movwf	i1___fladd@b+2
  9567  0D57  3000               	movlw	0
  9568  0D58  00C1               	movwf	i1___fladd@b+1
  9569  0D59  3000               	movlw	0
  9570  0D5A  00C0               	movwf	i1___fladd@b
  9571  0D5B                     i1l3702:
  9572  0D5B  0852               	movf	i1___fladd@bexp,w
  9573  0D5C  1D03               	btfss	3,2
  9574  0D5D  2D5F               	goto	u584_21
  9575  0D5E  2D60               	goto	u584_20
  9576  0D5F                     u584_21:
  9577  0D5F  2D61               	goto	i1l3706
  9578  0D60                     u584_20:
  9579  0D60                     i1l3704:
  9580  0D60  01D0               	clrf	i1___fladd@signs
  9581  0D61                     i1l3706:
  9582  0D61  1C52               	btfss	i1___fladd@bexp,0
  9583  0D62  2D64               	goto	u585_21
  9584  0D63  2D65               	goto	u585_20
  9585  0D64                     u585_21:
  9586  0D64  2D67               	goto	i1l3710
  9587  0D65                     u585_20:
  9588  0D65                     i1l3708:
  9589  0D65  17C2               	bsf	i1___fladd@b+2,7
  9590  0D66  2D6B               	goto	i1l703
  9591  0D67                     i1l3710:
  9592  0D67  307F               	movlw	127
  9593  0D68  00C8               	movwf	??i1___fladd
  9594  0D69  0848               	movf	??i1___fladd,w
  9595  0D6A  05C2               	andwf	i1___fladd@b+2,f
  9596  0D6B                     i1l703:
  9597  0D6B  0852               	movf	i1___fladd@bexp,w
  9598  0D6C  00C8               	movwf	??i1___fladd
  9599  0D6D  1003               	clrc
  9600  0D6E  0C48               	rrf	??i1___fladd,w
  9601  0D6F  00C9               	movwf	??i1___fladd+1
  9602  0D70  0849               	movf	??i1___fladd+1,w
  9603  0D71  00C3               	movwf	i1___fladd@b+3
  9604  0D72                     i1l3712:
  9605  0D72  1FD0               	btfss	i1___fladd@signs,7
  9606  0D73  2D75               	goto	u586_21
  9607  0D74  2D76               	goto	u586_20
  9608  0D75                     u586_21:
  9609  0D75  2D77               	goto	i1l704
  9610  0D76                     u586_20:
  9611  0D76                     i1l3714:
  9612  0D76  17C3               	bsf	i1___fladd@b+3,7
  9613  0D77                     i1l704:
  9614  0D77                     i1l674:
  9615  0D77  0008               	return
  9616  0D78                     __end_ofi1___fladd:
  9617                           
  9618                           	psect	text34
  9619  113D                     __ptext34:	
  9620 ;; *************** function i1_LCD_clear *****************
  9621 ;; Defined at:
  9622 ;;		line 137 in file "LCDdrive.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;		None
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  counter         2   11[COMMON] unsigned int 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      void 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0, pclath, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9636 ;;      Params:         0       0       0       0       0
  9637 ;;      Locals:         2       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0
  9639 ;;      Totals:         2       0       0       0       0
  9640 ;;Total ram usage:        2 bytes
  9641 ;; Hardware stack levels used: 1
  9642 ;; Hardware stack levels required when called: 1
  9643 ;; This function calls:
  9644 ;;		i1_LCD_write
  9645 ;; This function is called by:
  9646 ;;		_alarmISR
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           
  9651                           ;psect for function i1_LCD_clear
  9652  113D                     i1_LCD_clear:
  9653  113D                     i1l3494:	
  9654                           ;incstack = 0
  9655 ;; hardware stack exceeded
  9656                           ; Regs used in i1_LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  9657                           
  9658                           
  9659                           ;LCDdrive.c: 139:         unsigned int counter;;LCDdrive.c: 140:         LCD_write(1, 0)
      +                          ;
  9660  113D  01F0               	clrf	i1LCD_write@rs
  9661  113E  3001               	movlw	1
  9662  113F  160A  118A  26A1  160A  118A  	fcall	i1_LCD_write
  9663  1144                     i1l3496:
  9664                           
  9665                           ;LCDdrive.c: 141:         for (counter = 0; counter < 1000; counter++);
  9666  1144  01FB               	clrf	i1LCD_clear@counter
  9667  1145  01FC               	clrf	i1LCD_clear@counter+1
  9668  1146                     i1l3502:
  9669  1146  3001               	movlw	1
  9670  1147  07FB               	addwf	i1LCD_clear@counter,f
  9671  1148  1803               	skipnc
  9672  1149  0AFC               	incf	i1LCD_clear@counter+1,f
  9673  114A  3000               	movlw	0
  9674  114B  07FC               	addwf	i1LCD_clear@counter+1,f
  9675  114C  3003               	movlw	3
  9676  114D  027C               	subwf	i1LCD_clear@counter+1,w
  9677  114E  30E8               	movlw	232
  9678  114F  1903               	skipnz
  9679  1150  027B               	subwf	i1LCD_clear@counter,w
  9680  1151  1C03               	skipc
  9681  1152  2954               	goto	u538_21
  9682  1153  2955               	goto	u538_20
  9683  1154                     u538_21:
  9684  1154  2946               	goto	i1l3502
  9685  1155                     u538_20:
  9686  1155                     i1l3504:
  9687                           
  9688                           ;LCDdrive.c: 142:         LCD_write(2, 0);
  9689  1155  01F0               	clrf	i1LCD_write@rs
  9690  1156  3002               	movlw	2
  9691  1157  160A  118A  26A1  160A  118A  	fcall	i1_LCD_write
  9692  115C                     i1l3506:
  9693                           
  9694                           ;LCDdrive.c: 143:         for (counter = 0; counter < 1000; counter++);
  9695  115C  01FB               	clrf	i1LCD_clear@counter
  9696  115D  01FC               	clrf	i1LCD_clear@counter+1
  9697  115E                     i1l3512:
  9698  115E  3001               	movlw	1
  9699  115F  07FB               	addwf	i1LCD_clear@counter,f
  9700  1160  1803               	skipnc
  9701  1161  0AFC               	incf	i1LCD_clear@counter+1,f
  9702  1162  3000               	movlw	0
  9703  1163  07FC               	addwf	i1LCD_clear@counter+1,f
  9704  1164  3003               	movlw	3
  9705  1165  027C               	subwf	i1LCD_clear@counter+1,w
  9706  1166  30E8               	movlw	232
  9707  1167  1903               	skipnz
  9708  1168  027B               	subwf	i1LCD_clear@counter,w
  9709  1169  1C03               	skipc
  9710  116A  296C               	goto	u539_21
  9711  116B  296D               	goto	u539_20
  9712  116C                     u539_21:
  9713  116C  295E               	goto	i1l3512
  9714  116D                     u539_20:
  9715  116D                     i1l58:
  9716  116D  0008               	return
  9717  116E                     __end_ofi1_LCD_clear:
  9718                           
  9719                           	psect	text35
  9720  16A1                     __ptext35:	
  9721 ;; *************** function i1_LCD_write *****************
  9722 ;; Defined at:
  9723 ;;		line 67 in file "LCDdrive.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  c               1    wreg     unsigned char 
  9726 ;;  rs              1    0[COMMON] unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  c               1    7[COMMON] unsigned char 
  9729 ;;  counter         2    9[COMMON] unsigned int 
  9730 ;;  RSmask          1    8[COMMON] unsigned char 
  9731 ;;  temp            1    6[COMMON] unsigned char 
  9732 ;;  RB6_BAK         1    5[COMMON] unsigned char 
  9733 ;;  RB7_BAK         1    4[COMMON] unsigned char 
  9734 ;;  TRISB_BAK       1    3[COMMON] unsigned char 
  9735 ;;  intsON          1    2[COMMON] unsigned char 
  9736 ;;  INTCON_BAK      1    0        unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9746 ;;      Params:         1       0       0       0       0
  9747 ;;      Locals:         9       0       0       0       0
  9748 ;;      Temps:          1       0       0       0       0
  9749 ;;      Totals:        11       0       0       0       0
  9750 ;;Total ram usage:       11 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; This function calls:
  9753 ;;		Nothing
  9754 ;; This function is called by:
  9755 ;;		i1_LCD_clear
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           
  9760                           ;psect for function i1_LCD_write
  9761  16A1                     i1_LCD_write:
  9762                           
  9763                           ;incstack = 0
  9764 ;; hardware stack exceeded
  9765                           ; Regs used in i1_LCD_write: [wreg+status,2+status,0]
  9766                           ;i1LCD_write@c stored from wreg
  9767  16A1  00F7               	movwf	i1LCD_write@c
  9768  16A2                     i1l3288:
  9769                           
  9770                           ;LCDdrive.c: 67: void LCD_write(unsigned char c, unsigned char rs);LCDdrive.c: 68: {;LCD
      +                          drive.c: 69:         unsigned char temp, intsON;;LCDdrive.c: 70:         unsigned char R
      +                          Smask = 0;
  9771  16A2  01F8               	clrf	i1LCD_write@RSmask
  9772  16A3                     i1l3290:
  9773                           
  9774                           ;LCDdrive.c: 71:         unsigned char TRISB_BAK;;LCDdrive.c: 72:         unsigned char 
      +                          RB7_BAK, RB6_BAK;;LCDdrive.c: 73:         unsigned char INTCON_BAK;;LCDdrive.c: 74:     
      +                              unsigned int counter;;LCDdrive.c: 78:         intsON = INTCONbits.GIE;
  9775  16A3  3000               	movlw	0
  9776  16A4  1B8B               	btfsc	11,7	;volatile
  9777  16A5  3001               	movlw	1
  9778  16A6  00F2               	movwf	i1LCD_write@intsON
  9779  16A7                     i1l3292:
  9780                           
  9781                           ;LCDdrive.c: 79:         INTCONbits.GIE = 0;
  9782  16A7  138B               	bcf	11,7	;volatile
  9783                           
  9784                           ;LCDdrive.c: 80:         TRISB_BAK = TRISB;
  9785  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  9786  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  9787  16AA  0806               	movf	6,w	;volatile
  9788  16AB  00F1               	movwf	??i1_LCD_write
  9789  16AC  0871               	movf	??i1_LCD_write,w
  9790  16AD  00F3               	movwf	i1LCD_write@TRISB_BAK
  9791  16AE                     i1l3294:
  9792                           
  9793                           ;LCDdrive.c: 81:         RB7_BAK = RB7;
  9794  16AE  3000               	movlw	0
  9795  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  9796  16B0  1303               	bcf	3,6	;RP1=0, select bank0
  9797  16B1  1B86               	btfsc	6,7	;volatile
  9798  16B2  3001               	movlw	1
  9799  16B3  00F4               	movwf	i1LCD_write@RB7_BAK
  9800  16B4                     i1l3296:
  9801                           
  9802                           ;LCDdrive.c: 82:         RB6_BAK = RB6;
  9803  16B4  3000               	movlw	0
  9804  16B5  1B06               	btfsc	6,6	;volatile
  9805  16B6  3001               	movlw	1
  9806  16B7  00F5               	movwf	i1LCD_write@RB6_BAK
  9807  16B8                     i1l3298:
  9808                           
  9809                           ;LCDdrive.c: 85:         TRISB = 0x00;
  9810  16B8  1683               	bsf	3,5	;RP0=1, select bank1
  9811  16B9  1303               	bcf	3,6	;RP1=0, select bank1
  9812  16BA  0186               	clrf	6	;volatile
  9813  16BB                     i1l3300:
  9814                           
  9815                           ;LCDdrive.c: 87:         if (rs == 1) RSmask = 0x10;
  9816  16BB  0370               	decf	i1LCD_write@rs,w
  9817  16BC  1D03               	btfss	3,2
  9818  16BD  2EBF               	goto	u500_21
  9819  16BE  2EC0               	goto	u500_20
  9820  16BF                     u500_21:
  9821  16BF  2EC4               	goto	i1l36
  9822  16C0                     u500_20:
  9823  16C0                     i1l3302:
  9824  16C0  3010               	movlw	16
  9825  16C1  00F1               	movwf	??i1_LCD_write
  9826  16C2  0871               	movf	??i1_LCD_write,w
  9827  16C3  00F8               	movwf	i1LCD_write@RSmask
  9828  16C4                     i1l36:
  9829                           
  9830                           ;LCDdrive.c: 90:         temp = c;
  9831  16C4  0877               	movf	i1LCD_write@c,w
  9832  16C5  00F1               	movwf	??i1_LCD_write
  9833  16C6  0871               	movf	??i1_LCD_write,w
  9834  16C7  00F6               	movwf	i1LCD_write@temp
  9835  16C8                     i1l3304:
  9836                           
  9837                           ;LCDdrive.c: 91:         PORTB = (temp >> 4) | RSmask;
  9838  16C8  0876               	movf	i1LCD_write@temp,w
  9839  16C9  00F1               	movwf	??i1_LCD_write
  9840  16CA  3004               	movlw	4
  9841  16CB                     u501_25:
  9842  16CB  1003               	clrc
  9843  16CC  0CF1               	rrf	??i1_LCD_write,f
  9844  16CD  3EFF               	addlw	-1
  9845  16CE  1D03               	skipz
  9846  16CF  2ECB               	goto	u501_25
  9847  16D0  0871               	movf	??i1_LCD_write,w
  9848  16D1  0478               	iorwf	i1LCD_write@RSmask,w
  9849  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  9850  16D3  1303               	bcf	3,6	;RP1=0, select bank0
  9851  16D4  0086               	movwf	6	;volatile
  9852  16D5                     i1l3306:
  9853                           
  9854                           ;LCDdrive.c: 95:         RB5 = 1;
  9855  16D5  1686               	bsf	6,5	;volatile
  9856  16D6                     i1l3308:
  9857                           
  9858                           ;LCDdrive.c: 96:         for (counter = 0; counter < 2; counter++);
  9859  16D6  01F9               	clrf	i1LCD_write@counter
  9860  16D7  01FA               	clrf	i1LCD_write@counter+1
  9861  16D8                     i1l3314:
  9862  16D8  3001               	movlw	1
  9863  16D9  07F9               	addwf	i1LCD_write@counter,f
  9864  16DA  1803               	skipnc
  9865  16DB  0AFA               	incf	i1LCD_write@counter+1,f
  9866  16DC  3000               	movlw	0
  9867  16DD  07FA               	addwf	i1LCD_write@counter+1,f
  9868  16DE  3000               	movlw	0
  9869  16DF  027A               	subwf	i1LCD_write@counter+1,w
  9870  16E0  3002               	movlw	2
  9871  16E1  1903               	skipnz
  9872  16E2  0279               	subwf	i1LCD_write@counter,w
  9873  16E3  1C03               	skipc
  9874  16E4  2EE6               	goto	u502_21
  9875  16E5  2EE7               	goto	u502_20
  9876  16E6                     u502_21:
  9877  16E6  2ED8               	goto	i1l3314
  9878  16E7                     u502_20:
  9879  16E7                     i1l38:
  9880                           
  9881                           ;LCDdrive.c: 98:         RB5 = 0;
  9882  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  9883  16E8  1303               	bcf	3,6	;RP1=0, select bank0
  9884  16E9  1286               	bcf	6,5	;volatile
  9885  16EA                     i1l3316:
  9886                           
  9887                           ;LCDdrive.c: 99:         for (counter = 0; counter < 2; counter++);
  9888  16EA  01F9               	clrf	i1LCD_write@counter
  9889  16EB  01FA               	clrf	i1LCD_write@counter+1
  9890  16EC                     i1l3322:
  9891  16EC  3001               	movlw	1
  9892  16ED  07F9               	addwf	i1LCD_write@counter,f
  9893  16EE  1803               	skipnc
  9894  16EF  0AFA               	incf	i1LCD_write@counter+1,f
  9895  16F0  3000               	movlw	0
  9896  16F1  07FA               	addwf	i1LCD_write@counter+1,f
  9897  16F2  3000               	movlw	0
  9898  16F3  027A               	subwf	i1LCD_write@counter+1,w
  9899  16F4  3002               	movlw	2
  9900  16F5  1903               	skipnz
  9901  16F6  0279               	subwf	i1LCD_write@counter,w
  9902  16F7  1C03               	skipc
  9903  16F8  2EFA               	goto	u503_21
  9904  16F9  2EFB               	goto	u503_20
  9905  16FA                     u503_21:
  9906  16FA  2EEC               	goto	i1l3322
  9907  16FB                     u503_20:
  9908  16FB                     i1l3324:
  9909                           
  9910                           ;LCDdrive.c: 102:         PORTB = (c & 0x0F) | RSmask;
  9911  16FB  0877               	movf	i1LCD_write@c,w
  9912  16FC  390F               	andlw	15
  9913  16FD  0478               	iorwf	i1LCD_write@RSmask,w
  9914  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  9915  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  9916  1700  0086               	movwf	6	;volatile
  9917  1701                     i1l3326:
  9918                           
  9919                           ;LCDdrive.c: 106:         RB5 = 1;
  9920  1701  1686               	bsf	6,5	;volatile
  9921  1702                     i1l3328:
  9922                           
  9923                           ;LCDdrive.c: 107:         for (counter = 0; counter < 2; counter++);
  9924  1702  01F9               	clrf	i1LCD_write@counter
  9925  1703  01FA               	clrf	i1LCD_write@counter+1
  9926  1704                     i1l3334:
  9927  1704  3001               	movlw	1
  9928  1705  07F9               	addwf	i1LCD_write@counter,f
  9929  1706  1803               	skipnc
  9930  1707  0AFA               	incf	i1LCD_write@counter+1,f
  9931  1708  3000               	movlw	0
  9932  1709  07FA               	addwf	i1LCD_write@counter+1,f
  9933  170A  3000               	movlw	0
  9934  170B  027A               	subwf	i1LCD_write@counter+1,w
  9935  170C  3002               	movlw	2
  9936  170D  1903               	skipnz
  9937  170E  0279               	subwf	i1LCD_write@counter,w
  9938  170F  1C03               	skipc
  9939  1710  2F12               	goto	u504_21
  9940  1711  2F13               	goto	u504_20
  9941  1712                     u504_21:
  9942  1712  2F04               	goto	i1l3334
  9943  1713                     u504_20:
  9944  1713                     i1l42:
  9945                           
  9946                           ;LCDdrive.c: 109:         RB5 = 0;
  9947  1713  1283               	bcf	3,5	;RP0=0, select bank0
  9948  1714  1303               	bcf	3,6	;RP1=0, select bank0
  9949  1715  1286               	bcf	6,5	;volatile
  9950  1716                     i1l3336:
  9951                           
  9952                           ;LCDdrive.c: 110:         for (counter = 0; counter < 2; counter++);
  9953  1716  01F9               	clrf	i1LCD_write@counter
  9954  1717  01FA               	clrf	i1LCD_write@counter+1
  9955  1718                     i1l3342:
  9956  1718  3001               	movlw	1
  9957  1719  07F9               	addwf	i1LCD_write@counter,f
  9958  171A  1803               	skipnc
  9959  171B  0AFA               	incf	i1LCD_write@counter+1,f
  9960  171C  3000               	movlw	0
  9961  171D  07FA               	addwf	i1LCD_write@counter+1,f
  9962  171E  3000               	movlw	0
  9963  171F  027A               	subwf	i1LCD_write@counter+1,w
  9964  1720  3002               	movlw	2
  9965  1721  1903               	skipnz
  9966  1722  0279               	subwf	i1LCD_write@counter,w
  9967  1723  1C03               	skipc
  9968  1724  2F26               	goto	u505_21
  9969  1725  2F27               	goto	u505_20
  9970  1726                     u505_21:
  9971  1726  2F18               	goto	i1l3342
  9972  1727                     u505_20:
  9973  1727                     i1l3344:
  9974                           
  9975                           ;LCDdrive.c: 112:         PORTB = 0x10;
  9976  1727  3010               	movlw	16
  9977  1728  1283               	bcf	3,5	;RP0=0, select bank0
  9978  1729  1303               	bcf	3,6	;RP1=0, select bank0
  9979  172A  0086               	movwf	6	;volatile
  9980  172B                     i1l3346:
  9981                           
  9982                           ;LCDdrive.c: 114:         RB7 = RB7_BAK;
  9983  172B  1874               	btfsc	i1LCD_write@RB7_BAK,0
  9984  172C  2F2E               	goto	u506_21
  9985  172D  2F32               	goto	u506_20
  9986  172E                     u506_21:
  9987  172E  1283               	bcf	3,5	;RP0=0, select bank0
  9988  172F  1303               	bcf	3,6	;RP1=0, select bank0
  9989  1730  1786               	bsf	6,7	;volatile
  9990  1731  2F35               	goto	u507_24
  9991  1732                     u506_20:
  9992  1732  1283               	bcf	3,5	;RP0=0, select bank0
  9993  1733  1303               	bcf	3,6	;RP1=0, select bank0
  9994  1734  1386               	bcf	6,7	;volatile
  9995  1735                     u507_24:
  9996  1735                     i1l3348:
  9997                           
  9998                           ;LCDdrive.c: 115:         RB6 = RB6_BAK;
  9999  1735  1875               	btfsc	i1LCD_write@RB6_BAK,0
 10000  1736  2F38               	goto	u508_21
 10001  1737  2F3C               	goto	u508_20
 10002  1738                     u508_21:
 10003  1738  1283               	bcf	3,5	;RP0=0, select bank0
 10004  1739  1303               	bcf	3,6	;RP1=0, select bank0
 10005  173A  1706               	bsf	6,6	;volatile
 10006  173B  2F3F               	goto	u509_24
 10007  173C                     u508_20:
 10008  173C  1283               	bcf	3,5	;RP0=0, select bank0
 10009  173D  1303               	bcf	3,6	;RP1=0, select bank0
 10010  173E  1306               	bcf	6,6	;volatile
 10011  173F                     u509_24:
 10012                           
 10013                           ;LCDdrive.c: 117:         TRISB = TRISB_BAK;
 10014  173F  0873               	movf	i1LCD_write@TRISB_BAK,w
 10015  1740  1683               	bsf	3,5	;RP0=1, select bank1
 10016  1741  1303               	bcf	3,6	;RP1=0, select bank1
 10017  1742  0086               	movwf	6	;volatile
 10018  1743  1283               	bcf	3,5	;RP0=0, select bank0
 10019  1744  1303               	bcf	3,6	;RP1=0, select bank0
 10020  1745  0806               	movf	6,w	;volatile
 10021  1746                     i1l3350:
 10022                           
 10023                           ;LCDdrive.c: 120:         INTCONbits.RBIF=0;
 10024  1746  100B               	bcf	11,0	;volatile
 10025  1747                     i1l3352:
 10026                           
 10027                           ;LCDdrive.c: 121:         INTCONbits.INTF=0;
 10028  1747  108B               	bcf	11,1	;volatile
 10029  1748                     i1l3354:
 10030                           
 10031                           ;LCDdrive.c: 123:         if(intsON) GIE = 1;
 10032  1748  0872               	movf	i1LCD_write@intsON,w
 10033  1749  1903               	btfsc	3,2
 10034  174A  2F4C               	goto	u510_21
 10035  174B  2F4D               	goto	u510_20
 10036  174C                     u510_21:
 10037  174C  2F4E               	goto	i1l46
 10038  174D                     u510_20:
 10039  174D                     i1l3356:
 10040  174D  178B               	bsf	11,7	;volatile
 10041  174E                     i1l46:
 10042  174E  0008               	return
 10043  174F                     __end_ofi1_LCD_write:
 10044                           
 10045                           	psect	text36
 10046  1023                     __ptext36:	
 10047 ;; *************** function i1_ADC_read *****************
 10048 ;; Defined at:
 10049 ;;		line 69 in file "Clock_ws.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;		None
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;  result          2    3[COMMON] int 
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  2    0[COMMON] int 
 10056 ;; Registers used:
 10057 ;;		wreg
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10063 ;;      Params:         2       0       0       0       0
 10064 ;;      Locals:         2       0       0       0       0
 10065 ;;      Temps:          1       0       0       0       0
 10066 ;;      Totals:         5       0       0       0       0
 10067 ;;Total ram usage:        5 bytes
 10068 ;; Hardware stack levels used: 1
 10069 ;; This function calls:
 10070 ;;		Nothing
 10071 ;; This function is called by:
 10072 ;;		_alarmISR
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           
 10077                           ;psect for function i1_ADC_read
 10078  1023                     i1_ADC_read:
 10079  1023                     i1l3514:	
 10080                           ;incstack = 0
 10081                           ; Regs used in i1_ADC_read: [wreg]
 10082                           
 10083                           
 10084                           ;Clock_ws.c: 71:     signed int result;;Clock_ws.c: 72:     _delay((unsigned long)((20)*
      +                          (3276800/4000000.0)));
 10085  1023  3005               	movlw	5
 10086  1024  00F2               	movwf	??i1_ADC_read
 10087  1025                     u656_27:
 10088  1025  0BF2               	decfsz	??i1_ADC_read,f
 10089  1026  2825               	goto	u656_27
 10090  1027                     i1l3516:
 10091                           
 10092                           ;Clock_ws.c: 73:     ADCON0bits.GO =1;
 10093  1027  1283               	bcf	3,5	;RP0=0, select bank0
 10094  1028  1303               	bcf	3,6	;RP1=0, select bank0
 10095  1029  151F               	bsf	31,2	;volatile
 10096  102A                     i1l201:	
 10097                           ;Clock_ws.c: 74:     while (ADCON0bits.GO ==1);
 10098                           
 10099  102A  191F               	btfsc	31,2	;volatile
 10100  102B  282D               	goto	u540_21
 10101  102C  282E               	goto	u540_20
 10102  102D                     u540_21:
 10103  102D  282A               	goto	i1l201
 10104  102E                     u540_20:
 10105  102E                     i1l3518:
 10106                           
 10107                           ;Clock_ws.c: 75:     result = (ADRESH<<8)+ ADRESL;
 10108  102E  081E               	movf	30,w	;volatile
 10109  102F  00F4               	movwf	i1ADC_read@result+1
 10110  1030  1683               	bsf	3,5	;RP0=1, select bank1
 10111  1031  1303               	bcf	3,6	;RP1=0, select bank1
 10112  1032  081E               	movf	30,w	;volatile
 10113  1033  00F3               	movwf	i1ADC_read@result
 10114                           
 10115                           ;Clock_ws.c: 76:     return(result);
 10116  1034  0874               	movf	i1ADC_read@result+1,w
 10117  1035  00F1               	movwf	?i1_ADC_read+1
 10118  1036  0873               	movf	i1ADC_read@result,w
 10119  1037  00F0               	movwf	?i1_ADC_read
 10120  1038                     i1l204:
 10121  1038  0008               	return
 10122  1039                     __end_ofi1_ADC_read:
 10123                           
 10124                           	psect	text37
 10125  15FF                     __ptext37:	
 10126 ;; *************** function ___flge *****************
 10127 ;; Defined at:
 10128 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;  ff1             4    0[COMMON] int 
 10131 ;;  ff2             4    4[COMMON] int 
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;		None
 10134 ;; Return value:  Size  Location     Type
 10135 ;;		None               void
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10143 ;;      Params:         8       0       0       0       0
 10144 ;;      Locals:         0       0       0       0       0
 10145 ;;      Temps:          4       0       0       0       0
 10146 ;;      Totals:        12       0       0       0       0
 10147 ;;Total ram usage:       12 bytes
 10148 ;; Hardware stack levels used: 1
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_alarmISR
 10153 ;;		_LCD_display_float
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function ___flge
 10159  15FF                     ___flge:
 10160  15FF                     i1l3474:	
 10161                           ;incstack = 0
 10162                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10163                           
 10164  15FF  3000               	movlw	0
 10165  1600  0570               	andwf	___flge@ff1,w
 10166  1601  00F8               	movwf	??___flge
 10167  1602  3000               	movlw	0
 10168  1603  0571               	andwf	___flge@ff1+1,w
 10169  1604  00F9               	movwf	??___flge+1
 10170  1605  3080               	movlw	128
 10171  1606  0572               	andwf	___flge@ff1+2,w
 10172  1607  00FA               	movwf	??___flge+2
 10173  1608  307F               	movlw	127
 10174  1609  0573               	andwf	___flge@ff1+3,w
 10175  160A  00FB               	movwf	??___flge+3
 10176  160B  087B               	movf	??___flge+3,w
 10177  160C  047A               	iorwf	??___flge+2,w
 10178  160D  0479               	iorwf	??___flge+1,w
 10179  160E  0478               	iorwf	??___flge,w
 10180  160F  1D03               	skipz
 10181  1610  2E12               	goto	u531_21
 10182  1611  2E13               	goto	u531_20
 10183  1612                     u531_21:
 10184  1612  2E1B               	goto	i1l542
 10185  1613                     u531_20:
 10186  1613                     i1l3476:
 10187  1613  3000               	movlw	0
 10188  1614  00F3               	movwf	___flge@ff1+3
 10189  1615  3000               	movlw	0
 10190  1616  00F2               	movwf	___flge@ff1+2
 10191  1617  3000               	movlw	0
 10192  1618  00F1               	movwf	___flge@ff1+1
 10193  1619  3000               	movlw	0
 10194  161A  00F0               	movwf	___flge@ff1
 10195  161B                     i1l542:
 10196  161B  3000               	movlw	0
 10197  161C  0574               	andwf	___flge@ff2,w
 10198  161D  00F8               	movwf	??___flge
 10199  161E  3000               	movlw	0
 10200  161F  0575               	andwf	___flge@ff2+1,w
 10201  1620  00F9               	movwf	??___flge+1
 10202  1621  3080               	movlw	128
 10203  1622  0576               	andwf	___flge@ff2+2,w
 10204  1623  00FA               	movwf	??___flge+2
 10205  1624  307F               	movlw	127
 10206  1625  0577               	andwf	___flge@ff2+3,w
 10207  1626  00FB               	movwf	??___flge+3
 10208  1627  087B               	movf	??___flge+3,w
 10209  1628  047A               	iorwf	??___flge+2,w
 10210  1629  0479               	iorwf	??___flge+1,w
 10211  162A  0478               	iorwf	??___flge,w
 10212  162B  1D03               	skipz
 10213  162C  2E2E               	goto	u532_21
 10214  162D  2E2F               	goto	u532_20
 10215  162E                     u532_21:
 10216  162E  2E37               	goto	i1l3480
 10217  162F                     u532_20:
 10218  162F                     i1l3478:
 10219  162F  3000               	movlw	0
 10220  1630  00F7               	movwf	___flge@ff2+3
 10221  1631  3000               	movlw	0
 10222  1632  00F6               	movwf	___flge@ff2+2
 10223  1633  3000               	movlw	0
 10224  1634  00F5               	movwf	___flge@ff2+1
 10225  1635  3000               	movlw	0
 10226  1636  00F4               	movwf	___flge@ff2
 10227  1637                     i1l3480:
 10228  1637  1FF3               	btfss	___flge@ff1+3,7
 10229  1638  2E3A               	goto	u533_21
 10230  1639  2E3B               	goto	u533_20
 10231  163A                     u533_21:
 10232  163A  2E5F               	goto	i1l3484
 10233  163B                     u533_20:
 10234  163B                     i1l3482:
 10235  163B  3000               	movlw	0
 10236  163C  00F8               	movwf	??___flge
 10237  163D  3000               	movlw	0
 10238  163E  00F9               	movwf	??___flge+1
 10239  163F  3000               	movlw	0
 10240  1640  00FA               	movwf	??___flge+2
 10241  1641  3080               	movlw	128
 10242  1642  00FB               	movwf	??___flge+3
 10243  1643  0870               	movf	___flge@ff1,w
 10244  1644  02F8               	subwf	??___flge,f
 10245  1645  0871               	movf	___flge@ff1+1,w
 10246  1646  1C03               	skipc
 10247  1647  0F71               	incfsz	___flge@ff1+1,w
 10248  1648  2E4A               	goto	u534_21
 10249  1649  2E4B               	goto	u534_22
 10250  164A                     u534_21:
 10251  164A  02F9               	subwf	??___flge+1,f
 10252  164B                     u534_22:
 10253  164B  0872               	movf	___flge@ff1+2,w
 10254  164C  1C03               	skipc
 10255  164D  0F72               	incfsz	___flge@ff1+2,w
 10256  164E  2E50               	goto	u534_23
 10257  164F  2E51               	goto	u534_24
 10258  1650                     u534_23:
 10259  1650  02FA               	subwf	??___flge+2,f
 10260  1651                     u534_24:
 10261  1651  0873               	movf	___flge@ff1+3,w
 10262  1652  1C03               	skipc
 10263  1653  0F73               	incfsz	___flge@ff1+3,w
 10264  1654  2E56               	goto	u534_25
 10265  1655  2E57               	goto	u534_26
 10266  1656                     u534_25:
 10267  1656  02FB               	subwf	??___flge+3,f
 10268  1657                     u534_26:
 10269  1657  087B               	movf	??___flge+3,w
 10270  1658  00F3               	movwf	___flge@ff1+3
 10271  1659  087A               	movf	??___flge+2,w
 10272  165A  00F2               	movwf	___flge@ff1+2
 10273  165B  0879               	movf	??___flge+1,w
 10274  165C  00F1               	movwf	___flge@ff1+1
 10275  165D  0878               	movf	??___flge,w
 10276  165E  00F0               	movwf	___flge@ff1
 10277  165F                     i1l3484:
 10278  165F  1FF7               	btfss	___flge@ff2+3,7
 10279  1660  2E62               	goto	u535_21
 10280  1661  2E63               	goto	u535_20
 10281  1662                     u535_21:
 10282  1662  2E87               	goto	i1l545
 10283  1663                     u535_20:
 10284  1663                     i1l3486:
 10285  1663  3000               	movlw	0
 10286  1664  00F8               	movwf	??___flge
 10287  1665  3000               	movlw	0
 10288  1666  00F9               	movwf	??___flge+1
 10289  1667  3000               	movlw	0
 10290  1668  00FA               	movwf	??___flge+2
 10291  1669  3080               	movlw	128
 10292  166A  00FB               	movwf	??___flge+3
 10293  166B  0874               	movf	___flge@ff2,w
 10294  166C  02F8               	subwf	??___flge,f
 10295  166D  0875               	movf	___flge@ff2+1,w
 10296  166E  1C03               	skipc
 10297  166F  0F75               	incfsz	___flge@ff2+1,w
 10298  1670  2E72               	goto	u536_21
 10299  1671  2E73               	goto	u536_22
 10300  1672                     u536_21:
 10301  1672  02F9               	subwf	??___flge+1,f
 10302  1673                     u536_22:
 10303  1673  0876               	movf	___flge@ff2+2,w
 10304  1674  1C03               	skipc
 10305  1675  0F76               	incfsz	___flge@ff2+2,w
 10306  1676  2E78               	goto	u536_23
 10307  1677  2E79               	goto	u536_24
 10308  1678                     u536_23:
 10309  1678  02FA               	subwf	??___flge+2,f
 10310  1679                     u536_24:
 10311  1679  0877               	movf	___flge@ff2+3,w
 10312  167A  1C03               	skipc
 10313  167B  0F77               	incfsz	___flge@ff2+3,w
 10314  167C  2E7E               	goto	u536_25
 10315  167D  2E7F               	goto	u536_26
 10316  167E                     u536_25:
 10317  167E  02FB               	subwf	??___flge+3,f
 10318  167F                     u536_26:
 10319  167F  087B               	movf	??___flge+3,w
 10320  1680  00F7               	movwf	___flge@ff2+3
 10321  1681  087A               	movf	??___flge+2,w
 10322  1682  00F6               	movwf	___flge@ff2+2
 10323  1683  0879               	movf	??___flge+1,w
 10324  1684  00F5               	movwf	___flge@ff2+1
 10325  1685  0878               	movf	??___flge,w
 10326  1686  00F4               	movwf	___flge@ff2
 10327  1687                     i1l545:
 10328  1687  3080               	movlw	128
 10329  1688  06F3               	xorwf	___flge@ff1+3,f
 10330  1689  3080               	movlw	128
 10331  168A  06F7               	xorwf	___flge@ff2+3,f
 10332  168B  0877               	movf	___flge@ff2+3,w
 10333  168C  0273               	subwf	___flge@ff1+3,w
 10334  168D  1D03               	skipz
 10335  168E  2E99               	goto	u537_25
 10336  168F  0876               	movf	___flge@ff2+2,w
 10337  1690  0272               	subwf	___flge@ff1+2,w
 10338  1691  1D03               	skipz
 10339  1692  2E99               	goto	u537_25
 10340  1693  0875               	movf	___flge@ff2+1,w
 10341  1694  0271               	subwf	___flge@ff1+1,w
 10342  1695  1D03               	skipz
 10343  1696  2E99               	goto	u537_25
 10344  1697  0874               	movf	___flge@ff2,w
 10345  1698  0270               	subwf	___flge@ff1,w
 10346  1699                     u537_25:
 10347  1699  1803               	skipnc
 10348  169A  2E9C               	goto	u537_21
 10349  169B  2E9D               	goto	u537_20
 10350  169C                     u537_21:
 10351  169C  2E9F               	goto	i1l3490
 10352  169D                     u537_20:
 10353  169D                     i1l3488:
 10354  169D  1003               	clrc
 10355  169E  2EA0               	goto	i1l546
 10356  169F                     i1l3490:
 10357  169F  1403               	setc
 10358  16A0                     i1l546:
 10359  16A0  0008               	return
 10360  16A1                     __end_of___flge:
 10361  007E                     btemp	set	126	;btemp
 10362  007E                     wtemp0	set	126
 10363                           
 10364                           	psect	config
 10365                           
 10366                           ;Config register CONFIG @ 0x2007
 10367                           ;	Oscillator Selection bits
 10368                           ;	FOSC = XT, XT oscillator
 10369                           ;	Watchdog Timer Enable bit
 10370                           ;	WDTE = OFF, WDT disabled
 10371                           ;	Power-up Timer Enable bit
 10372                           ;	PWRTE = OFF, PWRT disabled
 10373                           ;	Brown-out Reset Enable bit
 10374                           ;	BOREN = OFF, BOR disabled
 10375                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10376                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10377                           ;	Data EEPROM Memory Code Protection bit
 10378                           ;	CPD = OFF, Data EEPROM code protection off
 10379                           ;	Flash Program Memory Write Enable bits
 10380                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10381                           ;	In-Circuit Debugger Mode bit
 10382                           ;	DEBUG = 0x1, unprogrammed default
 10383                           ;	Flash Program Memory Code Protection bit
 10384                           ;	CP = OFF, Code protection off
 10385  2007                     	org	8199
 10386  2007  3F39               	dw	16185

Data Sizes:
    Strings     18
    Constant    0
    Data        7
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     57      57
    BANK1            80     70      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK1[12]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK1[12]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK1[12]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK1[12]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(COMMON[12]), LCD_display_value@buffer(BANK1[12]), 

    LCD_putsc@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_8(CODE[8]), STR_1(CODE[4]), 

    LCD_puts@s	PTR unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), LCD_display_float@output(COMMON[7]), LCD_display_value@buffer(BANK1[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _alarmISR in COMMON

    _alarmISR->i1_LCD_clear
    _alarmISR->i1___xxtofl
    i1___xxtofl->i1_ADC_read
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    i1_LCD_clear->i1_LCD_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _alarmISR in BANK0

    _alarmISR->i1___fladd
    i1___flmul->i1___xxtofl
    i1___fladd->i1___flmul

Critical Paths under _main in BANK1

    _main->_set_time
    _main->_setup
    _setup->_updateClock
    _LCD_initialise->_LCD_clear
    _set_time->_updateClock
    _updateClock->_LCD_display_value
    _LCD_cursor->_LCD_write
    _convert_time->_LCD_puts
    _set_temp->___fladd
    ___xxtofl->_ADC_read
    ___flmul->___xxtofl
    ___fladd->___flmul
    _LCD_putsc->_LCD_putch
    _LCD_display_value->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _LCD_puts->_LCD_putch
    _LCD_putch->_LCD_write
    _LCD_clear->_LCD_write

Critical Paths under _alarmISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _alarmISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _alarmISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42061
                              _delay
                           _set_temp
                           _set_time
                              _setup
                          _tick_tock
 ---------------------------------------------------------------------------------
 (1) _tick_tock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                9     9      0   12907
                                             61 BANK1      9     9      0
                     _ADC_initialise
                     _LCD_initialise
                        _updateClock
 ---------------------------------------------------------------------------------
 (2) _LCD_initialise                                       2     2      0    2818
                                             13 BANK1      2     2      0
                          _LCD_clear
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _ADC_initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_time                                             9     9      0   13937
                                             61 BANK1      9     9      0
                          _LCD_clear
                       _convert_time
                        _updateClock
 ---------------------------------------------------------------------------------
 (2) _updateClock                                         10     1      9   10089
                                             51 BANK1     10     1      9
                         _LCD_cursor
                  _LCD_display_value
                          _LCD_putch
                           _LCD_puts
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           3     2      1    1468
                                             11 BANK1      3     2      1
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _convert_time                                         3     3      0    2508
                                             19 BANK1      3     3      0
                           _LCD_puts
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             4     4      0   15095
                                             65 BANK1      4     4      0
                 _ADC_channel_select
                           _ADC_read
                          _LCD_clear
                  _LCD_display_value
                          _LCD_putch
                          _LCD_putsc
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     448
                                              5 BANK1     14    10      4
                           _ADC_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2973
                                             19 BANK1     26    18      8
                           _ADC_read (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2666
                                             45 BANK1     20    12      8
                           _ADC_read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_putsc                                            4     4      0    1518
                                             14 BANK1      4     4      0
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (3) _LCD_display_value                                   16    12      4    4309
                                             35 BANK1     16    12      4
                           _LCD_puts
                            ___fltol (ARG)
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 9     3      6    1796
                                             27 BANK1      8     2      6
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     7      6    1263
                                             14 BANK1     13     7      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                             10     2      8     311
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (3) _LCD_puts                                             5     3      2    2060
                                             14 BANK1      5     3      2
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (4) _LCD_putch                                            3     3      0    1316
                                             11 BANK1      3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            2     2      0    1340
                                             11 BANK1      2     2      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (5) _LCD_write                                           12    11      1    1248
                                              0 BANK1     11    10      1
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             5     3      2      23
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_channel_select                                   2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     4      2     122
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _alarmISR                                             5     5      0    5362
                                             52 BANK0      5     5      0
                             ___flge
                         i1_ADC_read
                        i1_LCD_clear
                          i1___fladd
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (8) i1___xxtofl                                          14    10      4     348
                                              5 COMMON     8     4      4
                                              0 BANK0      6     6      0
                         i1_ADC_read (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___flmul                                           26    18      8    1867
                                              6 BANK0     26    18      8
                         i1_ADC_read (ARG)
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) i1__Umul8_16                                          9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (8) i1___fladd                                           20    12      8    2036
                                             32 BANK0     20    12      8
                         i1_ADC_read (ARG)
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) i1_LCD_clear                                          2     2      0     556
                                             11 COMMON     2     2      0
                        i1_LCD_write
 ---------------------------------------------------------------------------------
 (9) i1_LCD_write                                         12    11      1     464
                                              0 COMMON    11    10      1
 ---------------------------------------------------------------------------------
 (8) i1_ADC_read                                           5     3      2      23
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _set_temp
     _ADC_channel_select
     _ADC_read
     _LCD_clear
       _LCD_write
     _LCD_display_value
       _LCD_puts
         _LCD_putch
           _LCD_write
       ___fltol (ARG)
       _ltoa (ARG)
         _ultoa
           ___lldiv
           ___llmod
     _LCD_putch
     _LCD_putsc
       _LCD_putch
     ___fladd
       _ADC_read (ARG)
       ___flmul (ARG)
         _ADC_read (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_read (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
     ___xxtofl
   _set_time
     _LCD_clear
     _convert_time
       _LCD_puts
       ___awmod
     _updateClock
       _LCD_cursor
         _LCD_write
       _LCD_display_value
       _LCD_putch
       _LCD_puts
   _setup
     _ADC_initialise
     _LCD_initialise
       _LCD_clear
       _LCD_write
     _updateClock
   _tick_tock

 _alarmISR (ROOT)
   ___flge
   i1_ADC_read
   i1_LCD_clear
     i1_LCD_write
   i1___fladd
     i1_ADC_read (ARG)
     i1___flmul (ARG)
       i1_ADC_read (ARG)
       i1__Umul8_16 (ARG)
       i1___xxtofl (ARG)
         i1_ADC_read (ARG)
     i1___xxtofl (ARG)
   i1___flmul
   i1___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     46      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      95      12        0.0%
ABS                  0      0      95       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 17 03:13:49 2021

                          pc 0002                  i1___fladd@a 0044                  i1___fladd@b 0040  
                         l33 1565                           l42 0AAC                           l51 1071  
                         l36 0A57                           l46 0AEF                           l38 0A7C  
                         l81 1052                           l58 11D5                           l90 1091  
                         l67 120D                           l76 119E                           _PM 00EB  
                i1___flmul@a 002A                  i1___flmul@b 0026                           fsr 0004  
        __Umul8_16@word_mpld 00A6                   i1___xxtofl 08B8         i1LCD_write@TRISB_BAK 0073  
                        l201 1FF1                          l204 1FFF                          l223 10E7  
                        l207 1FE6                          l224 10EF                          l216 08B7  
                        l219 128E                          l228 110C                          l404 145F  
                        l244 07D7                          l260 12E2                          l238 13F7  
                        l249 124B                          l534 1393                          l198 1FBF  
                        l703 0FF3                          l704 0FFF                          l561 14C6  
                        l801 0998                          l554 14DB                          l803 0A2F  
                        l564 14DB                          l661 0DDB                          l590 1338  
                        l830 15FE                          l822 113C                          l814 09F9  
                        l815 0A05                          l807 09DD                          l665 0E82  
                        l682 0F4D                          l674 0FFF                          l667 0E59  
                        l763 02F5                          l828 15E9                          l692 0F93  
                        l757 0389                          l686 0F71                          l695 0FD1  
                        l776 10CB                          l769 037D                          l778 10DD  
                        _GIE 005F                          _RD0 0040                          _RB5 0035  
                        _RD1 0041                          _RB6 0036                          _RD2 0042  
                        _RB7 0037                  ?i1_ADC_read 0070                  ?_LCD_cursor 00AB  
                        fsr0 0004                          indf 0000                 ___awmod@sign 00A6  
              i1___fladd@grs 0053                 ___flmul@aexp 00C5                 ___flmul@bexp 00C6  
               ___flmul@sign 00C0                 ___flmul@temp 00CB                 ___flmul@prod 00C7  
      updateClock@clock_mode 00D9                 ___fltol@exp1 00AA                         l3000 0E6C  
                       l3010 0E8B                         l3002 0E6D                         l3100 0FFA  
                       l3020 0EB3                         l3004 0E76                         l3102 0FFE  
                       l3030 0ECC                         l3022 0EBC                         l3014 0E94  
                       l3006 0E7A                         l3110 003A                         l3040 0F30  
                       l3024 0EBE                         l3016 0EAB                         l3008 0E86  
                       l3032 0ED1                         l3200 02D5                         l3120 004F  
                       l3112 003B                         l3104 0029                         l3050 0F63  
                       l3034 0EE7                         l3042 0F3F                         l3026 0EC2  
                       l3018 0EAF                         l3202 02D9                         l3130 0067  
                       l3122 0057                         l3114 0040                         l3106 0030  
                       l4002 1092                         l3060 0F7A                         l3052 0F6C  
                       l3044 0F55                         l3036 0F25                         l3028 0EC3  
                       l3220 032A                         l3212 02FA                         l3204 02DA  
                       l3140 0083                         l3132 006C                         l3124 005C  
                       l3116 0045                         l3108 0036                         l4004 1097  
                       l2502 0A83                         l3070 0F8A                         l3062 0F7F  
                       l3054 0F70                         l3046 0F5A                         l3038 0F2B  
                       l3230 0361                         l3214 02FF                         l3222 0330  
                       l3206 02DE                         l3150 00A6                         l3142 0088  
                       l3134 0071                         l3126 0062                         l3118 004D  
                       l4006 10A2                         l3400 10ED                         l2504 0A92  
                       l2600 159D                         l3080 0FAB                         l3072 0F90  
                       l3056 0F75                         l3064 0F81                         l3240 0381  
                       l3232 0363                         l3224 033D                         l3216 030D  
                       l3208 02F2                         l3160 0134                         l3152 00B3  
                       l3144 008D                         l3136 0079                         l3128 0066  
                       l3402 10EE                         l2530 0AE5                         l2522 0AB3  
                       l2514 0A9D                         l2506 0A98                         l2610 15E5  
                       l2602 15A1                         l3090 0FE3                         l3082 0FAF  
                       l3058 0F78                         l3066 0F85                         l3234 0371  
                       l3226 0348                         l3218 0311                         l3170 0196  
                       l3162 0150                         l3154 00D0                         l3138 007B  
                       l3250 0990                         l3410 06F1                         l3404 10F3  
                       l2532 0AE6                         l2524 0AC2                         l2516 0AAF  
                       l2508 0A99                         l2620 11DC                         l2540 140A  
                       l2612 15ED                         l2604 15A3                         l3092 0FE8  
                       l3084 0FCD                         l3076 0F98                         l3068 0F86  
                       l3236 0375                         l3228 0357                         l3180 0226  
                       l3172 01B3                         l3164 0159                         l3156 00EC  
                       l3148 0096                         l3260 09BB                         l3252 09A0  
                       l3244 0977                         l3420 0788                         l3412 0741  
                       l2700 1364                         l3406 10FB                         l2534 0AE7  
                       l2526 0AC6                         l2470 0A34                         l2622 11DE  
                       l2630 1202                         l2550 1439                         l2542 140D  
                       l2614 15F4                         l2606 15BF                         l3094 0FE9  
                       l3086 0FD6                         l3078 0F9D                         l3238 0376  
                       l3190 02B8                         l3182 0253                         l3174 01CC  
                       l3166 0169                         l3158 0118                         l3270 09EF  
                       l3262 09C2                         l3246 097C                         l3422 078E  
                       l3414 0777                         l2702 1368                         l2710 1385  
                       l3430 120E                         l2536 0AEE                         l2528 0AD2  
                       l2480 0A4E                         l2472 0A38                         l2632 1207  
                       l2624 11F1                         l2552 1447                         l2544 141A  
                       l2616 15F6                         l2608 15DF                         l2640 111B  
                       l3096 0FED                         l3088 0FDB                         l2720 10BA  
                       l3192 02C1                         l3184 0279                         l3176 01E9  
                       l3168 0186                         l3280 0A22                         l3272 09F3  
                       l3264 09C6                         l3256 09A9                         l3248 0980  
                       l3424 07AC                         l3416 077D                         l3408 06EB  
                       l2712 138A                         l2704 1372                         l3432 1214  
                       l2800 1FB0                         l3440 128F                         l2482 0A53  
                       l2474 0A3D                         l2650 11A8                         l2626 11F6  
                       l2618 11D6                         l2554 1448                         l2546 141E  
                       l2538 13F8                         l2570 1301                         l2562 12E3  
                       l2642 111F                         l2634 1110                         l3098 0FEF  
                       l2722 10C1                         l3194 02C5                         l3186 02A1  
                       l3178 0216                         l3282 0A26                         l3274 09FD  
                       l3266 09D4                         l3258 09AE                         l3426 07B3  
                       l3418 0782                         l2714 138F                         l2706 1378  
                       l3434 1219                         l2802 1FBC                         l3450 12A6  
                       l3442 1295                         l2812 1FD6                         l2804 1FE7  
                       l2484 0A5B                         l2476 0A45                         l2468 0A33  
                       l2660 11C2                         l2628 11FC                         l2556 1451  
                       l2548 1427                         l2572 1313                         l2564 12ED  
                       l2644 112A                         l2636 1110                         l2724 10C5  
                       l3196 02C6                         l3188 02AA                         l3284 0A27  
                       l3276 0A07                         l3268 09E4                         l3428 07D1  
                       l2708 137F                         l2820 0821                         l3436 121F  
                       l2740 14E9                         l2732 14DC                         l3380 1255  
                       l3372 124C                         l3460 12BD                         l3452 12A7  
                       l3444 129B                         l2806 1FEE                         l2494 0A6D  
                       l2486 0A68                         l2478 0A4D                         l2590 1062  
                       l2582 1056                         l2558 1457                         l2574 1321  
                       l2566 12F0                         l2638 1114                         l2910 0D78  
                       l2726 10D4                         l2718 10B8                         l3198 02CF  
                       l3278 0A1D                         l2670 1041                         l2830 0852  
                       l2822 0827                         l2814 0805                         l3438 1224  
                       l2750 1503                         l2742 14F8                         l2734 14E5  
                       l3390 1262                         l3382 1256                         l3374 1250  
                       l3470 12DA                         l3462 12C7                         l3454 12AB  
                       l3446 129C                         l2808 1FF5                         l2496 0A7F  
                       l2488 0A69                         l2656 11AC                         l2648 119F  
                       l2584 105E                         l2576 132A                         l2568 12FD  
                       l2592 1569                         l2920 0D8F                         l2912 0D7F  
                       l2728 10D9                         l2904 14BB                         l2680 1339  
                       l2672 1046                         l2840 088D                         l2832 0862  
                       l2824 0837                         l2816 080B                         l2760 151D  
                       l2752 1512                         l2744 14FF                         l3392 1267  
                       l3384 125A                         l3376 1251                         l3472 12E0  
                       l3464 12CD                         l3456 12B1                         l3448 12A0  
                       l3394 10DE                         l2666 11C6                         l2658 11BB  
                       l2578 1330                         l2594 1571                         l2930 0DA7  
                       l2922 0D94                         l2914 0D85                         l2906 14CB  
                       l2690 134B                         l2682 133C                         l2850 1394  
                       l2674 104A                         l2842 0896                         l2834 0868  
                       l2826 083D                         l2818 0812                         l2770 1537  
                       l2762 152C                         l2754 1519                         l3386 125C  
                       l3378 1254                         l3466 12D2                         l3458 12B7  
                       l3396 10E2                         l2596 1591                         l2676 1072  
                       l2940 0DBD                         l2932 0DAC                         l2924 0D9C  
                       l2916 0D89                         l2908 14D0                         l2692 1350  
                       l2684 1340                         l2860 13C9                         l2852 139B  
                       l2668 103C                         l2844 089F                         l2836 0877  
                       l2828 084C                         l2780 1551                         l2772 1546  
                       l2764 1533                         l3388 125D                         l3468 12D8  
                       l3398 10EB                         l2598 1595                         l2678 1086  
                       l2790 1182                         l2950 0DD1                         l2942 0DBE  
                       l2934 0DB2                         l2926 0D9D                         l2918 0D8A  
                       l2694 1356                         l2686 1345                         l2870 13EA  
                       l2854 13A0                         l2862 13D0                         l2846 08A4  
                       l2838 087D                         l2782 1560                         l2774 154D  
                       l2792 1187                         l2784 1171                         l2960 0DED  
                       l2944 0DC3                         l2952 0DD3                         l2936 0DB3  
                       l2928 0D9F                         l2880 1476                         l2696 1359  
                       l2688 1347                         l2872 13F3                         l2864 13D6  
                       l2856 13B6                         l2848 08AE                         l2794 118D  
                       l2786 1175                         l2970 0E01                         l2962 0DF1  
                       l2954 0DE1                         l2946 0DC8                         l2938 0DB9  
                       l2890 149A                         l2882 148B                         l2874 1460  
                       l2698 1360                         l2866 13DB                         l2858 13C0  
                       l2788 1177                         l2796 1193                         l2980 0E15  
                       l2972 0E05                         l2964 0DF5                         l2956 0DE5  
                       l2948 0DD0                         l2884 148C                         l2876 146D  
                       l2868 13E0                         l2798 1198                         l2990 0E26  
                       l2982 0E19                         l2974 0E09                         l2966 0DF9  
                       l2958 0DE9                         l2886 1494                         l2992 0E3D  
                       l2984 0E1D                         l2976 0E0D                         l2968 0DFD  
                       l2896 14A2                         l2888 1496                         l2994 0E5D  
                       l2986 0E21                         l2978 0E11                         l2898 14B4  
                       l2996 0E66                         l2988 0E25                         l2998 0E68  
                       STR_1 1018                         STR_2 101F                         STR_3 101C  
                       STR_4 101F                         STR_5 101C                         STR_6 1015  
                       STR_7 1015                         STR_8 1010                         _T0IE 005D  
                       u4010 14CB                         u4011 14CA                         u3300 0A7C  
                       u4100 0DE1                         u4020 14D0                         u3301 0A7B  
                       u4101 0DE0                         u4021 14CF                         u4005 14BD  
                       u3310 0A92                         u4110 0DE5                         u4030 0D89  
                       u3311 0A91                         u4111 0DE4                         u4031 0D88  
                       u3320 0AAC                         u4200 0E8B                         u4120 0E3D  
                       u4040 0D8F                         u3321 0AAB                         u4201 0E8A  
                       u4121 0E3C                         u4041 0D8E                         u3330 0AC2  
                       u3410 141E                         u4130 0E48                         u4050 0D94  
                       u3331 0AC1                         u3411 141D                         u4211 0E9D  
                       u4131 0E46                         u4051 0D93                         u3340 0ACF  
                       u4300 0F55                         u4220 0EAF                         u4212 0EA4  
                       u4140 0E49                         u4060 0DB2                         u3341 0ACB  
                       u3405 140F                         u4301 0F54                         u4221 0EAE  
                       u4213 0EAB                         u4125 0E39                         u4061 0DB1  
                       u3430 1439                         u3510 1330                         u4310 0F5A  
                       u4230 0EB3                         u4150 0E5D                         u4070 0DBD  
                       u3431 1438                         u3511 132F                         u4311 0F59  
                       u4231 0EB2                         u4151 0E5C                         u4071 0DBC  
                       u3360 0ADB                         u3280 0A53                         u3600 11BB  
                       u3520 1071                         u4400 0F9D                         u4240 0EC2  
                       u4160 0E6C                         u4080 0DC3                         u5200 129B  
                       u3361 0AD7                         u3281 0A52                         u3601 11BA  
                       u3521 1070                         u3425 1420                         u3505 1322  
                       u4401 0F9C                         u4241 0EC1                         u4161 0E6B  
                       u4081 0DC2                         u5201 129A                         u3354 0AD2  
                       u3610 11D5                         u3450 1457                         u3530 159D  
                       u4410 0FAF                         u4330 0F70                         u4090 0DC8  
                       u5210 12A6                         u3611 11D4                         u3451 1456  
                       u3435 1435                         u3531 159C                         u4411 0FAE  
                       u4331 0F6F                         u4091 0DC7                         u5211 12A5  
                       u5140 10F3                         u3380 0AEE                         u3460 12ED  
                       u3540 15E5                         u4420 0FBE                         u4340 0F75  
                       u4260 0EE7                         u4180 0E82                         u4500 0040  
                       u3700 1385                         u3620 1041                         u5300 12E0  
                       u5220 12B1                         u5141 10F2                         u3381 0AED  
                       u3445 1449                         u3461 12EC                         u3541 15E4  
                       u4341 0F74                         u4325 0F65                         u4261 0EE6  
                       u4181 0E81                         u4501 003F                         u3701 1384  
                       u3621 1040                         u5301 12DF                         u5221 12B0  
                       u5150 110C                         u3374 0ADE                         u3390 140A  
                       u3550 15FE                         u4430 0FCD                         u4350 0F7F  
                       u4190 0E86                         u4510 0045                         u3710 138A  
                       u3630 1340                         u5230 12B7                         u5151 110B  
                       u3295 0A5E                         u3391 1409                         u3551 15FD  
                       u4431 0FCC                         u4351 0F7E                         u4271 0EFE  
                       u4263 0EE3                         u4255 0EC5                         u4191 0E85  
                       u4175 0E6F                         u4511 0044                         u3711 1389  
                       u3631 133F                         u5231 12B6                         u3560 11F6  
                       u3480 1301                         u3800 1187                         u4440 0FD6  
                       u4360 0F85                         u4280 0F12                         u4272 0EFF  
                       u3720 10C5                         u4520 0066                         u5160 077D  
                       u3640 134B                         u5240 12BD                         u3561 11F5  
                       u3481 1300                         u3801 1186                         u4441 0FD5  
                       u4425 0FB9                         u4361 0F84                         u4281 0F13  
                       u4273 0F04                         u3721 10C4                         u4601 0142  
                       u4521 0065                         u5161 077C                         u3641 134A  
                       u5241 12BC                         u3570 1207                         u3490 1313  
                       u3810 1198                         u4450 0FDB                         u4370 0F8A  
                       u4290 0F30                         u4282 0F18                         u4274 0F05  
                       u4602 0149                         u4530 006C                         u5170 078E  
                       u3650 1356                         u5250 12C3                         u5155 1108  
                       u3571 1206                         u3491 1312                         u3475 12F2  
                       u3811 1197                         u4451 0FDA                         u4371 0F89  
                       u4291 0F2F                         u4283 0F19                         u4275 0F0A  
                       u4603 0150                         u4531 006B                         u5171 078D  
                       u3651 1355                         u5251 12C1                         u3580 120D  
                       u3820 119E                         u4460 0FE8                         u4380 0F90  
                       u4276 0F0B                         u3740 10D9                         u4700 0287  
                       u4540 0071                         u3900 13A0                         u5180 1214  
                       u5260 12C4                         u3581 120C                         u3821 119D  
                       u4461 0FE7                         u4381 0F8F                         u3741 10D8  
                       u4621 0178                         u4541 0070                         u3901 139F  
                       u5181 1213                         u3830 1FF5                         u3590 1114  
                       u4470 0FED                         u4390 0F97                         u4622 017F  
                       u4550 0088                         u3670 1368                         u3910 13D6  
                       u5190 121F                         u3750 14F8                         u5270 12CD  
                       u3831 1FF4                         u3495 130F                         u3591 1113  
                       u4471 0FEC                         u4391 0F96                         u3735 10CC  
                       u4711 0293                         u4631 01A5                         u4623 0186  
                       u4615 0152                         u4551 0087                         u3671 1367  
                       u3911 13D5                         u5191 121E                         u3751 14F7  
                       u5271 12CC                         u4480 0FFE                         u4800 02FF  
                       u4712 029A                         u4632 01AC                         u4560 008D  
                       u3680 1372                         u3920 13DB                         u3840 0821  
                       u3760 1512                         u5280 12D2                         u4481 0FFD  
                       u4801 02FE                         u4713 02A1                         u4705 0282  
                       u4633 01B3                         u4561 008C                         u3681 1371  
                       u3665 135A                         u3921 13DA                         u3841 0820  
                       u3761 1511                         u5281 12D1                         i1l42 1713  
                       u4810 0311                         u4490 003A                         u3930 146D  
                       u3850 084C                         u3770 152C                         u5290 12D8  
                       u4811 0310                         u4651 01DB                         u4571 00DE  
                       u4491 0039                         u3931 146C                         u3851 084B  
                       u3771 152B                         u5291 12D7                         i1l36 16C4  
                       u4820 0320                         u4740 02C5                         u4652 01E2  
                       u4572 00E5                         u3940 1484                         u4900 09C1  
                       u3860 0877                         u3780 1546                         u4741 02C4  
                       u4725 02A3                         u4661 0208                         u4653 01E9  
                       u4645 01B5                         u4581 00FA                         u4573 00EC  
                       u4901 09C0                         u3685 136E                         u3861 0876  
                       u3845 081D                         u3781 1545                         i1l46 174E  
                       i1l38 16E7                         u4830 033D                         u4662 020F  
                       u4582 0101                         u3950 149A                         u3870 089F  
                       u3790 1560                         u4831 033C                         u4735 02BA  
                       u4671 0235                         u4663 0216                         u4591 0126  
                       u4583 0108                         u3951 1499                         u3695 1379  
                       u3871 089E                         u3855 0848                         u3791 155F  
                       u4840 0357                         u4760 02D9                         u4680 025F  
                       u4672 023C                         u4592 012D                         u3960 14A1  
                       u4920 09E3                         u3880 08A4                         u4841 0356  
                       u4825 031B                         u4761 02D8                         u4673 0243  
                       u4593 0134                         u3961 14A0                         u3945 147F  
                       u4921 09E2                         u3881 08A3                         u3865 0873  
                       i1l58 116D                         u4850 0375                         u4770 02DE  
                       u3890 139B                         u4851 0374                         u4835 0339  
                       u4771 02DD                         u4755 02C8                         u4691 026B  
                       u4915 09D5                         u3891 139A                         u4780 02F2  
                       u4692 0272                         u3980 14B3                         u4940 09F3  
                       u4860 097C                         u4845 0353                         u4781 02F1  
                       u4693 0279                         u4685 025A                         u3981 14B2  
                       u4941 09F2                         u4861 097B                         u4790 02F9  
                       u3990 14BA                         u4950 09F9                         u4870 0980  
                       u4791 02F8                         u3991 14B9                         u3975 14A3  
                       u4951 09F8                         u4935 09E8                         u4871 097F  
                       u4960 09FD                         u4880 09A0                         u4961 09FC  
                       u4881 099F                         u4970 0A12                         u4980 0A22  
                       u6557 1FEB                         u4981 0A21                         u4990 0A26  
                       u4991 0A25                         u4975 0A0D                         u4895 09B3  
                       _main 1092                         _hour 00EC                i1___flmul@grs 0034  
                       _ltoa 110D                         btemp 007E             LCD_putch@counter 00AC  
             i1___fladd@aexp 0051               i1___fladd@bexp 0052                         start 0010  
           __end_of_ADC_read 2000   __size_of_LCD_display_value 0020           __size_of_LCD_clear 0037  
         __size_of_LCD_putch 001F           __size_of_LCD_putsc 0031           __size_of_LCD_write 00C0  
              ?_convert_time 0070      __size_of_LCD_initialise 008A             __end_of_LCD_puts 120E  
              ___fltol@sign1 00A9              __end_of___fladd 1000                        ?_main 0070  
                      ?_ltoa 00BB              __end_of___awmod 1394              __end_of___flmul 038A  
            __end_of___fltol 14DC              __end_of___lldiv 1460                        _T1CON 0010  
            __end_of___llmod 1339                        i1l201 102A                        i1l204 1038  
                      i1l280 17BE                        i1l281 17F3                        i1l282 17F7  
                      i1l542 161B                        i1l278 17BA                        i1l703 0D6B  
                      i1l704 0D77                        i1l545 1687                        i1l801 08DC  
                      i1l546 16A0                        i1l803 0973                        i1l661 0B53  
                      i1l814 093D                        i1l815 0949                        i1l807 0921  
                      i1l665 0BFA                        i1l682 0CC5                        i1l674 0D77  
                      i1l667 0BD1                        i1l763 0656                        i1l692 0D0B  
                      i1l757 06EA                        i1l686 0CE9                        i1l695 0D49  
                      i1l776 07EC                        i1l769 06DE                        i1l778 07FE  
      LCD_initialise@counter 00AD                        _TMR1H 000F                        _TMR1L 000E  
                      _PORTB 0006                        _PORTD 0008                 ?i1_LCD_clear 0070  
                      _TRISA 0085                        _TRISB 0086                        _TRISD 0088  
               ?i1_LCD_write 0070                        _delay 10DE               i1___flmul@aexp 0038  
             i1___flmul@bexp 0039               i1___flmul@sign 0033               i1___flmul@temp 003E  
             i1___flmul@prod 003A                        _setup 124C                        _ultoa 1566  
                      pclath 000A                        status 0003                        wtemp0 007E  
         __size_ofi1___fladd 0288              i1___fladd@signs 0050           __size_ofi1___flmul 0361  
        __size_ofi1_ADC_read 0016          __size_of_LCD_cursor 001A              __initialization 0013  
                LCD_cursor@x 00AD                  LCD_cursor@y 00AB                 __end_of_main 10B5  
             ??_convert_time 00B3                 __end_of_ltoa 113D                       ??_main 00E6  
                ?i1___xxtofl 0075                       ??_ltoa 00C1               ADC_read@result 00A3  
          __end_of_LCD_clear 11D6                  LCD_write@rs 00A0            __end_of_LCD_putch 1072  
          __end_of_LCD_putsc 119F                       ?_delay 00A0            __end_of_LCD_write 0AF0  
                     _ADCON0 001F                       _ADCON1 009F             ___llmod@dividend 00A4  
                     _ADRESH 001E                       _ADRESL 009E                       ?_setup 0070  
                     ?_ultoa 00AE                       i1l3300 16BB                       i1l4012 1754  
                     i1l3302 16C0                       i1l4014 1759                       i1l4030 17D8  
                     i1l3304 16C8                       i1l4024 17BF                       i1l4016 17B5  
                     i1l4008 174F                       i1l3322 16EC                       i1l3314 16D8  
                     i1l3306 16D5                       i1l4026 17C7                       i1l4018 17B6  
                     i1l3324 16FB                       i1l3316 16EA                       i1l3308 16D6  
                     i1l4028 17D4                       i1l3350 1746                       i1l3342 1718  
                     i1l3334 1704                       i1l3326 1701                       i1l3502 1146  
                     i1l3352 1747                       i1l3344 1727                       i1l3336 1716  
                     i1l3328 1702                       i1l3512 115E                       i1l3504 1155  
                     i1l3600 0B9D                       i1l3360 07DB                       i1l3514 1023  
                     i1l3354 1748                       i1l3346 172B                       i1l3290 16A3  
                     i1l3506 115C                       i1l3610 0BE0                       i1l3602 0B9E  
                     i1l3530 0B02                       i1l3522 0AF0                       i1l3362 07E2  
                     i1l3516 1027                       i1l3356 174D                       i1l3348 1735  
                     i1l3292 16A7                       i1l3700 0D53                       i1l3620 0BFE  
                     i1l3612 0BE4                       i1l3604 0BB5                       i1l3532 0B07  
                     i1l3540 0B17                       i1l3524 0AF7                       i1l3364 07E6  
                     i1l3518 102E                       i1l3294 16AE                       i1l3710 0D67  
                     i1l3702 0D5B                       i1l3630 0C27                       i1l3622 0C03  
                     i1l3614 0BE5                       i1l3606 0BD5                       i1l3550 0B31  
                     i1l3542 0B1F                       i1l3534 0B0C                       i1l3526 0AFD  
                     i1l3366 07F5                       i1l3358 07D9                       i1l3480 1637  
                     i1l3296 16B4                       i1l3288 16A2                       i1l3712 0D72  
                     i1l3704 0D60                       i1l3640 0C3B                       i1l3632 0C2B  
                     i1l3616 0BEE                       i1l3608 0BDE                       i1l3560 0B48  
                     i1l3552 0B35                       i1l3544 0B24                       i1l3536 0B14  
                     i1l3528 0B01                       i1l3368 07FA                       i1l3800 060B  
                     i1l3720 0397                       i1l3490 169F                       i1l3482 163B  
                     i1l3474 15FF                       i1l3298 16B8                       i1l3714 0D76  
                     i1l3706 0D61                       i1l3650 0CA3                       i1l3642 0C44  
                     i1l3634 0C34                       i1l3626 0C0C                       i1l3618 0BF2  
                     i1l3570 0B61                       i1l3562 0B49                       i1l3554 0B36  
                     i1l3546 0B2A                       i1l3538 0B15                       i1l3810 0630  
                     i1l3802 0619                       i1l3730 03AE                       i1l3722 039B  
                     i1l3484 165F                       i1l3476 1613                       i1l3708 0D65  
                     i1l3652 0CA8                       i1l3636 0C36                       i1l3628 0C23  
                     i1l3644 0C49                       i1l3580 0B75                       i1l3572 0B65  
                     i1l3556 0B3B                       i1l3564 0B4B                       i1l3548 0B2B  
                     i1l3820 0653                       i1l3804 0622                       i1l3812 0636  
                     i1l3740 03C7                       i1l3732 03B0                       i1l3724 039C  
                     i1l3716 038A                       i1l3486 1663                       i1l3478 162F  
                     i1l3494 113D                       i1l3670 0CF0                       i1l3662 0CDB  
                     i1l3646 0C5F                       i1l3654 0CB7                       i1l3638 0C3A  
                     i1l3590 0B89                       i1l3582 0B79                       i1l3574 0B69  
                     i1l3566 0B59                       i1l3558 0B40                       i1l3830 0672  
                     i1l3814 063A                       i1l3806 0626                       i1l3750 03DC  
                     i1l3742 03C8                       i1l3734 03B8                       i1l3726 03A1  
                     i1l3718 0391                       i1l3488 169D                       i1l3496 1144  
                     i1l3680 0CFE                       i1l3672 0CF2                       i1l3664 0CE4  
                     i1l3656 0CCD                       i1l3648 0C9D                       i1l3592 0B8D  
                     i1l3584 0B7D                       i1l3576 0B6D                       i1l3568 0B5D  
                     i1l3840 06B8                       i1l3832 068B                       i1l3824 065B  
                     i1l3816 063B                       i1l3808 0627                       i1l3760 03F7  
                     i1l3752 03E4                       i1l3744 03CD                       i1l3736 03BD  
                     i1l3728 03A6                       i1l3690 0D15                       i1l3682 0D02  
                     i1l3674 0CF7                       i1l3666 0CE8                       i1l3658 0CD2  
                     i1l3594 0B91                       i1l3586 0B81                       i1l3578 0B71  
                     i1l3850 06D7                       i1l3842 06C2                       i1l3826 0660  
                     i1l3834 0691                       i1l3818 063F                       i1l3770 0479  
                     i1l3762 0407                       i1l3754 03E9                       i1l3746 03D2  
                     i1l3738 03C3                       i1l3692 0D23                       i1l3684 0D08  
                     i1l3668 0CED                       i1l3676 0CF9                       i1l3596 0B95  
                     i1l3588 0B85                       i1l3852 06E2                       i1l3844 06C4  
                     i1l3836 069E                       i1l3828 066E                       i1l3780 04E7  
                     i1l3772 0495                       i1l3764 0414                       i1l3756 03EE  
                     i1l3748 03DA                       i1l3860 08C4                       i1l3694 0D27  
                     i1l3678 0CFD                       i1l3598 0B99                       i1l3846 06D2  
                     i1l3838 06A9                       i1l3790 0577                       i1l3782 04F7  
                     i1l3774 04B1                       i1l3766 0431                       i1l3870 08F2  
                     i1l3862 08D4                       i1l3696 0D45                       i1l3688 0D10  
                     i1l3848 06D6                       i1l3792 0587                       i1l3784 0514  
                     i1l3776 04BA                       i1l3768 044D                       i1l3880 0928  
                     i1l3872 08FF                       i1l3864 08E4                       i1l3856 08BB  
                     i1l3698 0D4E                       i1l3794 05B4                       i1l3786 052D  
                     i1l3778 04CA                       i1l3890 0961                       i1l3882 0933  
                     i1l3874 0906                       i1l3858 08C0                       i1l3796 05DA  
                     i1l3788 054A                       i1l3892 0966                       i1l3884 0937  
                     i1l3876 090A                       i1l3868 08ED                       i1l3798 0602  
                     i1l3894 096A                       i1l3886 0941                       i1l3878 0918  
                     i1l3896 096B                       i1l3888 094B                       _INTCON 000B  
                     u500_20 16C0                       u500_21 16BF                       u501_25 16CB  
                     u510_20 174D                       u502_20 16E7                       u510_21 174C  
                     u502_21 16E6                       u503_20 16FB                       u511_20 07E6  
                     u503_21 16FA                       u511_21 07E5                       u504_20 1713  
                     u504_21 1712                       u600_21 04D9                       u600_22 04E0  
                     u600_23 04E7                       u512_25 07ED                       u505_20 1727  
                     u513_20 07FA                       u505_21 1726                       u513_21 07F9  
                     u601_21 0506                       u601_22 050D                       u601_23 0514  
                     u506_20 1732                       u506_21 172E                       u610_25 0604  
                     u602_25 0516                       u531_20 1613                       u531_21 1612  
                     u603_21 053C                       u603_22 0543                       u603_23 054A  
                     u507_24 1735                       u611_25 061B                       u532_20 162F  
                     u540_20 102E                       u508_20 173C                       u620_20 0681  
                     u612_20 0626                       u532_21 162E                       u540_21 102D  
                     u508_21 1738                       u612_21 0625                       u604_21 0569  
                     u604_22 0570                       u604_23 0577                       u620_25 067C  
                     u533_20 163B                       u541_20 0B01                       u621_20 069E  
                     u533_21 163A                       u541_21 0B00                       u621_21 069D  
                     u605_21 0596                       u605_22 059D                       u605_23 05A4  
                     u509_24 173F                       u621_25 069A                       u613_25 0629  
                     u550_20 0BB5                       u542_20 0B07                       u622_20 06B8  
                     u614_20 063A                       u606_20 05C0                       u630_20 0927  
                     u534_21 164A                       u550_21 0BB4                       u542_21 0B06  
                     u622_21 06B7                       u614_21 0639                       u630_21 0926  
                     u534_22 164B                       u534_23 1650                       u534_24 1651  
                     u534_25 1656                       u550_25 0BB1                       u622_25 06B4  
                     u606_25 05BB                       u534_26 1657                       u535_20 1663  
                     u551_20 0BC0                       u543_20 0B0C                       u623_20 06D6  
                     u615_20 063F                       u535_21 1662                       u551_21 0BBE  
                     u543_21 0B0B                       u623_21 06D5                       u615_21 063E  
                     u607_21 05CC                       u607_22 05D3                       u607_23 05DA  
                     u631_25 092C                       u560_20 0C27                       u552_20 0BC1  
                     u544_20 0B2A                       u616_20 0653                       u608_20 05E8  
                     u632_20 0937                       u624_20 08C0                       u536_21 1672  
                     u560_21 0C26                       u544_21 0B29                       u616_21 0652  
                     u632_21 0936                       u624_21 08BF                       u536_22 1673  
                     u536_23 1678                       u536_24 1679                       u536_25 167E  
                     u608_25 05E3                       u536_26 167F                       u537_20 169D  
                     u561_20 0C2B                       u553_20 0BD5                       u545_20 0B35  
                     u617_20 065A                       u633_20 093D                       u625_20 08C4  
                     u537_21 169C                       u561_21 0C2A                       u553_21 0BD4  
                     u545_21 0B34                       u617_21 0659                       u609_21 05F4  
                     u633_21 093C                       u625_21 08C3                       u609_22 05FB  
                     u609_23 0602                       u537_25 1699                       u538_20 1155  
                     u562_20 0C3A                       u554_20 0BE4                       u546_20 0B3B  
                     u618_20 0660                       u634_20 0941                       u626_20 08E4  
                     u538_21 1154                       u562_21 0C39                       u554_21 0BE3  
                     u546_21 0B3A                       u618_21 065F                       u634_21 0940  
                     u626_21 08E3                       u570_25 0CDD                       u539_20 116D  
                     u571_20 0CE8                       u547_20 0B40                       u619_20 0672  
                     u635_20 0956                       u651_20 1753                       u539_21 116C  
                     u571_21 0CE7                       u547_21 0B3F                       u619_21 0671  
                     u651_21 1752                       u563_25 0C3D                       u555_25 0BE7  
                     u635_25 0951                       u627_25 08F7                       u580_20 0D36  
                     u572_20 0CED                       u564_20 0C5F                       u556_20 0BFA  
                     u548_20 0B59                       u636_20 0966                       u628_20 0905  
                     u652_20 17BE                       u572_21 0CEC                       u564_21 0C5E  
                     u556_21 0BF9                       u548_21 0B58                       u636_21 0965  
                     u628_21 0904                       u652_21 17BD                       u564_23 0C5B  
                     u580_25 0D31                       u581_20 0D45                       u573_20 0CF7  
                     u557_20 0BFE                       u549_20 0B5D                       u637_20 096A  
                     u653_20 17D4                       u581_21 0D44                       u573_21 0CF6  
                     u565_21 0C76                       u557_21 0BFD                       u549_21 0B5C  
                     u637_21 0969                       u653_21 17D3                       u565_22 0C77  
                     u565_23 0C7C                       u565_24 0C7D                       u565_25 0C82  
                     u629_25 0919                       u653_25 17D0                       u565_26 0C83  
                     u582_20 0D4E                       u574_20 0CFD                       u566_20 0C8A  
                     u558_20 0C03                       u590_20 03C7                       u654_20 17F3  
                     u582_21 0D4D                       u574_21 0CFC                       u566_21 0C8B  
                     u558_21 0C02                       u590_21 03C6                       u654_21 17F2  
                     u566_22 0C90                       u566_23 0C91                       u583_20 0D53  
                     u575_20 0D02                       u567_20 0CA8                       u591_20 03CD  
                     u583_21 0D52                       u575_21 0D01                       u567_21 0CA7  
                     u559_21 0C15                       u591_21 03CC                       u559_22 0C1C  
                     u559_23 0C23                       u584_20 0D60                       u576_20 0D08  
                     u568_20 0CCD                       u592_20 03D2                       u584_21 0D5F  
                     u576_21 0D07                       u568_21 0CCC                       u592_21 03D1  
                     u656_27 1025                       u585_20 0D65                       u577_20 0D0F  
                     u569_20 0CD2                       u593_20 03E9                       u585_21 0D64  
                     u577_21 0D0E                       u569_21 0CD1                       u593_21 03E8  
                     u586_20 0D76                       u578_20 0D15                       u594_20 03EE  
                     u586_21 0D75                       u578_21 0D14                       u594_21 03ED  
                     u579_20 0D27                       u587_20 039B                       u579_21 0D26  
                     u595_21 043F                       u587_21 039A                       u595_22 0446  
                     u595_23 044D                       u588_20 03A1                       u596_21 045B  
                     u588_21 03A0                       u596_22 0462                       u596_23 0469  
                     u589_20 03A6                       _TMR0IF 005A                       u597_21 0487  
                     u589_21 03A5                       u597_22 048E                       u597_23 0495  
                     u598_21 04A3                       u598_22 04AA                       u598_23 04B1  
                     u599_25 04B3             __end_of_alarmISR 1800             __end_of___xxtofl 0A30  
           ??_ADC_initialise 00A0                       ___flge 15FF                    ??___fladd 00D5  
                  ??___awmod 00A4                    ??___flmul 00BB                    ??___fltol 00A4  
                  ??___lldiv 00A8                    ??___llmod 00A8                       delay@x 00A4  
                     _minute 00EE                       _second 00ED              ___awmod@divisor 00A0  
                     _temp_c 00E6              ___awmod@counter 00A5            __end_ofi1___fladd 0D78  
          __end_ofi1___flmul 06EB             __end_of_set_temp 07D8             __end_of_set_time 124C  
         __size_of__Umul8_16 0029                       saved_w 007E                    ?_ADC_read 00A0  
                     ultoa@c 00B9                       ultoa@v 00B5                   ___flge@ff1 0070  
                 ___flge@ff2 0074                 ___xxtofl@arg 00AF                 ___xxtofl@exp 00AE  
               ___xxtofl@val 00A5      __end_of__initialization 0025                    ?_LCD_puts 00AE  
        __size_ofi1___xxtofl 00BC                   ___fltol@f1 00A0                 ?i1__Umul8_16 0070  
          i1LCD_write@RSmask 0078                 ?_updateClock 00D3               __pcstackCOMMON 0070  
               __pidataBANK1 1FA9                __end_of_delay 110D               _LCD_initialise 14DC  
              __end_of_setup 128F            i1LCD_write@intsON 0072                __end_of_ultoa 15FF  
         LCD_write@TRISB_BAK 00A3                    LCD_puts@c 00B2                    LCD_puts@i 00B1  
                  LCD_puts@s 00AE                 ??i1_ADC_read 0072                 ??_LCD_cursor 00AC  
                 ??_ADC_read 00A2         __size_ofi1_LCD_clear 0031                      ??_delay 00A2  
           LCD_write@RB6_BAK 00A5             LCD_write@RB7_BAK 00A4         __end_of_convert_time 13F8  
                    ??_setup 00DD         __size_ofi1_LCD_write 00AE                      ??_ultoa 00B4  
 __end_of_ADC_channel_select 1FE7                   __pbssBANK1 00ED               i1___xxtofl@arg 0022  
             i1___xxtofl@exp 0021               i1___xxtofl@val 0075                   ??_LCD_puts 00B0  
          __end_of__Umul8_16 10DE                   __pmaintext 1092           __end_ofi1_ADC_read 1039  
         __end_of_LCD_cursor 1053       __end_of_LCD_initialise 1566                      ?___flge 0070  
                 __pintentry 0004           __size_of_tick_tock 0054                 i1LCD_write@c 0077  
                 _clock_mode 00EA                    ?_alarmISR 0070                    ?___xxtofl 00A5  
        i1__Umul8_16@product 0074             LCD_write@counter 00A9                   __stringtab 1000  
         updateClock@evening 00DB           updateClock@minutes 00D5           updateClock@seconds 00D7  
                  ?_set_temp 0070                    ?_set_time 0070              ?_LCD_initialise 0070  
            __size_of___flge 00A2                      ___fladd 0D78                      ___awmod 1339  
                    ___flmul 0029                      ___fltol 1460                      ___lldiv 13F8  
                    ___llmod 12E3                 ??i1___xxtofl 0079                      __ptext1 128F  
                    __ptext2 124C                      __ptext3 14DC                      __ptext4 1FB0  
                    __ptext5 120E                      __ptext6 0805                      __ptext7 1039  
                    __ptext8 1394                      __ptext9 1339                    _T1CONbits 0010  
                 delay@delay 00A0                   ??_alarmISR 0054                   ??___xxtofl 00A9  
           ___awmod@dividend 00A2                    _LCD_clear 119F         end_of_initialization 0025  
                  _LCD_putch 1053                    _LCD_putsc 116E                    _LCD_write 0A30  
           i1ADC_read@result 0073            __end_of_tick_tock 12E3                      ltoa@buf 00C2  
                    ltoa@val 00BB              ___lldiv@divisor 00A0           __end_ofi1___xxtofl 0974  
            ___lldiv@counter 00AD                   ??_set_temp 00E1                   ??_set_time 00DD  
       __size_ofi1__Umul8_16 0027         __size_of_updateClock 00B3        i1__Umul8_16@word_mpld 0076  
         i1LCD_write@RB6_BAK 0075           i1LCD_write@RB7_BAK 0074                  ___fladd@grs 00E0  
      __size_of_convert_time 0064                ___xxtofl@sign 00AD                    i1___fladd 0AF0  
                  i1___flmul 038A            __size_of_ADC_read 0019                   ?_LCD_clear 0070  
                 ?_LCD_putch 0070                   ?_LCD_putsc 0070                   ?_LCD_write 00A0  
                ___flmul@grs 00C1            __size_of_LCD_puts 0038               __end_of___flge 16A1  
               _convert_time 1394           i1LCD_write@counter 0079          start_initialization 0013  
                 ?i1___fladd 0040                   ?i1___flmul 0026                   LCD_putch@c 00AB  
                 LCD_putsc@c 00B1                   LCD_putsc@i 00B0                   LCD_putsc@s 00AF  
                 LCD_write@c 00A7              ___llmod@divisor 00A0              ___llmod@counter 00A9  
             set_temp@temp_f 00E1                     ??___flge 0078           _ADC_channel_select 1FD3  
                 init_fetch0 1FC0                    __Umul8_16 10B5                  __pdataBANK1 00E6  
        ?_ADC_channel_select 0070                    ___fladd@a 00D1                    ___fladd@b 00CD  
    __size_of_ADC_initialise 0010                ??i1_LCD_clear 007B                    ___flmul@a 00B7  
                  ___flmul@b 00B3                    ___latbits 0002                ??i1_LCD_write 0071  
              __pcstackBANK0 0020                __pcstackBANK1 00A0    ADC_channel_select@channel 00A1  
          __size_of_alarmISR 00B1            __size_of___xxtofl 00BC             LCD_clear@counter 00AB  
                ??_LCD_clear 00AB              i1___xxtofl@sign 0020                  ??_LCD_putch 00AB  
                ??_LCD_putsc 00AE                  ??_LCD_write 00A1         ??_ADC_channel_select 00A0  
           ??_LCD_initialise 00AD              LCD_write@RSmask 00A8     i1__Umul8_16@multiplicand 0070  
                   ?___fladd 00CD                LCD_write@temp 00A6                     ?___awmod 00A0  
                   ?___flmul 00B3                     ?___fltol 00A0                     ?___lldiv 00A0  
                   ?___llmod 00A0                   ?__Umul8_16 00A0            __size_of_set_temp 00ED  
          __size_of_set_time 003E                    __pstrings 1000              LCD_write@intsON 00A2  
                   _ADC_read 1FE7                  ??i1___fladd 0048                  ??i1___flmul 002E  
                  alarmISR@x 0057                i1LCD_write@rs 0070               __size_of_delay 002F  
        __end_ofi1_LCD_clear 116E               __size_of_setup 0043               __size_of_ultoa 0099  
        __end_ofi1_LCD_write 174F            interrupt_function 0004                     _LCD_puts 11D6  
                   _PIR1bits 000C                    _tick_tock 128F                   _ADCON0bits 001F  
                __stringbase 100F                ??i1__Umul8_16 0072                ??_updateClock 00DC  
                 ?_tick_tock 0070      LCD_display_value@buffer 00C7                  ??__Umul8_16 00A2  
           __size_of___fladd 0288             __size_of___awmod 005B             __size_of___flmul 0361  
           __size_of___fltol 007C             __size_of___lldiv 0068             __size_of___llmod 0056  
         __end_of__stringtab 1010              i1LCD_write@temp 0076               _ADC_initialise 1FB0  
         i1LCD_clear@counter 007B                  i1_LCD_clear 113D                     _alarmISR 174F  
                   ___xxtofl 0974                  i1_LCD_write 16A1                     __ptext10 06EB  
                   __ptext11 0974                     __ptext20 12E3                     __ptext12 1460  
                   __ptext21 13F8                     __ptext13 0029                     __ptext30 08B8  
                   __ptext22 11D6                     __ptext14 10B5                     __ptext31 038A  
                   __ptext23 1053                     __ptext15 0D78                     __ptext32 07D8  
                   __ptext24 119F                     __ptext16 116E                     __ptext33 0AF0  
                   __ptext25 0A30                     __ptext17 1072                     __ptext34 113D  
                   __ptext26 1FE7                     __ptext18 110D                     __ptext35 16A1  
                   __ptext27 1FD3                     __ptext19 1566                     __ptext36 1023  
                   __ptext28 10DE                     __ptext37 15FF                     __ptext29 174F  
           updateClock@hours 00D3                __size_of_main 0023                __size_of_ltoa 0030  
                   _set_temp 06EB                     _set_time 120E            _LCD_display_value 1072  
        __end_ofi1__Umul8_16 07FF           ?_LCD_display_value 00C3          __end_of_updateClock 08B8  
     __end_of_ADC_initialise 1FC0                   i1_ADC_read 1023                   _LCD_cursor 1039  
        ??_LCD_display_value 00C7                   _INTCONbits 000B                     init_ram0 1FC4  
                  ultoa@base 00B2       LCD_display_value@value 00C3                     intlevel1 0000  
                   ltoa@base 00BF       i1__Umul8_16@multiplier 0078             ___lldiv@dividend 00A4  
  __end_of_LCD_display_value 1092                    stringcode 100A                  ??_tick_tock 00A0  
            ?_ADC_initialise 0070                     ultoa@buf 00BA                     ultoa@val 00AE  
     __Umul8_16@multiplicand 00A0                   _OPTION_REG 0081             ___lldiv@quotient 00A9  
                   stringdir 100A                     stringtab 1000                ___fladd@signs 00DD  
               ___fladd@aexp 00DE                 ___fladd@bexp 00DF  __size_of_ADC_channel_select 0014  
       __Umul8_16@multiplier 00A8                  i1__Umul8_16 07D8                  _updateClock 0805  
          __Umul8_16@product 00A4  
